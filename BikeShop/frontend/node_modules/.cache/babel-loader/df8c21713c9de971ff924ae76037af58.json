{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\realmadrid\\\\Desktop\\\\BikeShop-2\\\\BikeShop\\\\frontend\\\\src\\\\layout\\\\UserEditView.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Form, Button, Card } from 'react-bootstrap';\nimport FormContainer from '../components/FormContainer';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { getUserInfo, updateAdminUser } from '../actions/userAction';\nimport { USER_UPDATE_ADMIN_RESET } from '../constants/userConstants';\n\nconst UserEditView = ({\n  match,\n  history\n}) => {\n  _s();\n\n  const userId = match.params.id;\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [isAdmin, setIsAdmin] = useState(false);\n  const dispatch = useDispatch();\n  const userInfoDetails = useSelector(state => state.userInfoDetails);\n  const {\n    loading,\n    error,\n    user\n  } = userInfoDetails;\n  const userUpdateAdmin = useSelector(state => state.userUpdateAdmin);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate\n  } = userUpdateAdmin;\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({\n        type: USER_UPDATE_ADMIN_RESET\n      });\n      history.push('/admin/userlist');\n    } else {\n      if (!user.name || user._id !== userId) {\n        dispatch(getUserInfo(userId));\n      } else {\n        setName(user.name);\n        setEmail(user.email);\n        setIsAdmin(user.isAdmin);\n      }\n    }\n  }, [dispatch, history, user, userId, successUpdate]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(updateAdminUser({\n      _id: userId,\n      name,\n      email,\n      isAdmin\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/admin/userlist\",\n      className: \"btn btn-light my-3\",\n      children: \"Go Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormContainer, {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Edit User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }, this), loadingUpdate && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 35\n          }, this), errorUpdate && /*#__PURE__*/_jsxDEV(Message, {\n            variant: \"danger\",\n            children: errorUpdate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 33\n          }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 28\n          }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n            variant: \"danger\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 49\n          }, this) : /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: submitHandler,\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"name\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Name:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                placeholder: \"Enter name\",\n                value: name,\n                onChange: e => setName(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"email\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Email:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                placeholder: \"Enter email\",\n                value: email,\n                onChange: e => setEmail(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"isadmin\",\n              children: /*#__PURE__*/_jsxDEV(Form.Check, {\n                type: \"checkbox\",\n                label: \"Is Admin?\",\n                checked: isAdmin,\n                onChange: e => setIsAdmin(e.target.checked)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              className: \"btn-dark btn-block\",\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(UserEditView, \"q+EnFlJYn7MpoMYGesV1LDPzzVw=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = UserEditView;\nexport default UserEditView;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserEditView\");","map":{"version":3,"sources":["C:/Users/realmadrid/Desktop/BikeShop-2/BikeShop/frontend/src/layout/UserEditView.js"],"names":["React","useEffect","useState","Link","useDispatch","useSelector","Form","Button","Card","FormContainer","Message","Loader","getUserInfo","updateAdminUser","USER_UPDATE_ADMIN_RESET","UserEditView","match","history","userId","params","id","name","setName","email","setEmail","isAdmin","setIsAdmin","dispatch","userInfoDetails","state","loading","error","user","userUpdateAdmin","loadingUpdate","errorUpdate","success","successUpdate","type","push","_id","submitHandler","e","preventDefault","target","value","checked"],"mappings":"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","sourcesContent":["import React,{ useEffect, useState} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Form, Button, Card } from 'react-bootstrap'\r\nimport FormContainer from '../components/FormContainer'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getUserInfo, updateAdminUser } from '../actions/userAction'\r\nimport { USER_UPDATE_ADMIN_RESET } from '../constants/userConstants'\r\n\r\n\r\nconst UserEditView = ({match, history}) => {\r\n    const userId = match.params.id\r\n\r\n    const[name, setName] = useState('')\r\n    const[email, setEmail] = useState('')\r\n    const[isAdmin, setIsAdmin] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userInfoDetails = useSelector(state => state.userInfoDetails)\r\n    const { loading, error, user } = userInfoDetails\r\n\r\n    const userUpdateAdmin = useSelector(state => state.userUpdateAdmin)\r\n    const { loading: loadingUpdate, error: errorUpdate, success: successUpdate } = userUpdateAdmin\r\n\r\n\r\n    useEffect(()=>{\r\n        if(successUpdate){\r\n            dispatch({ type: USER_UPDATE_ADMIN_RESET })\r\n            history.push('/admin/userlist')\r\n        }else{\r\n            if(!user.name || user._id  !== userId){\r\n                dispatch(getUserInfo(userId))\r\n            }else{\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setIsAdmin(user.isAdmin)\r\n            }\r\n        }\r\n    },[dispatch, history, user, userId, successUpdate])\r\n\r\n    const submitHandler = (e)=>{\r\n        e.preventDefault()\r\n        dispatch(updateAdminUser({\r\n            _id: userId,\r\n            name,\r\n            email,\r\n            isAdmin\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Link to='/admin/userlist' className='btn btn-light my-3'>\r\n                Go Back\r\n            </Link>\r\n            <FormContainer>\r\n                <Card>\r\n                <Card.Body>\r\n                <h3>Edit User</h3>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> :(\r\n                    <Form onSubmit={submitHandler}>\r\n                        <Form.Group controlId='name'>\r\n                            <Form.Label>Name:</Form.Label>\r\n                            <Form.Control type='text' placeholder='Enter name' value={name} onChange={(e) => setName(e.target.value)}></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId='email'>\r\n                            <Form.Label>Email:</Form.Label>\r\n                            <Form.Control type='text' placeholder='Enter email' value={email} onChange={(e) => setEmail(e.target.value)}></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId='isadmin'>\r\n                            <Form.Check \r\n                                type='checkbox' \r\n                                label='Is Admin?' \r\n                                checked={isAdmin} \r\n                                onChange={(e) => setIsAdmin(e.target.checked)}></Form.Check>\r\n                        </Form.Group>\r\n                        <Button type='submit' className='btn-dark btn-block'>Save</Button>\r\n                    </Form>\r\n                )}\r\n                \r\n                </Card.Body>\r\n                </Card>\r\n            </FormContainer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserEditView\r\n"]},"metadata":{},"sourceType":"module"}