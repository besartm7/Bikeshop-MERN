{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import React,{useEffect}from'react';import{Bar}from'react-chartjs-2';import Loader from'../components/Loader';import{useDispatch,useSelector}from'react-redux';import{getDashboardOrdersData}from'../actions/dashboardAction';var MonthlyOrders=function MonthlyOrders(){var labelsArray=['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];var colors=[\"#399283\",\"#39eec0\",\"#294d46\",\"#a2e1ca\",\"#42952e\",\"#a7d64e\",\"#744822\",\"#ebaa8c\",\"#b02949\",\"#ec4b18\",\"#f79302\",\"#ff0087\"];var options={scales:{yAxes:[{ticks:{beginAtZero:true}}]}};var dispatch=useDispatch();var dashboardOrdersData=useSelector(function(state){return state.dashboardOrdersData;});var loading=dashboardOrdersData.loading,ordersdata=dashboardOrdersData.ordersdata;useEffect(function(){dispatch(getDashboardOrdersData());// eslint-disable-next-line\n},[dispatch]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"header text-center\",children:/*#__PURE__*/_jsx(\"h4\",{className:\"title\",children:\"This year orders\"})}),loading?/*#__PURE__*/_jsx(Loader,{}):/*#__PURE__*/_jsx(Bar,{data:{labels:labelsArray,datasets:[{label:'# orders',data:ordersdata,backgroundColor:colors,borderColor:colors,borderWidth:1}]},options:options})]});};export default MonthlyOrders;","map":{"version":3,"sources":["C:/Users/realmadrid/Desktop/Bike-v3/BikeShop/frontend/src/components/MonthlyOrders.js"],"names":["React","useEffect","Bar","Loader","useDispatch","useSelector","getDashboardOrdersData","MonthlyOrders","labelsArray","colors","options","scales","yAxes","ticks","beginAtZero","dispatch","dashboardOrdersData","state","loading","ordersdata","labels","datasets","label","data","backgroundColor","borderColor","borderWidth"],"mappings":"6IAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,KAAgC,OAAhC,CACA,OAASC,GAAT,KAAoB,iBAApB,CACA,MAAOC,CAAAA,MAAP,KAAmB,sBAAnB,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,sBAAT,KAAuC,4BAAvC,CAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CACxB,GAAMC,CAAAA,WAAW,CAAI,CAAC,KAAD,CAAO,KAAP,CAAc,KAAd,CAAqB,KAArB,CAA4B,KAA5B,CAAmC,KAAnC,CAA0C,KAA1C,CAAiD,KAAjD,CAAwD,KAAxD,CAA+D,KAA/D,CAAsE,KAAtE,CAA6E,KAA7E,CAArB,CACA,GAAMC,CAAAA,MAAM,CAAG,CAAC,SAAD,CAAY,SAAZ,CAAuB,SAAvB,CAAkC,SAAlC,CAA6C,SAA7C,CAAwD,SAAxD,CAAmE,SAAnE,CAA8E,SAA9E,CAAyF,SAAzF,CAAoG,SAApG,CAA+G,SAA/G,CAA0H,SAA1H,CAAf,CACA,GAAMC,CAAAA,OAAO,CAAG,CACdC,MAAM,CAAE,CACNC,KAAK,CAAE,CACL,CACEC,KAAK,CAAE,CACLC,WAAW,CAAE,IADR,CADT,CADK,CADD,CADM,CAAhB,CAWA,GAAMC,CAAAA,QAAQ,CAAGX,WAAW,EAA5B,CAEA,GAAMY,CAAAA,mBAAmB,CAAGX,WAAW,CAAC,SAAAY,KAAK,QAAIA,CAAAA,KAAK,CAACD,mBAAV,EAAN,CAAvC,CAhBwB,GAiBhBE,CAAAA,OAjBgB,CAiBOF,mBAjBP,CAiBhBE,OAjBgB,CAiBPC,UAjBO,CAiBOH,mBAjBP,CAiBPG,UAjBO,CAmBxBlB,SAAS,CAAC,UAAI,CACZc,QAAQ,CAACT,sBAAsB,EAAvB,CAAR,CACA;AACD,CAHQ,CAGP,CAACS,QAAD,CAHO,CAAT,CAKA,mBACI,wCACE,YAAK,SAAS,CAAC,oBAAf,uBACE,WAAI,SAAS,CAAC,OAAd,8BADF,EADF,CAIIG,OAAO,cAAK,KAAC,MAAD,IAAL,cAEP,KAAC,GAAD,EACE,IAAI,CAAE,CACJE,MAAM,CAAEZ,WADJ,CAEJa,QAAQ,CAAE,CAAC,CACTC,KAAK,CAAE,UADE,CAETC,IAAI,CAAEJ,UAFG,CAGTK,eAAe,CAAEf,MAHR,CAITgB,WAAW,CAAEhB,MAJJ,CAKTiB,WAAW,CAAE,CALJ,CAAD,CAFN,CADR,CAWE,OAAO,CAAEhB,OAXX,EANJ,GADJ,CAuBH,CA/CD,CAiDA,cAAeH,CAAAA,aAAf","sourcesContent":["import React,{ useEffect } from 'react'\r\nimport { Bar } from 'react-chartjs-2'\r\nimport Loader from '../components/Loader';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getDashboardOrdersData } from '../actions/dashboardAction'\r\n\r\nconst MonthlyOrders = () => {\r\n    const labelsArray  = ['Jan','Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\r\n    const colors = [\"#399283\", \"#39eec0\", \"#294d46\", \"#a2e1ca\", \"#42952e\", \"#a7d64e\", \"#744822\", \"#ebaa8c\", \"#b02949\", \"#ec4b18\", \"#f79302\", \"#ff0087\"]\r\n    const options = {\r\n      scales: {\r\n        yAxes: [\r\n          {\r\n            ticks: {\r\n              beginAtZero: true,\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    }\r\n    const dispatch = useDispatch();\r\n\r\n    const dashboardOrdersData = useSelector(state => state.dashboardOrdersData)\r\n    const { loading, ordersdata} = dashboardOrdersData\r\n    \r\n    useEffect(()=>{\r\n      dispatch(getDashboardOrdersData())\r\n      // eslint-disable-next-line\r\n    },[dispatch])\r\n\r\n    return (\r\n        <> \r\n          <div className='header text-center'>\r\n            <h4 className='title'>This year orders</h4>\r\n          </div>\r\n          { loading ? ( <Loader />) :(\r\n            \r\n            <Bar \r\n              data={{\r\n                labels: labelsArray,\r\n                datasets: [{\r\n                  label: '# orders',\r\n                  data: ordersdata,\r\n                  backgroundColor: colors,\r\n                  borderColor: colors,\r\n                  borderWidth: 1,\r\n                }]\r\n              }} \r\n              options={options}\r\n            />\r\n          )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MonthlyOrders"]},"metadata":{},"sourceType":"module"}