{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\realmadrid\\\\Desktop\\\\BikeShop-2\\\\BikeShop\\\\frontend\\\\src\\\\components\\\\UsersChart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Doughnut } from 'react-chartjs-2';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getDashboardUsersData } from '../actions/dashboardAction';\nconst data = {\n  labels: ['Total', 'Admins', 'Users', 'New'],\n  datasets: [{\n    label: '# of Votes',\n    data: [12, 19, 3, 6],\n    backgroundColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n    borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n    borderWidth: 1\n  }]\n};\n\nconst UsersChart = () => {\n  _s();\n\n  const [labelsArray, setLabels] = useState(['Total', 'Admins', 'Users', 'New']);\n  const dispatch = useDispatch();\n  const dashboardData = useSelector(state => state.dashboardData);\n  const {\n    loading,\n    error,\n    usersdata\n  } = dashboardData;\n  useEffect(() => {\n    dispatch(getDashboardUsersData()); // eslint-disable-next-line \n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: \"Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(Doughnut, {\n      data: {\n        labels: labelsArray,\n        datasets: [{\n          label: '# of Votes',\n          data: usersdata,\n          backgroundColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n          borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n          borderWidth: 1\n        }]\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(UsersChart, \"5HmB6T2+ROh4G9pL6KiQ5aJs8XM=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = UsersChart;\nexport default UsersChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"UsersChart\");","map":{"version":3,"sources":["C:/Users/realmadrid/Desktop/BikeShop-2/BikeShop/frontend/src/components/UsersChart.js"],"names":["React","useState","useEffect","Doughnut","Message","Loader","useDispatch","useSelector","getDashboardUsersData","data","labels","datasets","label","backgroundColor","borderColor","borderWidth","UsersChart","labelsArray","setLabels","dispatch","dashboardData","state","loading","error","usersdata"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAwBC,SAAxB,QAAwC,OAAxC;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,qBAAT,QAAsC,4BAAtC;AAEA,MAAMC,IAAI,GAAG;AACXC,EAAAA,MAAM,EAAE,CAAC,OAAD,EAAU,QAAV,EAAoB,OAApB,EAA6B,KAA7B,CADG;AAEXC,EAAAA,QAAQ,EAAE,CACR;AACEC,IAAAA,KAAK,EAAE,YADT;AAEEH,IAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,CAAT,EAAY,CAAZ,CAFR;AAGEI,IAAAA,eAAe,EAAE,CACf,uBADe,EAEf,uBAFe,EAGf,uBAHe,EAIf,uBAJe,EAKf,wBALe,EAMf,uBANe,CAHnB;AAWEC,IAAAA,WAAW,EAAE,CACX,uBADW,EAEX,uBAFW,EAGX,uBAHW,EAIX,uBAJW,EAKX,wBALW,EAMX,uBANW,CAXf;AAmBEC,IAAAA,WAAW,EAAE;AAnBf,GADQ;AAFC,CAAb;;AA2BA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAK,CAACC,WAAD,EAAcC,SAAd,IAA2BjB,QAAQ,CAAC,CAAC,OAAD,EAAU,QAAV,EAAoB,OAApB,EAA6B,KAA7B,CAAD,CAAxC;AAEA,QAAMkB,QAAQ,GAAGb,WAAW,EAA5B;AAEE,QAAMc,aAAa,GAAGb,WAAW,CAACc,KAAK,IAAIA,KAAK,CAACD,aAAhB,CAAjC;AACA,QAAM;AAAEE,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA+BJ,aAArC;AAGAlB,EAAAA,SAAS,CAAC,MAAI;AACViB,IAAAA,QAAQ,CAACX,qBAAqB,EAAtB,CAAR,CADU,CAEV;AACH,GAHQ,EAGP,CAACW,QAAD,CAHO,CAAT;AAKF,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,6BACE;AAAI,QAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,EAIIG,OAAO,gBAAK,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAAL,gBAGP,QAAC,QAAD;AAAU,MAAA,IAAI,EAAE;AACdZ,QAAAA,MAAM,EAAEO,WADM;AAEdN,QAAAA,QAAQ,EAAE,CACR;AACEC,UAAAA,KAAK,EAAE,YADT;AAEEH,UAAAA,IAAI,EAAEe,SAFR;AAGEX,UAAAA,eAAe,EAAE,CACf,uBADe,EAEf,uBAFe,EAGf,uBAHe,EAIf,uBAJe,EAKf,wBALe,EAMf,uBANe,CAHnB;AAWEC,UAAAA,WAAW,EAAE,CACX,uBADW,EAEX,uBAFW,EAGX,uBAHW,EAIX,uBAJW,EAKX,wBALW,EAMX,uBANW,CAXf;AAmBEC,UAAAA,WAAW,EAAE;AAnBf,SADQ;AAFI;AAAhB;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA,kBADF;AAqCD,CAnDD;;GAAMC,U;UAGaV,W,EAEOC,W;;;KALpBS,U;AAqDN,eAAeA,UAAf","sourcesContent":["import React,{useState, useEffect} from 'react'\r\nimport { Doughnut } from 'react-chartjs-2'\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getDashboardUsersData } from '../actions/dashboardAction'\r\n\r\nconst data = {\r\n  labels: ['Total', 'Admins', 'Users', 'New'],\r\n  datasets: [\r\n    {\r\n      label: '# of Votes',\r\n      data: [12, 19, 3, 6],\r\n      backgroundColor: [\r\n        'rgba(255, 99, 132, 1)',\r\n        'rgba(54, 162, 235, 1)',\r\n        'rgba(255, 206, 86, 1)',\r\n        'rgba(75, 192, 192, 1)',\r\n        'rgba(153, 102, 255, 1)',\r\n        'rgba(255, 159, 64, 1)',\r\n      ],\r\n      borderColor: [\r\n        'rgba(255, 99, 132, 1)',\r\n        'rgba(54, 162, 235, 1)',\r\n        'rgba(255, 206, 86, 1)',\r\n        'rgba(75, 192, 192, 1)',\r\n        'rgba(153, 102, 255, 1)',\r\n        'rgba(255, 159, 64, 1)',\r\n      ],\r\n      borderWidth: 1,\r\n    },\r\n  ],\r\n}\r\n\r\nconst UsersChart = () => {\r\n  const[labelsArray, setLabels] = useState(['Total', 'Admins', 'Users', 'New'])\r\n\r\n  const dispatch = useDispatch();\r\n\r\n    const dashboardData = useSelector(state => state.dashboardData)\r\n    const { loading, error, usersdata} = dashboardData\r\n    \r\n\r\n    useEffect(()=>{\r\n        dispatch(getDashboardUsersData())\r\n        // eslint-disable-next-line \r\n    },[dispatch])\r\n\r\n  return(\r\n    <>\r\n      <div className='header'>\r\n        <h1 className='title'>Users</h1>\r\n      </div>\r\n      { loading ? ( <Loader />) :(\r\n        \r\n      \r\n        <Doughnut data={{ \r\n          labels: labelsArray,\r\n          datasets: [\r\n            {\r\n              label: '# of Votes',\r\n              data: usersdata,\r\n              backgroundColor: [\r\n                'rgba(255, 99, 132, 1)',\r\n                'rgba(54, 162, 235, 1)',\r\n                'rgba(255, 206, 86, 1)',\r\n                'rgba(75, 192, 192, 1)',\r\n                'rgba(153, 102, 255, 1)',\r\n                'rgba(255, 159, 64, 1)',\r\n              ],\r\n              borderColor: [\r\n                'rgba(255, 99, 132, 1)',\r\n                'rgba(54, 162, 235, 1)',\r\n                'rgba(255, 206, 86, 1)',\r\n                'rgba(75, 192, 192, 1)',\r\n                'rgba(153, 102, 255, 1)',\r\n                'rgba(255, 159, 64, 1)',\r\n              ],\r\n              borderWidth: 1,\r\n            },\r\n          ],\r\n        }} />\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UsersChart\r\n\r\n"]},"metadata":{},"sourceType":"module"}