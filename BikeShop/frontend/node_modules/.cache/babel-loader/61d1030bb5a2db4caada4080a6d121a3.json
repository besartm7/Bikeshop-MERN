{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { bikeListReducer, bikeReducer, bikeDeleteReducer, bikeCreateReducer, bikeUpdateReducer, bikeCreateReviewReducer, bikeTopRatedReducer } from './reducers/bikeReducers';\nimport { cartReducer } from './reducers/cartReducers';\nimport { userLoginReducer, userRegisterReducer, userInfoReducer, userUpdateReducer, userListReducer, userDeleteReducer, userUpdateAdminReducer } from './reducers/userReducers';\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, orderListMyReducer, orderListReducer, orderDeliverReducer } from './reducers/orderReducers';\nimport { dashboardDataReducer, dashboardOrdersDataReducer } from './reducers/dashboardReducers';\nconst reducer = combineReducers({\n  bikeList: bikeListReducer,\n  bikeDetails: bikeReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userInfoDetails: userInfoReducer,\n  userUpdate: userUpdateReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderListMy: orderListMyReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdateAdmin: userUpdateAdminReducer,\n  bikeDelete: bikeDeleteReducer,\n  bikeCreate: bikeCreateReducer,\n  bikeUpdate: bikeUpdateReducer,\n  orderList: orderListReducer,\n  orderDeliver: orderDeliverReducer,\n  bikeCreateReview: bikeCreateReviewReducer,\n  bikeTopRated: bikeTopRatedReducer,\n  dashboardData: dashboardDataReducer,\n  dashboardOrdersData: dashboardOrdersDataReducer\n});\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {};\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["C:/Users/realmadrid/Desktop/BikeShop-2/BikeShop/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","bikeListReducer","bikeReducer","bikeDeleteReducer","bikeCreateReducer","bikeUpdateReducer","bikeCreateReviewReducer","bikeTopRatedReducer","cartReducer","userLoginReducer","userRegisterReducer","userInfoReducer","userUpdateReducer","userListReducer","userDeleteReducer","userUpdateAdminReducer","orderCreateReducer","orderDetailsReducer","orderPayReducer","orderListMyReducer","orderListReducer","orderDeliverReducer","dashboardDataReducer","dashboardOrdersDataReducer","reducer","bikeList","bikeDetails","cart","userLogin","userRegister","userInfoDetails","userUpdate","orderCreate","orderDetails","orderPay","orderListMy","userList","userDelete","userUpdateAdmin","bikeDelete","bikeCreate","bikeUpdate","orderList","orderDeliver","bikeCreateReview","bikeTopRated","dashboardData","dashboardOrdersData","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","shippingAddressFromStorage","initialState","cartItems","shippingAddress","userInfo","middleware","store"],"mappings":"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","sourcesContent":["import { createStore, combineReducers, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { bikeListReducer, bikeReducer, bikeDeleteReducer, bikeCreateReducer, bikeUpdateReducer, bikeCreateReviewReducer, bikeTopRatedReducer } from './reducers/bikeReducers';\r\nimport { cartReducer } from './reducers/cartReducers';\r\nimport { userLoginReducer, userRegisterReducer, userInfoReducer, userUpdateReducer, userListReducer, userDeleteReducer,userUpdateAdminReducer } from './reducers/userReducers';\r\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, orderListMyReducer, orderListReducer, orderDeliverReducer } from './reducers/orderReducers'\r\nimport { dashboardDataReducer, dashboardOrdersDataReducer } from './reducers/dashboardReducers'\r\n\r\nconst reducer = combineReducers({\r\n    bikeList: bikeListReducer,\r\n    bikeDetails: bikeReducer,\r\n    cart: cartReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userInfoDetails: userInfoReducer,\r\n    userUpdate: userUpdateReducer,\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderListMy: orderListMyReducer,\r\n    userList: userListReducer,\r\n    userDelete: userDeleteReducer,\r\n    userUpdateAdmin: userUpdateAdminReducer,\r\n    bikeDelete:bikeDeleteReducer,\r\n    bikeCreate:bikeCreateReducer,\r\n    bikeUpdate: bikeUpdateReducer,\r\n    orderList: orderListReducer,\r\n    orderDeliver: orderDeliverReducer,\r\n    bikeCreateReview: bikeCreateReviewReducer,\r\n    bikeTopRated: bikeTopRatedReducer,\r\n    dashboardData: dashboardDataReducer,\r\n    dashboardOrdersData: dashboardOrdersDataReducer\r\n});\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {}\r\n\r\nconst initialState = {\r\n    cart: { \r\n        cartItems: cartItemsFromStorage, \r\n        shippingAddress: shippingAddressFromStorage \r\n    },\r\n    userLogin: {userInfo: userInfoFromStorage},\r\n\r\n\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    reducer, initialState, composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;"]},"metadata":{},"sourceType":"module"}