{"version":3,"sources":["components/SearchForm.js","constants/userConstants.js","constants/orderConstants.js","constants/cartConstants.js","actions/userAction.js","components/Header.js","components/HRLine.js","components/AdminSidebar.js","components/Footer.js","components/Rating.js","components/Product.js","components/Message.js","components/Loader.js","constants/bikeConstants.js","actions/bikeAction.js","components/CarouselBikes.js","layout/HomeView.js","components/PaginationBox.js","layout/BikeStore.js","components/Rate.js","components/BikeColor.js","layout/BikeView.js","actions/cartAction.js","layout/CartScreen.js","components/FormContainer.js","layout/LoginScreen.js","layout/RegisterScreen.js","components/CheckoutSteps.js","layout/ShippingScreen.js","layout/PaymentScreen.js","layout/PlaceOrderScreen.js","actions/orderAction.js","layout/OrderScreen.js","layout/MyProfile.js","components/PaginationOnly.js","constants/settingConstants.js","actions/settingsAction.js","layout/MyOrders.js","layout/Contact.js","layout/admin/UserListView.js","layout/admin/UserEditView.js","layout/admin/BikeListView.js","components/FormLargeContainer.js","components/ExtractBikeColor.js","layout/admin/CreateBikeView.js","layout/admin/EditBikeView.js","layout/admin/OrderListAdminView.js","constants/dashboardConstatns.js","components/UsersChart.js","actions/dashboardAction.js","components/MonthlyOrders.js","components/UndeliveredOrders.js","layout/admin/DashboardView.js","layout/admin/Settings.js","App.js","serviceWorker.js","store.js","reducers/bikeReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","reducers/dashboardReducers.js","reducers/settingsReducers.js","index.js"],"names":["SearchForm","history","useState","keyword","setKeyword","Form","onSubmit","e","preventDefault","trim","push","inline","className","InputGroup","Control","type","name","onChange","target","value","placeholder","Append","Button","variant","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_INFO_REQUEST","USER_INFO_SUCCESS","USER_INFO_FAIL","USER_INFO_RESET","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_ADMIN_REQUEST","USER_UPDATE_ADMIN_SUCCESS","USER_UPDATE_ADMIN_FAIL","USER_UPDATE_ADMIN_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","CART_REMOVE_ALL_ITEMS","getUserInfo","path","dispatch","getState","a","userInfo","userLogin","config","headers","Authorization","token","axios","get","data","payload","response","message","logout","localStorage","removeItem","Header","useDispatch","useSelector","state","Navbar","collapseOnSelect","expand","Container","fluid","Brand","href","Image","src","Toggle","aria-controls","Collapse","id","Nav","to","Link","render","isAdmin","NavDropdown","title","Item","onClick","HRLine","AdminSidebar","active","setActive","Col","Footer","Row","Rating","text","color","style","Product","bike","Card","_id","Img","image","cariant","Body","Title","as","Text","md","rating","numReviews","price","xs","disabled","countInStock","Message","children","Alert","defaultProps","Loader","Spinner","animation","role","BIKE_LIST_REQUEST","BIKE_LIST_SUCCESS","BIKE_LIST_FAIL","BIKE_REQUEST","BIKE_SUCCESS","BIKE_FAIL","BIKE_DELETE_REQUEST","BIKE_DELETE_SUCCESS","BIKE_DELETE_FAIL","BIKE_CREATE_REQUEST","BIKE_CREATE_SUCCESS","BIKE_CREATE_FAIL","BIKE_CREATE_RESET","BIKE_UPDATE_REQUEST","BIKE_UPDATE_SUCCESS","BIKE_UPDATE_FAIL","BIKE_UPDATE_RESET","BIKE_CREATE_REVIEW_REQUEST","BIKE_CREATE_REVIEW_SUCCESS","BIKE_CREATE_REVIEW_FAIL","BIKE_CREATE_REVIEW_RESET","TOP_BIKE_REQUEST","TOP_BIKE_SUCCESS","TOP_BIKE_FAIL","topRatedBikes","listBikes","pageNumber","items","detailsBike","deleteBike","delete","CarouselBikes","bikeTopRated","loading","error","topbikes","useEffect","Carousel","map","alt","Caption","HomeView","sm","xl","PaginationBox","pages","page","Pagination","size","Array","keys","x","BikeStore","match","params","bikeList","bikes","Rate","ratevalue","rateChange","setValue","BikeColor","bikeColors","length","c","i","backgroundColor","BikeView","qty","setQty","setRating","comment","setComment","bikeDetails","bikeCreateReview","errorReview","successReview","success","alert","ListGroup","colors","brand","description","reviews","review","createdAt","substring","bikeId","post","Group","controlId","Label","props","row","addToCart","setItem","JSON","stringify","cart","cartItems","CartScreen","location","bikeID","search","Number","split","removeFromCartHandler","removeFromCart","item","rounded","reduce","acc","toFixed","FormContainer","LoginScreen","email","setEmail","password","setPassword","redirect","login","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","userRegister","register","CheckoutSteps","step1","step2","step3","step4","class","ShippingScreen","shippingAddress","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","PaymentScreen","paymentMethod","setPaymentMethod","Check","label","checked","PlaceOrderScreen","console","log","itemsPrice","shippingPrice","taxPrice","totalPrice","orderCreate","order","index","createOrder","orderItems","OrderScreen","orderId","sdkReady","setSdkReady","orderDetails","orderPay","successPay","loadingPay","orderDeliver","successDeliver","loadingDeliver","user","addPayPalScript","clientId","script","document","createElement","async","onload","body","appendChild","isPaid","window","paypal","isDelivered","deliveredAt","paidAt","amount","onSuccess","paymentResult","put","payOrder","deliverOrder","MyProfile","userInfoDetails","userUpdate","span","offset","updateUserInfo","PaginationOnly","rout","SETTING_ITEMSPP_REQUEST","SETTING_ITEMSPP_SUCCESS","SETTING_ITEMSPP_FAIL","SETTING_ITEMSPP_UPDATE_REQUEST","SETTING_ITEMSPP_UPDATE_SUCCESS","SETTING_ITEMSPP_UPDATE_FAIL","SETTING_ITEMSPP_UPDATE_RESET","getItemspp","MyOrders","setItems","orderListMy","loadingOrders","errorOrders","orders","itemspp","settingItemspp","listMyOrders","Table","hover","responsive","Contact","roundedCircle","action","rel","UserListView","userList","users","successDelete","userDelete","listUsers","deleteHandler","confirm","deleteUser","UserEditView","userId","setIsAdmin","userUpdateAdmin","loadingUpdate","errorUpdate","successUpdate","updateAdminUser","BikeListView","bikeDelete","loadingDelete","errorDelete","bikeCreate","successCreate","createdBike","category","FormLargeContainer","ExtractBikeColor","removeColorHandler","CreateBikeView","setImage","setBrand","setCategory","setPrice","setCountInStock","setColors","setDescription","uploading","setUploading","newUpload","setNewUpload","fileUpload","setFileUpload","uploadFileHandler","file","files","formData","FormData","append","URL","createObjectURL","width","thumbnail","File","custom","column","getColors","colorsArray","filteredColors","filter","rows","EditBikeView","bikeUpdate","updateBike","OrderListAdminView","orderList","listOrders","DASHBOARD_USERSDATA_REQUEST","DASHBOARD_USERSDATA_SUCCESS","DASHBOARD_USERSDATA_FAIL","DASHBOARD_ORDERDATA_REQUEST","DASHBOARD_ORDERDATA_SUCCESS","DASHBOARD_ORDERDATA_FAIL","DASHBOARD_UNDELIVERED_REQUEST","DASHBOARD_UNDELIVERED_SUCCESS","DASHBOARD_UNDELIVERED_FAIL","UsersChart","dashboardData","usersdata","labels","datasets","borderColor","borderWidth","MonthlyOrders","dashboardOrdersData","ordersdata","options","scales","yAxes","ticks","beginAtZero","UndeliveredOrders","dashboardUndelivered","undelivered","DashboardView","Settings","updateSettingItemspp","updateItemspp","App","component","exact","Boolean","hostname","reducer","combineReducers","existItems","find","cartItemsFromStorage","getItem","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"6SAiCeA,EA9BI,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAAa,EACAC,mBAAS,IADT,mBACvBC,EADuB,KACdC,EADc,KAW9B,OACI,cAACC,EAAA,EAAD,CAAMC,SATY,SAACC,GACnBA,EAAEC,iBACCL,EAAQM,OACPR,EAAQS,KAAR,kBAAwBP,IAExBF,EAAQS,KAAK,MAIcC,QAAM,EAACC,UAAU,gBAAhD,SACI,eAACC,EAAA,EAAD,WACI,cAACR,EAAA,EAAKS,QAAN,CACIF,UAAU,eACVG,KAAK,OACLC,KAAK,IACLC,SAAU,SAACV,GAAD,OAAOH,EAAWG,EAAEW,OAAOC,QACrCC,YAAY,cAGhB,cAACP,EAAA,EAAWQ,OAAZ,UACI,eAACC,EAAA,EAAD,CAAQV,UAAU,aAAaG,KAAK,SAASQ,QAAQ,oBAArD,cAA0E,mBAAGX,UAAU,gBAAb,0B,yCC1BjFY,EAAqB,qBACrBC,EAAqB,qBACrBC,EAAkB,kBAClBC,EAAc,cAEdC,EAAwB,wBACxBC,EAAwB,wBACxBC,EAAqB,qBAErBC,EAAoB,oBACpBC,EAAoB,oBACpBC,EAAiB,iBACjBC,EAAkB,kBAElBC,EAAsB,sBACtBC,EAAsB,sBACtBC,EAAmB,mBAGnBC,EAAoB,oBACpBC,EAAoB,oBACpBC,EAAiB,iBACjBC,EAAkB,kBAElBC,EAAsB,sBACtBC,EAAsB,sBACtBC,EAAmB,mBAEnBC,EAA4B,4BAC5BC,EAA4B,4BAC5BC,EAAyB,yBACzBC,EAA0B,0BC/B1BC,EAAuB,uBACvBC,EAAuB,uBACvBC,GAAoB,oBAEpBC,GAAwB,wBACxBC,GAAwB,wBACxBC,GAAqB,qBAErBC,GAAoB,oBACpBC,GAAoB,oBACpBC,GAAiB,iBACjBC,GAAkB,kBAElBC,GAAwB,wBACxBC,GAAwB,wBACxBC,GAAqB,qBACrBC,GAAsB,sBAEtBC,GAAqB,qBACrBC,GAAqB,qBACrBC,GAAkB,kBAElBC,GAAwB,wBACxBC,GAAwB,wBACxBC,GAAqB,qBACrBC,GAAsB,sBCzBtBC,GAAgB,gBAChBC,GAAmB,mBACnBC,GAA6B,6BAC7BC,GAA2B,2BAC3BC,GAAuB,wBC2FvBC,GAAc,SAACC,GAAD,8CAAU,WAAMC,EAAUC,GAAhB,uBAAAC,EAAA,sEAE7BF,EAAS,CACL9D,KAAMgB,IAHmB,EAMO+C,IAAfE,EANQ,EAMrBC,UAAaD,SAEfE,EAAS,CACXC,QAAS,CACL,eAAe,mBACfC,cAAc,UAAD,OAAYJ,EAASK,SAXb,SAeRC,IAAMC,IAAN,qBAAwBX,GAAQM,GAfxB,gBAetBM,EAfsB,EAetBA,KAEPX,EAAS,CACL9D,KAAMiB,EACNyD,QAASD,IAnBgB,kDAsB7BX,EAAS,CACL9D,KAAMkB,EACNwD,QAAS,KAAMC,UAAY,KAAMA,SAASF,KAAKG,QAAU,KAAMD,SAASF,KAAKG,QAAU,KAAMA,UAxBpE,0DAAV,yDAgJdC,GAAS,kBAAM,SAACf,GACzBgB,aAAaC,WAAW,YACxBjB,EAAS,CAAE9D,KAAMY,IACjBkD,EAAS,CAAE9D,KAAMmB,IACjB2C,EAAS,CAAE9D,KAAM+C,KACjBe,EAAS,CAAE9D,KAAM0B,IACjBoC,EAAS,CAAE9D,KAAM2D,KACjBmB,aAAaC,WAAW,eC1LbC,GApDA,WACX,IAAMlB,EAAWmB,cAGThB,EADUiB,aAAY,SAAAC,GAAK,OAAIA,EAAMjB,aACrCD,SAMR,OACI,iCACI,cAACmB,EAAA,EAAD,CAASC,kBAAgB,EAAExF,UAAU,UAAWyF,OAAO,KAAvD,SACI,eAACC,EAAA,EAAD,CAAWC,OAAK,EAAhB,UACI,cAACJ,EAAA,EAAOK,MAAR,CAAcC,KAAK,IAAI7F,UAAU,aAAjC,SAA8C,cAAC8F,EAAA,EAAD,CAAOC,IAAG,qBAAwBJ,OAAK,MACrF,cAACJ,EAAA,EAAOS,OAAR,CAAeC,gBAAc,0BAC7B,eAACV,EAAA,EAAOW,SAAR,CAAiBC,GAAG,wBAApB,UACI,eAACC,EAAA,EAAD,CAAKpG,UAAU,2BAAf,UACI,cAAC,gBAAD,CAAeqG,GAAG,IAAlB,SACI,eAACD,EAAA,EAAIE,KAAL,CAAUtG,UAAU,OAApB,UAA2B,mBAAGA,UAAU,gBAAxC,aAEJ,cAAC,gBAAD,CAAeqG,GAAG,SAAlB,SACI,eAACD,EAAA,EAAIE,KAAL,CAAUtG,UAAU,OAApB,UAA2B,mBAAGA,UAAU,mBAAxC,mBAEJ,cAAC,gBAAD,CAAeqG,GAAG,WAAlB,SACI,eAACD,EAAA,EAAIE,KAAL,CAAUtG,UAAU,OAApB,UAA2B,mBAAGA,UAAU,iBAAxC,mBAGR,cAAC,IAAD,CAAOuG,OAAQ,gBAAElH,EAAF,EAAEA,QAAF,OAAe,cAAC,EAAD,CAAYA,QAASA,OACnD,eAAC+G,EAAA,EAAD,CAAKpG,UAAU,sBAAf,UACKoE,EACIA,EAASoC,QAQM,GARK,eAACC,EAAA,EAAD,CAAaC,MAAOtC,EAAShE,KAAO+F,GAAG,WAAvC,UACjB,cAAC,gBAAD,CAAeE,GAAG,WAAlB,SACI,eAACI,EAAA,EAAYE,KAAb,WAAkB,mBAAG3G,UAAU,gBAA/B,gBAEJ,cAAC,gBAAD,CAAeqG,GAAG,YAAlB,SACI,eAACI,EAAA,EAAYE,KAAb,WAAkB,mBAAG3G,UAAU,gBAA/B,kBAEJ,eAACyG,EAAA,EAAYE,KAAb,CAAkBC,QAhC5B,WAClB3C,EAASe,OA+BmB,UAA0C,mBAAGhF,UAAU,wBAAvD,gBAGJ,eAACoG,EAAA,EAAIE,KAAL,CAAUT,KAAK,SAAf,UAAwB,mBAAG7F,UAAU,gBAArC,aAEJ,eAACoG,EAAA,EAAIE,KAAL,CAAUT,KAAK,QAAf,UAAuB,mBAAG7F,UAAU,yBAApC,yBC3Cb6G,GANA,WACX,OACI,oBAAI7G,UAAU,eCsEP8G,GAnEM,WAAO,IAAD,EACKxH,mBAAS,IADd,mBAChByH,EADgB,KACRC,EADQ,KAGjB/C,EAAWmB,cAiBjB,OACE,mCACE,cAAC6B,EAAA,EAAD,CAAKjH,UAAU,mBAAf,SACA,eAACuF,EAAA,EAAD,CAAQY,GAAG,UAAUnG,UAAS,UAAK+G,GAAnC,UACE,cAACE,EAAA,EAAD,CAAKjH,UAAU,iBAAf,SACE,cAACU,EAAA,EAAD,CACEP,KAAK,SACLQ,QAAQ,eACRwF,GAAG,kBACHS,QAlBY,SAACjH,GACnBA,EAAEC,iBAEEoH,EADU,KAAXD,EACW,SAEA,KASV,SAKC,mBAAG/G,UAAW+G,EAAQ,aAAa,oBAEtC,cAAC,GAAD,IAGA,eAACX,EAAA,EAAD,CAAKpG,UAAU,eAAf,UACE,cAAC,gBAAD,CAAeqG,GAAG,mBAAlB,SACE,eAACD,EAAA,EAAIE,KAAL,CAAUtG,UAAU,OAApB,UAA2B,mBAAGA,UAAU,sBAAxC,aAEF,cAAC,gBAAD,CAAeqG,GAAG,kBAAlB,SACE,eAACD,EAAA,EAAIE,KAAL,CAAUtG,UAAU,OAApB,UAA2B,mBAAGA,UAAU,iBAAxC,eAEF,cAAC,gBAAD,CAAeqG,GAAG,kBAAlB,SACE,eAACD,EAAA,EAAIE,KAAL,CAAUtG,UAAU,OAApB,UAA2B,mBAAGA,UAAU,mBAAxC,eAEF,cAAC,gBAAD,CAAeqG,GAAG,gBAAlB,SACE,eAACD,EAAA,EAAIE,KAAL,CAAUtG,UAAU,OAApB,UAA2B,mBAAGA,UAAU,gBAAxC,gBAEF,cAAC,GAAD,IACA,cAAC,gBAAD,CAAeqG,GAAG,WAAlB,SACI,eAACD,EAAA,EAAIE,KAAL,CAAUtG,UAAU,OAApB,UAA2B,mBAAGA,UAAU,gBAAxC,iBAEJ,cAAC,gBAAD,CAAeqG,GAAG,YAAlB,SACI,eAACD,EAAA,EAAIE,KAAL,CAAUtG,UAAU,OAApB,UAA2B,mBAAGA,UAAU,mBAAxC,mBAEJ,eAACoG,EAAA,EAAIE,KAAL,CAAUtG,UAAU,OAAO4G,QAhDb,WAClB3C,EAASe,OA+CL,UAAmD,mBAAGhF,UAAU,wBAAhE,aACA,cAAC,GAAD,IACA,cAAC,gBAAD,CAAeqG,GAAG,kBAAlB,SACI,eAACD,EAAA,EAAIE,KAAL,CAAUtG,UAAU,OAApB,UAA2B,mBAAGA,UAAU,eAAxC,6B,UClDDkH,GAZA,WACX,OACI,wBAAQlH,UAAU,gBAAlB,SACI,cAAC0F,EAAA,EAAD,UACI,cAACyB,GAAA,EAAD,UACI,cAACF,EAAA,EAAD,CAAKjH,UAAU,mBAAf,iD,UC8DLoH,GApEA,SAAC,GAA4B,IAA1B7G,EAAyB,EAAzBA,MAAO8G,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MAC3B,OACA,sBAAKtH,UAAU,SAAf,UACI,+BACI,mBACAuH,MAAO,CAAED,SACTtH,UACIO,GAAS,EACP,cACAA,GAAS,GACT,uBACA,kBAIV,+BACI,mBACAgH,MAAO,CAAED,SACTtH,UACIO,GAAS,EACP,cACAA,GAAS,IACT,uBACA,kBAIV,+BACI,mBACAgH,MAAO,CAAED,SACTtH,UACIO,GAAS,EACP,cACAA,GAAS,IACT,uBACA,kBAIV,+BACI,mBACAgH,MAAO,CAAED,SACTtH,UACIO,GAAS,EACP,cACAA,GAAS,IACT,uBACA,kBAIV,+BACI,mBACAgH,MAAO,CAAED,SACTtH,UACIO,GAAS,EACP,cACAA,GAAS,IACT,uBACA,kBAIV,qCAAQ8G,GAAQA,SCdTG,GA7CC,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAGf,OACI,eAACC,GAAA,EAAD,CAAM1H,UAAU,qBAAhB,UACI,cAAC,OAAD,CAAMqG,GAAE,iBAAYoB,EAAKE,KAAO3H,UAAU,MAA1C,SACI,cAAC0H,GAAA,EAAKE,IAAN,CAAU7B,IAAK0B,EAAKI,MAAOC,QAAQ,UAEvC,eAACJ,GAAA,EAAKK,KAAN,WACI,cAAC,OAAD,CAAM1B,GAAE,iBAAYoB,EAAKE,KAAzB,SACI,cAACD,GAAA,EAAKM,MAAN,CAAYC,GAAG,MAAMjI,UAAU,cAA/B,SACI,iCAASyH,EAAKrH,WAGtB,cAACsH,GAAA,EAAKQ,KAAN,CAAWD,GAAG,MAAd,SACI,eAACd,GAAA,EAAD,WACI,cAACF,EAAA,EAAD,CAAKkB,GAAI,EAAT,SACI,cAAC,GAAD,CACI5H,MAAOkH,EAAKW,OACZf,KAAI,UAAKI,EAAKY,gBAGtB,cAACpB,EAAA,EAAD,CAAKkB,GAAI,EAAT,SACI,6BAAI,mCAASV,EAAKa,MAAd,YAER,cAACrB,EAAA,EAAD,CAAKsB,GAAI,GAAT,SACI,cAAC,gBAAD,CAAelC,GAAE,gBAAWoB,EAAKE,IAAhB,UAAjB,SACA,eAACjH,EAAA,EAAD,CACIV,UAAU,iBACVG,KAAK,SACLQ,QAAQ,eACR6H,SAAgC,IAAtBf,EAAKgB,aAJnB,UAKC,mBAAGzI,UAAU,yBAA4B,IACf,IAAtByH,EAAKgB,aAAoB,eAAe,iC,UCnCnEC,GAAU,SAAC,GAA2B,IAAzB/H,EAAwB,EAAxBA,QAASgI,EAAe,EAAfA,SACxB,OACI,cAACC,GAAA,EAAD,CAAOjI,QAASA,EAAhB,SACKgI,KAKbD,GAAQG,aAAe,CACnBlI,QAAS,QAGE+H,U,UCLAI,GARA,WACX,OACI,cAACC,GAAA,EAAD,CAASC,UAAU,SAASC,KAAK,SAAjC,SACI,sBAAMjJ,UAAU,UAAhB,2B,UCNCkJ,GAAoB,oBACpBC,GAAoB,oBACpBC,GAAiB,iBAEjBC,GAAe,eACfC,GAAe,eACfC,GAAY,YAEZC,GAAsB,sBACtBC,GAAsB,sBACtBC,GAAmB,mBAEnBC,GAAsB,sBACtBC,GAAsB,sBACtBC,GAAmB,mBACnBC,GAAoB,oBAEpBC,GAAsB,sBACtBC,GAAsB,sBACtBC,GAAmB,mBACnBC,GAAoB,oBAEpBC,GAA6B,6BAC7BC,GAA6B,6BAC7BC,GAA0B,0BAC1BC,GAA2B,2BAE3BC,GAAmB,mBACnBC,GAAmB,mBACnBC,GAAgB,gBCJhBC,GAAgB,yDAAM,WAAMzG,GAAN,iBAAAE,EAAA,sEAE3BF,EAAS,CAAC9D,KAAMoK,KAFW,SAGJ7F,IAAMC,IAAI,kBAHN,gBAGnBC,EAHmB,EAGnBA,KAERX,EAAS,CACL9D,KAAMqK,GACN3F,QAASD,IAPc,gDAU3BX,EAAS,CACL9D,KAAMsK,GACN5F,QAAS,KAAMC,UAAY,KAAMA,SAASF,KAAKG,QAAU,KAAMD,SAASF,KAAKG,QAAU,KAAMA,UAZtE,yDAAN,uDAiBhB4F,GAAY,eAACpL,EAAD,uDAAW,GAAIqL,EAAf,uDAA4B,GAAIC,EAAhC,uDAAwC,GAAxC,8CAA+C,WAAM5G,GAAN,iBAAAE,EAAA,sEAEhEF,EAAS,CAAC9D,KAAM+I,KAFgD,SAGzCxE,IAAMC,IAAN,6BAAgCpF,EAAhC,uBAAsDqL,EAAtD,kBAA0EC,IAHjC,gBAGxDjG,EAHwD,EAGxDA,KACRX,EAAS,CACL9D,KAAMgJ,GACNtE,QAASD,IANmD,gDAShEX,EAAS,CACL9D,KAAMiJ,GACNvE,QAAS,KAAMC,UAAY,KAAMA,SAASF,KAAKG,QAAU,KAAMD,SAASF,KAAKG,QAAU,KAAMA,UAXjC,yDAA/C,uDAgBZ+F,GAAc,SAAC3E,GAAD,8CAAQ,WAAMlC,GAAN,iBAAAE,EAAA,sEAE3BF,EAAS,CAAC9D,KAAMkJ,KAFW,SAGJ3E,IAAMC,IAAN,qBAAwBwB,IAHpB,gBAGnBvB,EAHmB,EAGnBA,KACRX,EAAS,CACL9D,KAAMmJ,GACNzE,QAASD,IANc,gDAS3BX,EAAS,CACL9D,KAAMoJ,GACN1E,QAAS,KAAMC,UAAY,KAAMA,SAASF,KAAKG,QAAU,KAAMD,SAASF,KAAKG,QAAU,KAAMA,UAXtE,yDAAR,uDAiBdgG,GAAa,SAAC5E,GAAD,8CAAQ,WAAMlC,EAAUC,GAAhB,mBAAAC,EAAA,sEAE1BF,EAAS,CACL9D,KAAMqJ,KAHgB,EAMUtF,IAAfE,EANK,EAMlBC,UAAaD,SAEfE,EAAS,CACXC,QAAS,CACLC,cAAc,UAAD,OAAYJ,EAASK,SAVhB,SAcpBC,IAAMsG,OAAN,qBAA2B7E,GAAM7B,GAdb,OAgB1BL,EAAS,CACL9D,KAAMsJ,KAjBgB,gDAoB1BxF,EAAS,CACL9D,KAAMuJ,GACN7E,QAAS,KAAMC,UAAY,KAAMA,SAASF,KAAKG,QAAU,KAAMD,SAASF,KAAKG,QAAU,KAAMA,UAtBvE,yDAAR,yDCtCXkG,GA3BO,WAElB,IAAMhH,EAAWmB,cAEX8F,EAAe7F,aAAY,SAAAC,GAAK,OAAIA,EAAM4F,gBACxCC,EAA4BD,EAA5BC,QAASC,EAAmBF,EAAnBE,MAAOC,EAAYH,EAAZG,SAMxB,OAJAC,qBAAU,WACNrH,EAASyG,QACX,CAACzG,IAEIkH,EAAU,cAAC,GAAD,IAAaC,EAAQ,cAAC,GAAD,CAASzK,QAAQ,SAAjB,SAA2ByK,IAC7D,cAACG,GAAA,EAAD,UACKF,EAASG,KAAI,SAAA/D,GAAI,OACd,cAAC8D,GAAA,EAAS5E,KAAV,CAA8B3G,UAAU,WAAxC,SACI,eAAC,OAAD,CAAMqG,GAAE,iBAAYoB,EAAKE,KAAO3H,UAAU,UAA1C,UACI,cAAC8F,EAAA,EAAD,CAAOC,IAAK0B,EAAKI,MAAO4D,IAAKhE,EAAKrH,KAAMuF,OAAK,EAAC3F,UAAU,YACxD,cAACuL,GAAA,EAASG,QAAV,CAAkB1L,UAAU,mBAA5B,SACI,6BAAKyH,EAAKrH,aAJFqH,EAAKE,WCqB1BgE,GApCE,WACb,IAAM1H,EAAWmB,cAEX8F,EAAe7F,aAAY,SAAAC,GAAK,OAAIA,EAAM4F,gBACxCC,EAA4BD,EAA5BC,QAASC,EAAmBF,EAAnBE,MAAOC,EAAYH,EAAZG,SAMxB,OAJAC,qBAAU,WACNrH,EAASyG,QACX,CAACzG,IAGH,qCACI,cAAC,GAAD,IACA,eAACyB,EAAA,EAAD,CAAW1F,UAAU,YAArB,UACI,oBAAIA,UAAU,cAAd,4BACEmL,EACM,cAAC,GAAD,IACDC,EACC,cAAC,GAAD,CAASzK,QAAQ,SAAjB,SAA2ByK,IAE3B,cAACjE,GAAA,EAAD,UACKkE,EAASG,KAAI,SAAA/D,GAAI,OACV,cAACR,EAAA,EAAD,CAAoB2E,GAAI,GAAIzD,GAAI,EAAG0D,GAAI,EAAG7L,UAAU,MAApD,SACI,cAAC,GAAD,CAASyH,KAAMA,KADTA,EAAKE,iB,mBCfhCmE,GAZO,SAAC,GAAiD,IAA/CC,EAA8C,EAA9CA,MAAOC,EAAuC,EAAvCA,KAAuC,IAAjCxF,eAAiC,aAAlBjH,eAAkB,MAAR,GAAQ,EACnE,OAAOwM,EAAQ,GACX,cAACE,GAAA,EAAD,CAAYC,KAAK,KAAKvL,QAAQ,eAA9B,SACK,aAAIwL,MAAMJ,GAAOK,QAAQZ,KAAI,SAAAa,GAAC,OAC3B,cAAC,gBAAD,CAAyBhG,GAAKG,EAAD,0BAAkG6F,EAAE,GAAzF9M,EAAO,kBAAcA,EAAd,iBAA8B8M,EAAE,GAAhC,sBAAqDA,EAAE,GAAtG,SACI,cAACJ,GAAA,EAAWtF,KAAZ,CAAiBI,OAAQsF,EAAE,IAAML,EAAjC,SAAwCK,EAAE,KAD1BA,EAAE,SC0CvBC,GAxCG,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACVhN,EAAUgN,EAAMC,OAAOjN,QACvBqL,EAAa2B,EAAMC,OAAO5B,YAAc,EACxCC,EAAQ0B,EAAMC,OAAO3B,OAAS,EAE9B5G,EAAWmB,cAEXqH,EAAWpH,aAAY,SAAAC,GAAK,OAAIA,EAAMmH,YACpCtB,EAAsCsB,EAAtCtB,QAASC,EAA6BqB,EAA7BrB,MAAOsB,EAAsBD,EAAtBC,MAAOV,EAAeS,EAAfT,KAAMD,EAASU,EAATV,MAMrC,OAJAT,qBAAU,WACNrH,EAAS0G,GAAUpL,EAASqL,EAAYC,MAC1C,CAAC5G,EAAU1E,EAASqL,EAAYC,IAGlC,qCACI,oBAAI7K,UAAU,mBAAd,wBACEmL,EACM,cAAC,GAAD,IACDC,EACC,cAAC,GAAD,CAASzK,QAAQ,SAAjB,SAA2ByK,IAE3B,qCACI,cAACjE,GAAA,EAAD,CAAKnH,UAAU,OAAf,SACK0M,EAAMlB,KAAI,SAAA/D,GAAI,OACP,cAACR,EAAA,EAAD,CAAoB2E,GAAI,GAAIzD,GAAI,EAAG0D,GAAI,EAAG7L,UAAU,MAApD,SACI,cAAC,GAAD,CAASyH,KAAMA,KADTA,EAAKE,UAO3B,cAAC,GAAD,CAAeoE,MAAOA,EAAOC,KAAMA,EAAMzM,QAASA,GAAqB,Y,UC4B5EoN,GApEF,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,UAAWC,EAAiB,EAAjBA,WAAiB,EACfvN,mBAASsN,GADM,mBAClCrM,EADkC,KAC3BuM,EAD2B,KAOxC,OAJAxB,qBAAU,WACNuB,EAAWtM,KACb,CAACsM,EAAYtM,IAGX,sBAAKP,UAAU,SAAf,UACI,sBAAM4G,QAAS,kBAAMkG,EAAS,IAA9B,SACI,mBACA9M,UACIO,GAAS,EACP,cACAA,GAAS,GACT,uBACA,kBAIV,sBAAMqG,QAAS,kBAAMkG,EAAS,IAA9B,SACI,mBACA9M,UACIO,GAAS,EACP,cACAA,GAAS,IACT,uBACA,kBAIV,sBAAMqG,QAAS,kBAAMkG,EAAS,IAA9B,SACI,mBACA9M,UACIO,GAAS,EACP,cACAA,GAAS,IACT,uBACA,kBAIV,sBAAMqG,QAAS,kBAAMkG,EAAS,IAA9B,SACI,mBACA9M,UACIO,GAAS,EACP,cACAA,GAAS,IACT,uBACA,kBAIV,sBAAMqG,QAAS,kBAAMkG,EAAS,IAA9B,SACI,mBACA9M,UACIO,GAAS,EACP,cACAA,GAAS,IACT,uBACA,sBCzCPwM,GAlBG,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,WAChB,OACA,qCACA,cAAC/F,EAAA,EAAD,CAAKsB,GAAI,EAAT,SAAY,0CACVyE,EAAWC,OAAS,EAClBD,EAAWxB,KAAI,SAAC0B,EAAEC,GAAH,OACX,cAAClG,EAAA,EAAD,CAAKsB,GAAI,EAAT,SACI,qBAAKvI,UAAU,aAAauH,MAAO,CAAC6F,gBAAiBF,GAArD,gBADaC,MAKpB,OC2KME,GA7KE,SAAC,GAAwB,IAAtBhO,EAAqB,EAArBA,QAASkN,EAAY,EAAZA,MAAY,EAChBjN,mBAAS,GADO,mBAC/BgO,EAD+B,KAC1BC,EAD0B,OAEVjO,mBAAS,GAFC,mBAE/B8I,EAF+B,KAEvBoF,EAFuB,OAGRlO,mBAAS,IAHD,mBAG/BmO,EAH+B,KAGtBC,EAHsB,KAK/BzJ,EAAWmB,cAGThB,EADUiB,aAAY,SAAAC,GAAK,OAAIA,EAAMjB,aACrCD,SAEFuJ,EAActI,aAAY,SAAAC,GAAK,OAAIA,EAAMqI,eACvCxC,EAAyBwC,EAAzBxC,QAASC,EAAgBuC,EAAhBvC,MAAO3D,EAASkG,EAATlG,KAElBmG,EAAmBvI,aAAY,SAAAC,GAAK,OAAIA,EAAMsI,oBACrCC,EAAwCD,EAA/CxC,MAA6B0C,EAAkBF,EAA3BG,QAE5BzC,qBAAU,WAEHwC,IACCE,MAAM,oBACNR,EAAU,GACVE,EAAW,IACXzJ,EAAS,CAAC9D,KAAMmK,MAEpBrG,EAAS6G,GAAYyB,EAAMC,OAAOrG,OACpC,CAAClC,EAAWsI,EAAOuB,IAerB,OACA,qCACI,cAAC,OAAD,CAAM9N,UAAU,oBAAoBqG,GAAG,IAAvC,qBAGE8E,EACM,cAAC,GAAD,IACDC,EACC,cAAC,GAAD,CAASzK,QAAQ,SAAjB,SAA2ByK,IAE/B,qCACI,eAACjE,GAAA,EAAD,WACI,cAACF,EAAA,EAAD,CAAKkB,GAAI,EAAT,SACI,cAACrC,EAAA,EAAD,CAAOC,IAAK0B,EAAKI,MAAO4D,IAAKhE,EAAKrH,KAAMuF,OAAK,MAEjD,eAACsB,EAAA,EAAD,CAAKkB,GAAI,EAAT,UACI,eAAC8F,GAAA,EAAD,WACI,cAACA,GAAA,EAAUtH,KAAX,UACI,6BAAI,iCAASc,EAAKrH,WAEtB,cAAC6N,GAAA,EAAUtH,KAAX,UACI,cAACQ,GAAA,EAAD,UACI,cAAC,GAAD,CAAW6F,WAAYvF,EAAKyG,QAAU,SAG9C,cAACD,GAAA,EAAUtH,KAAX,UACI,eAACQ,GAAA,EAAD,WACI,eAACF,EAAA,EAAD,CAAKkB,GAAI,EAAT,UAAY,uCAAZ,IAA2BV,EAAK0G,SAChC,cAAClH,EAAA,EAAD,CAAKkB,GAAI,EAAT,SACI,cAAC,GAAD,CACI5H,MAAOkH,EAAKW,OACZf,KAAI,UAAKI,EAAKY,qBAM9B,eAAC4F,GAAA,EAAUtH,KAAX,WAAgB,6CAAhB,IAAqCc,EAAK2G,kBAE9C,cAAC1G,GAAA,EAAD,UACI,eAACuG,GAAA,EAAD,CAAWtN,QAAQ,QAAnB,UACI,cAACsN,GAAA,EAAUtH,KAAX,UACI,cAACQ,GAAA,EAAD,UACI,eAACF,EAAA,EAAD,WAAK,wCAAL,IAAqBQ,EAAKgB,aAAe,EAApB,UAA2BhB,EAAKgB,aAAhC,aAA0D,sBAGrFhB,EAAKgB,aAAe,GAClB,cAACwF,GAAA,EAAUtH,KAAX,UACI,eAACQ,GAAA,EAAD,WACI,eAACF,EAAA,EAAD,CAAKkB,GAAI,EAAT,UAAY,0CAAZ,OACA,eAAClB,EAAA,EAAD,CAAKkB,GAAI,EAAT,UACI,cAACzH,EAAA,EAAD,CACIC,QAAQ,oBACRX,UAAU,OACVG,KAAK,SACLyG,QAAS,SAACjH,GAAD,OAAe4N,EAATD,EAAM,EAAUA,EAAI,EAAUA,IAJjD,eAOCA,EACD,cAAC5M,EAAA,EAAD,CACIC,QAAQ,kBACRX,UAAU,OACVG,KAAK,SACLyG,QAAS,SAACjH,GAAD,OAAM2N,EAAM7F,EAAKgB,aAAc8E,EAAOD,EAAI,GAAGC,EAAOD,IAJjE,uBAWhB,cAACW,GAAA,EAAUtH,KAAX,UACI,eAACQ,GAAA,EAAD,WACI,eAACF,EAAA,EAAD,CAAKkB,GAAI,EAAT,UAAY,uCAAZ,KAA4BV,EAAKa,SACjC,cAACrB,EAAA,EAAD,CAAKkB,GAAI,EAAT,SACA,eAACzH,EAAA,EAAD,CACIkG,QAxFf,WACrBvH,EAAQS,KAAR,gBAAsByM,EAAMC,OAAOrG,GAAnC,gBAA6CmH,KAwFTtN,UAAU,YACVG,KAAK,SACLQ,QAAQ,eACR6H,SAAgC,IAAtBf,EAAKgB,aALnB,UAMC,mBAAGzI,UAAU,yBAA4B,IAN1C,mCAexB,cAACmH,GAAA,EAAD,UACI,eAACF,EAAA,EAAD,CAAKkB,GAAI,EAAT,UACI,yCACyB,IAAxBV,EAAK4G,QAAQpB,QAAgB,cAAC,GAAD,yBAC9B,eAACgB,GAAA,EAAD,CAAWtN,QAAQ,QAAnB,UACK8G,EAAK4G,QAAQ7C,KAAI,SAAA8C,GAAM,OACpB,eAACL,GAAA,EAAUtH,KAAX,WACI,iCAAS2H,EAAOlO,OAChB,cAAC,GAAD,CAAQG,MAAO+N,EAAOlG,SACtB,4BAAIkG,EAAOC,UAAUC,UAAU,EAAG,MAClC,4BAAIF,EAAOb,YAJMa,EAAO3G,QAOhC,eAACsG,GAAA,EAAUtH,KAAX,WACI,yDACCkH,GAAgB,cAAC,GAAD,CAASlN,QAAQ,SAAjB,SAA2BkN,IAC3CzJ,EAEG,eAAC3E,EAAA,EAAD,CAAMC,SApHhB,SAACC,GPqHK,IAAC8O,EAASH,EOpHlC3O,EAAEC,iBACFqE,GPmHyBwK,EOnHClC,EAAMC,OAAOrG,GPmHLmI,EOnHS,CAAClG,SAAQqF,WPmH5B,uCAAqB,WAAMxJ,EAAUC,GAAhB,mBAAAC,EAAA,sEAE7CF,EAAS,CACL9D,KAAMgK,KAHmC,EAMTjG,IAAfE,EANwB,EAMrCC,UAAaD,SAEfE,EAAS,CACXC,QAAS,CACL,eAAe,mBACfC,cAAc,UAAD,OAAYJ,EAASK,SAXG,SAevCC,IAAMgK,KAAN,qBAAyBD,EAAzB,YAA2CH,EAAQhK,GAfZ,OAiB7CL,EAAS,CACL9D,KAAMiK,KAlBmC,gDAqB7CnG,EAAS,CACL9D,KAAMkK,GACNxF,QAAS,KAAMC,UAAY,KAAMA,SAASF,KAAKG,QAAU,KAAMD,SAASF,KAAKG,QAAU,KAAMA,UAvBpD,yDAArB,2DODI,UACI,eAACtF,EAAA,EAAKkP,MAAN,CAAYC,UAAU,SAAtB,UACI,cAACnP,EAAA,EAAKoP,MAAN,qBACA,cAAC,GAAD,CAAMjC,UAAWxE,EAAQyE,WAlH9C,SAACiC,GAChBtB,EAAUsB,SAmHsB,eAACrP,EAAA,EAAKkP,MAAN,CAAYC,UAAU,UAAtB,UACI,cAACnP,EAAA,EAAKoP,MAAN,sBACA,cAACpP,EAAA,EAAKS,QAAN,CAAc+H,GAAG,WAAW8G,IAAI,IAAIxO,MAAOkN,EAASpN,SAAU,SAACV,GAAD,OAAO+N,EAAW/N,EAAEW,OAAOC,aAE7F,cAACG,EAAA,EAAD,CAAQP,KAAK,SAASQ,QAAQ,eAA9B,uBAKN,eAAC,GAAD,qBAAgB,cAAC,OAAD,CAAM0F,GAAG,SAAT,qBAAhB,wCC1KrB2I,GAAY,SAAC7I,EAAImH,GAAL,8CAAa,WAAMrJ,EAAUC,GAAhB,iBAAAC,EAAA,sEACZO,IAAMC,IAAN,qBAAwBwB,IADZ,gBAC3BvB,EAD2B,EAC3BA,KACPX,EAAS,CACL9D,KAAMuD,GACNmB,QAAS,CACL4J,OAAQ7J,EAAK+C,IACbvH,KAAMwE,EAAKxE,KACXyH,MAAOjD,EAAKiD,MACZS,MAAO1D,EAAK0D,MACZG,aAAc7D,EAAK6D,aACnB6E,SAGRrI,aAAagK,QAAQ,YAAaC,KAAKC,UAAUjL,IAAWkL,KAAKC,YAb/B,2CAAb,yDCuGVC,GAnGI,SAAC,GAAgC,IAA/B/C,EAA8B,EAA9BA,MAAOgD,EAAuB,EAAvBA,SAAUlQ,EAAa,EAAbA,QAC5BmQ,EAASjD,EAAMC,OAAOrG,GACtBmH,EAAMiC,EAASE,OAASC,OAAOH,EAASE,OAAOE,MAAM,KAAK,IAAM,EAEhE1L,EAAWmB,cAGTiK,EADKhK,aAAY,SAAAC,GAAK,OAAIA,EAAM8J,QAChCC,UAER/D,qBAAU,WACHkE,GACCvL,EAAS+K,GAAUQ,EAAQlC,MAEjC,CAACrJ,EAAUuL,EAAQlC,IAErB,IAAMsC,EAAwB,SAACzJ,GAC3BlC,EDJsB,SAACkC,GAAD,OAAQ,SAAClC,EAAUC,GAC7CD,EAAS,CACL9D,KAAMwD,GACNkB,QAASsB,IAEblB,aAAagK,QAAQ,YAAaC,KAAKC,UAAUjL,IAAWkL,KAAKC,aCDpDQ,CAAe1J,KAO5B,OACI,eAACgB,GAAA,EAAD,WACI,eAACF,EAAA,EAAD,CAAKkB,GAAI,GAAT,UACI,mDAEgB,IAAdkH,EACE,eAAC,GAAD,kCAA6B,cAAC,OAAD,CAAMhJ,GAAG,IAAT,wBAC7B,eAAC4H,GAAA,EAAD,CAAWtN,QAAQ,QAAQX,UAAU,cAArC,UACI,eAACmH,GAAA,EAAD,WACI,cAACF,EAAA,EAAD,CAAKkB,GAAI,EAAT,SAAY,wCACZ,cAAClB,EAAA,EAAD,CAAKkB,GAAI,EAAT,SAAY,uCACZ,cAAClB,EAAA,EAAD,CAAKkB,GAAI,EAAT,SAAY,wCACZ,cAAClB,EAAA,EAAD,CAAKkB,GAAI,EAAT,SAAY,0CACZ,cAAClB,EAAA,EAAD,CAAKkB,GAAI,EAAT,SAAY,4CAEfkH,EAAU7D,KAAI,SAAAsE,GAAI,OACf,cAAC7B,GAAA,EAAUtH,KAAX,UACI,eAACQ,GAAA,EAAD,WACI,cAACF,EAAA,EAAD,CAAKkB,GAAI,EAAT,SACI,cAACrC,EAAA,EAAD,CAAOC,IAAK+J,EAAKjI,MAAO4D,IAAKqE,EAAK1P,KAAMuF,OAAK,EAACoK,SAAO,MAEzD,cAAC9I,EAAA,EAAD,CAAKkB,GAAI,EAAT,SACI,cAAC,OAAD,CAAM9B,GAAE,iBAAYyJ,EAAKrB,QAAzB,SAAoCqB,EAAK1P,SAE7C,eAAC6G,EAAA,EAAD,CAAKkB,GAAI,EAAT,cAAc2H,EAAKxH,SACnB,eAACrB,EAAA,EAAD,CAAKkB,GAAI,EAAT,UACI,cAACzH,EAAA,EAAD,CACIC,QAAQ,oBACRX,UAAU,OACVG,KAAK,SACLyG,QAAS,SAACjH,GAAD,OAAMmQ,EAAKxC,IAAM,EACtBrJ,EAAS+K,GAAUc,EAAKrB,OAAQiB,OAAOI,EAAKxC,IAAI,KAChDrJ,EAAS+K,GAAUc,EAAKrB,OAAQiB,OAAOI,EAAKxC,QANpD,eAUCwC,EAAKxC,IACN,cAAC5M,EAAA,EAAD,CACIC,QAAQ,kBACRX,UAAU,OACVG,KAAK,SACLyG,QAAS,SAACjH,GAAD,OAAMmQ,EAAKxC,IAAMwC,EAAKrH,aAC3BxE,EAAS+K,GAAUc,EAAKrB,OAAQiB,OAAOI,EAAKxC,IAAI,KAChDrJ,EAAS+K,GAAUc,EAAKrB,OAAQiB,OAAOI,EAAKxC,QANpD,kBAWJ,cAACrG,EAAA,EAAD,CAAKkB,GAAI,EAAT,SACI,cAACzH,EAAA,EAAD,CAAQP,KAAK,SAASQ,QAAQ,eAAeiG,QAAS,kBAAMgJ,EAAsBE,EAAKrB,SAAvF,SACI,mBAAGzO,UAAU,yBAlCR8P,EAAKrB,iBA2C1C,cAACxH,EAAA,EAAD,CAAKkB,GAAI,GAAT,SACI,cAACT,GAAA,EAAD,UACI,eAACuG,GAAA,EAAD,CAAWtN,QAAQ,QAAnB,UACI,eAACsN,GAAA,EAAUtH,KAAX,WACI,mCAAM0I,EAAUW,QAAO,SAACC,EAAKH,GAAN,OAAeG,EAAMH,EAAKxC,MAAK,GAAtD,aADJ,IAEM+B,EAAUW,QAAO,SAACC,EAAKH,GAAN,OAAeG,EAAMH,EAAKxC,IAAMwC,EAAKxH,QAAO,GAAG4H,QAAQ,MAE9E,cAACjC,GAAA,EAAUtH,KAAX,UACI,cAACjG,EAAA,EAAD,CAAQP,KAAK,SAASH,UAAU,qBAAqBwI,SAA+B,IAArB6G,EAAUpC,OAAcrG,QAvExF,WACnBvH,EAAQS,KAAK,6BAsEO,8CClFbqQ,GAZO,SAAC,GAAgB,IAAfxH,EAAc,EAAdA,SACpB,OACI,cAACjD,EAAA,EAAD,CAAW1F,UAAU,OAArB,SACI,cAACmH,GAAA,EAAD,CAAKnH,UAAU,4BAAf,SACI,cAACiH,EAAA,EAAD,CAAKsB,GAAI,GAAIJ,GAAI,EAAjB,SACKQ,SCiENyH,GA/DK,SAAC,GAAyB,IAAxBb,EAAuB,EAAvBA,SAAUlQ,EAAa,EAAbA,QAAa,EAChBC,mBAAS,IADO,mBACnC+Q,EADmC,KAC5BC,EAD4B,OAEVhR,mBAAS,IAFC,mBAEnCiR,EAFmC,KAEzBC,EAFyB,KAInCvM,EAAWmB,cAEXf,EAAYgB,aAAY,SAAAC,GAAK,OAAIA,EAAMjB,aACtC8G,EAA4B9G,EAA5B8G,QAASC,EAAmB/G,EAAnB+G,MAAOhH,EAAYC,EAAZD,SAEjBqM,EAAWlB,EAASE,OAASF,EAASE,OAAOE,MAAM,KAAK,GAAK,IAGnErE,qBAAU,WAEFlH,GACC/E,EAAQS,KAAK2Q,KAEpB,CAACpR,EAAS+E,EAAUqM,IAOtB,OACI,cAAC,GAAD,UACI,cAAC/I,GAAA,EAAD,UACA,eAACA,GAAA,EAAKK,KAAN,WACA,oBAAI/H,UAAU,cAAd,SAA4B,wCAC3BoL,GAAS,cAAC,GAAD,CAASzK,QAAQ,SAAjB,SAA2ByK,IACpCD,GAAW,cAAC,GAAD,IACZ,eAAC1L,EAAA,EAAD,CAAMC,SAZQ,SAACC,GACnBA,EAAEC,iBACFqE,ErBDa,SAACoM,EAAOE,GAAR,8CAAqB,WAAMtM,GAAN,mBAAAE,EAAA,sEAElCF,EAAS,CACL9D,KAAMS,IAGJ0D,EAAS,CACXC,QAAS,CACL,eAAe,qBARW,SAYbG,IAAMgK,KAAK,mBAAmB,CAAC2B,QAAOE,YAAWjM,GAZpC,gBAY3BM,EAZ2B,EAY3BA,KAEPX,EAAS,CACL9D,KAAMU,EACNgE,QAASD,IAGbK,aAAagK,QAAQ,WAAYC,KAAKC,UAAUvK,IAnBd,kDAsBlCX,EAAS,CACL9D,KAAMW,EACN+D,QAAS,KAAMC,UAAY,KAAMA,SAASF,KAAKG,QAAU,KAAMD,SAASF,KAAKG,QAAU,KAAMA,UAxB/D,0DAArB,sDqBCJ2L,CAAML,EAAOE,KAUlB,UACI,cAAC9Q,EAAA,EAAKkP,MAAN,CAAYC,UAAU,QAAtB,SACI,cAACnP,EAAA,EAAKS,QAAN,CACIF,UAAU,mBACVG,KAAK,OACLK,YAAY,SACZD,MAAO8P,EACPhQ,SAAU,SAACV,GAAD,OAAO2Q,EAAS3Q,EAAEW,OAAOC,YAE3C,cAACd,EAAA,EAAKkP,MAAN,CAAYC,UAAU,WAAtB,SAEI,cAACnP,EAAA,EAAKS,QAAN,CACIF,UAAU,mBACVG,KAAK,WACLK,YAAY,WACZD,MAAOgQ,EACPlQ,SAAU,SAACV,GAAD,OAAO6Q,EAAY7Q,EAAEW,OAAOC,YAE9C,eAACG,EAAA,EAAD,CAAQP,KAAK,SAASH,UAAU,qBAAhC,UAAqD,mBAAGA,UAAU,uBAA0B,IAA5F,cAEJ,cAACmH,GAAA,EAAD,UACI,eAACF,EAAA,EAAD,yBACgB,IACZ,cAAC,OAAD,CAAMZ,GAAIoK,EAAQ,6BAAyBA,GAAW,YAAtD,mCCkCLE,GAxFQ,SAAC,GAAyB,IAAxBpB,EAAuB,EAAvBA,SAAUlQ,EAAa,EAAbA,QAAa,EACrBC,mBAAS,IADY,mBACtCc,EADsC,KAChCwQ,EADgC,OAEnBtR,mBAAS,IAFU,mBAEtC+Q,EAFsC,KAE/BC,EAF+B,OAGbhR,mBAAS,IAHI,mBAGtCiR,EAHsC,KAG5BC,EAH4B,OAIClR,mBAAS,IAJV,mBAItCuR,EAJsC,KAIrBC,EAJqB,OAKfxR,mBAAS,MALM,mBAKtCyF,EALsC,KAK7BgM,EAL6B,KAOtC9M,EAAWmB,cAGX4L,EAAe3L,aAAY,SAAAC,GAAK,OAAIA,EAAM0L,gBACxC7F,EAA6B6F,EAA7B7F,QAASC,EAAoB4F,EAApB5F,MAAOhH,EAAa4M,EAAb5M,SAElBqM,EAAWlB,EAASE,OAASF,EAASE,OAAOE,MAAM,KAAK,GAAK,IAGnErE,qBAAU,WAEFlH,GACC/E,EAAQS,KAAK2Q,KAEpB,CAACpR,EAAS+E,EAAUqM,IAYtB,OACI,cAAC,GAAD,UACI,cAAC/I,GAAA,EAAD,UACA,eAACA,GAAA,EAAKK,KAAN,WACA,oBAAI/H,UAAU,cAAd,SAA4B,0CAC3B+E,GAAW,cAAC,GAAD,CAASpE,QAAQ,SAAjB,SAA2BoE,IACtCqG,GAAS,cAAC,GAAD,CAASzK,QAAQ,SAAjB,SAA2ByK,IACpCD,GAAW,cAAC,GAAD,IACZ,eAAC1L,EAAA,EAAD,CAAMC,SAlBQ,SAACC,GACnBA,EAAEC,iBACC2Q,IAAaM,EACZE,EAAW,yBAGX9M,EtBoBY,SAAC7D,EAAMiQ,EAAOE,GAAd,8CAA2B,WAAMtM,GAAN,mBAAAE,EAAA,sEAE3CF,EAAS,CACL9D,KAAMa,IAGJsD,EAAS,CACXC,QAAS,CACL,eAAe,qBARoB,SAYtBG,IAAMgK,KAAK,aAAa,CAACtO,OAAMiQ,QAAOE,YAAWjM,GAZ3B,gBAYpCM,EAZoC,EAYpCA,KAEPX,EAAS,CACL9D,KAAMc,EACN4D,QAASD,IAIbX,EAAS,CACL9D,KAAMU,EACNgE,QAASD,IAGbK,aAAagK,QAAQ,WAAYC,KAAKC,UAAUvK,IAzBL,kDA4B3CX,EAAS,CACL9D,KAAMe,EACN2D,QAAS,KAAMC,UAAY,KAAMA,SAASF,KAAKG,QAAU,KAAMD,SAASF,KAAKG,QAAU,KAAMA,UA9BtD,0DAA3B,sDsBpBHkM,CAAS7Q,EAAMiQ,EAAOE,KAY/B,UACI,cAAC9Q,EAAA,EAAKkP,MAAN,CAAYC,UAAU,OAAtB,SACI,cAACnP,EAAA,EAAKS,QAAN,CACIF,UAAU,mBACVG,KAAK,OACLK,YAAY,OACZD,MAAOH,EACPC,SAAU,SAACV,GAAD,OAAOiR,EAAQjR,EAAEW,OAAOC,YAE1C,cAACd,EAAA,EAAKkP,MAAN,CAAYC,UAAU,QAAtB,SACI,cAACnP,EAAA,EAAKS,QAAN,CACIF,UAAU,mBACVG,KAAK,OACLK,YAAY,SACZD,MAAO8P,EACPhQ,SAAU,SAACV,GAAD,OAAO2Q,EAAS3Q,EAAEW,OAAOC,YAE3C,cAACd,EAAA,EAAKkP,MAAN,CAAYC,UAAU,WAAtB,SACI,cAACnP,EAAA,EAAKS,QAAN,CACIF,UAAU,mBACVG,KAAK,WACLK,YAAY,iBACZD,MAAOgQ,EACPlQ,SAAU,SAACV,GAAD,OAAO6Q,EAAY7Q,EAAEW,OAAOC,YAE9C,cAACd,EAAA,EAAKkP,MAAN,CAAYC,UAAU,kBAAtB,SACI,cAACnP,EAAA,EAAKS,QAAN,CACIF,UAAU,mBACVG,KAAK,WACLK,YAAY,mBACZD,MAAOsQ,EACPxQ,SAAU,SAACV,GAAD,OAAOmR,EAAmBnR,EAAEW,OAAOC,YAErD,cAACG,EAAA,EAAD,CAAQP,KAAK,SAASH,UAAU,qBAAhC,yBAEJ,cAACmH,GAAA,EAAD,UACI,eAACF,EAAA,EAAD,mCAC0B,IACtB,cAAC,OAAD,CAAMZ,GAAIoK,EAAQ,0BAAsBA,GAAW,SAAnD,gCCvELS,GAfO,SAAC,GAAkC,IAAjCC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,MACzC,OACA,mCACI,cAAC5L,EAAA,EAAD,CAAW1F,UAAU,OAArB,SACI,qBAAImG,GAAG,cAAcnG,UAAU,cAA/B,UACI,oBAAIuR,MAAOJ,EAAQ,SAAS,GAAIhL,GAAG,UAAnC,SAA6C,6CAC7C,oBAAIoL,MAAOH,EAAQ,SAAS,GAAIjL,GAAG,WAAnC,SAA8C,+CAC9C,oBAAIoL,MAAOF,EAAQ,SAAS,GAAIlL,GAAG,UAAnC,SAA6C,+CAC7C,oBAAIoL,MAAOD,EAAQ,SAAS,GAAInL,GAAG,QAAnC,SAA2C,qDC0E5CqL,GA9EQ,SAAC,GAAe,IAAdnS,EAAa,EAAbA,QAEboS,EADKpM,aAAY,SAAAC,GAAK,OAAIA,EAAM8J,QAChCqC,gBAF0B,EAIJnS,mBAASmS,EAAgBC,SAJrB,mBAI3BA,EAJ2B,KAIlBC,EAJkB,OAKVrS,mBAASmS,EAAgBG,MALf,mBAK3BA,EAL2B,KAKrBC,EALqB,OAMEvS,mBAASmS,EAAgBK,YAN3B,mBAM3BA,EAN2B,KAMfC,EANe,OAOJzS,mBAASmS,EAAgBO,SAPrB,mBAO3BA,EAP2B,KAOlBC,EAPkB,KAS5BhO,EAAWmB,cAUjB,OACI,eAACM,EAAA,EAAD,WACI,cAAC,GAAD,CAAeyL,OAAK,EAACC,OAAK,IAC1B,oBAAIpR,UAAU,cAAd,sBACA,cAACmH,GAAA,EAAD,CAAKnH,UAAU,4BAAf,SACI,cAACiH,EAAA,EAAD,CAAKsB,GAAI,GAAIJ,GAAI,EAAjB,SACI,cAACT,GAAA,EAAD,UACI,cAACA,GAAA,EAAKK,KAAN,UACI,eAACtI,EAAA,EAAD,CAAMC,SAhBR,SAACC,GNSQ,IAACiF,EMR5BjF,EAAEC,iBACFqE,GNO4BW,EMPC,CACzB8M,UAASE,OAAME,aAAYE,WNMM,SAAC/N,GAC1CA,EAAS,CACL9D,KAAMyD,GACNiB,QAASD,IAEbK,aAAagK,QAAQ,kBAAmBC,KAAKC,UAAUvK,OMTnDvF,EAAQS,KAAK,aAWO,UACI,eAACL,EAAA,EAAKkP,MAAN,CAAYC,UAAU,UAAtB,UACI,cAACnP,EAAA,EAAKoP,MAAN,sBACA,cAACpP,EAAA,EAAKS,QAAN,CACIC,KAAK,OACLK,YAAY,gBACZ0R,UAAQ,EACR3R,MAAOmR,EACPrR,SAAU,SAACV,GAAD,OAAOgS,EAAWhS,EAAEW,OAAOC,aAG7C,eAACd,EAAA,EAAKkP,MAAN,CAAYC,UAAU,OAAtB,UACI,cAACnP,EAAA,EAAKoP,MAAN,mBACA,cAACpP,EAAA,EAAKS,QAAN,CACIC,KAAK,OACLK,YAAY,aACZ0R,UAAQ,EACR3R,MAAOqR,EACPvR,SAAU,SAACV,GAAD,OAAOkS,EAAQlS,EAAEW,OAAOC,aAG1C,eAACd,EAAA,EAAKkP,MAAN,CAAYC,UAAU,aAAtB,UACI,cAACnP,EAAA,EAAKoP,MAAN,kBACA,cAACpP,EAAA,EAAKS,QAAN,CACIC,KAAK,OACLK,YAAY,iBACZ0R,UAAQ,EACR3R,MAAOuR,EACPzR,SAAU,SAACV,GAAD,OAAOoS,EAAcpS,EAAEW,OAAOC,aAGhD,eAACd,EAAA,EAAKkP,MAAN,CAAYC,UAAU,UAAtB,UACI,cAACnP,EAAA,EAAKoP,MAAN,sBACA,cAACpP,EAAA,EAAKS,QAAN,CACIC,KAAK,OACLK,YAAY,gBACZ0R,UAAQ,EACR3R,MAAOyR,EACP3R,SAAU,SAACV,GAAD,OAAOsS,EAAWtS,EAAEW,OAAOC,aAG7C,cAACG,EAAA,EAAD,CAAQP,KAAK,SAASH,UAAU,qBAAhC,qCCjBjBmS,GAnDO,SAAC,GAAe,IAAd9S,EAAa,EAAbA,QACPgG,aAAY,SAAAC,GAAK,OAAIA,EAAM8J,QAChCqC,iBAGJpS,EAAQS,KAAK,aALgB,MAQQR,mBAAS,UARjB,mBAQ3B8S,EAR2B,KAQZC,EARY,KAU3BpO,EAAWmB,cAQjB,OACI,eAACM,EAAA,EAAD,WACI,cAAC,GAAD,CAAeyL,OAAK,EAACC,OAAK,EAACC,OAAK,IAChC,oBAAIrR,UAAU,cAAd,qBACA,cAACmH,GAAA,EAAD,CAAKnH,UAAU,4BAAf,SACI,cAACiH,EAAA,EAAD,CAAKsB,GAAI,GAAIJ,GAAI,EAAjB,SACI,cAACT,GAAA,EAAD,UACI,cAACA,GAAA,EAAKK,KAAN,UACI,eAACtI,EAAA,EAAD,CAAMC,SAdR,SAACC,GPgBM,IAACiF,EOf1BjF,EAAEC,iBACFqE,GPc0BW,EOdCwN,EPcQ,SAACnO,GACxCA,EAAS,CACL9D,KAAM0D,GACNgB,QAASD,IAEbK,aAAagK,QAAQ,gBAAiBC,KAAKC,UAAUvK,OOlBjDvF,EAAQS,KAAK,gBAWO,UACI,eAACL,EAAA,EAAKkP,MAAN,WACI,cAAClP,EAAA,EAAKoP,MAAN,CAAY5G,GAAG,SAAf,2BACA,cAAChB,EAAA,EAAD,UACI,cAACxH,EAAA,EAAK6S,MAAN,CACInS,KAAK,QACLoS,MAAM,uBACNpM,GAAG,SACH/F,KAAK,gBACLG,MAAM,SACNiS,SAAO,EACPnS,SAAU,SAACV,GAAD,OAAO0S,EAAiB1S,EAAEW,OAAOC,eAIvD,cAACG,EAAA,EAAD,CAAQP,KAAK,SAASH,UAAU,qBAAhC,qCC6FjByS,GArIU,SAAC,GAAe,IAAdpT,EAAa,EAAbA,QACjB4E,EAAWmB,cACXgK,EAAO/J,aAAY,SAAAC,GAAK,OAAIA,EAAM8J,QACxCsD,QAAQC,IAAIvD,EAAKC,UAAUpC,QAG3BmC,EAAKwD,WAAaxD,EAAKC,UAAUW,QAAO,SAACC,EAAKH,GAAN,OAAeG,EAAMH,EAAKxH,MAAQwH,EAAKxC,MAAK,GACpF8B,EAAKyD,cAAgBzD,EAAKwD,WAAa,IAAM,GAAK,GAClDxD,EAAK0D,SAAWpD,QAAQ,IAAON,EAAKwD,YAAY1C,QAAQ,IACxDd,EAAK2D,YAAcrD,OAAON,EAAKwD,YAAclD,OAAON,EAAKyD,eAAiBnD,OAAON,EAAK0D,WAAW5C,QAAQ,GAEzG,IAAM8C,EAAc3N,aAAY,SAAAC,GAAK,OAAIA,EAAM0N,eACvCC,EAAyBD,EAAzBC,MAAOlF,EAAkBiF,EAAlBjF,QAAS3C,EAAS4H,EAAT5H,MAExBE,qBAAU,WACHyC,GACC1O,EAAQS,KAAR,iBAAuBmT,EAAMtL,QAGnC,CAACtI,EAAS0O,IAeZ,OACI,qCACI,cAAC,GAAD,CAAeoD,OAAK,EAACC,OAAK,EAACC,OAAK,EAACC,OAAK,IACtC,cAAC5J,GAAA,EAAD,UACA,cAACA,GAAA,EAAKK,KAAN,UACA,eAACZ,GAAA,EAAD,WACI,cAACF,EAAA,EAAD,CAAKkB,GAAI,EAAT,SACI,eAAC8F,GAAA,EAAD,CAAWtN,QAAQ,QAAnB,UACI,eAACsN,GAAA,EAAUtH,KAAX,WACI,0CACA,8BACI,6CACCyI,EAAKqC,gBAAgBC,QAF1B,IAEoC,IAC/BtC,EAAKqC,gBAAgBG,KAAM,IAC3BxC,EAAKqC,gBAAgBK,WAJ1B,IAIuC,IAClC1C,EAAKqC,gBAAgBO,QAL1B,UAQJ,eAAC/D,GAAA,EAAUtH,KAAX,WACI,gDACA,8CACCyI,EAAKgD,iBAEV,eAACnE,GAAA,EAAUtH,KAAX,WACI,6CAC2B,IAA1ByI,EAAKC,UAAUpC,OAAe,cAAC,GAAD,kCAC3B,cAACgB,GAAA,EAAD,CAAWtN,QAAQ,QAAnB,SACKyO,EAAKC,UAAU7D,KAAI,SAACsE,EAAMoD,GAAP,OAChB,cAACjF,GAAA,EAAUtH,KAAX,UACI,eAACQ,GAAA,EAAD,WACI,cAACF,EAAA,EAAD,CAAKkB,GAAI,EAAT,SACI,cAACrC,EAAA,EAAD,CAAOC,IAAK+J,EAAKjI,MAAO4D,IAAKqE,EAAK1P,KAAMuF,OAAK,EAACoK,SAAO,MAEzD,cAAC9I,EAAA,EAAD,UACI,cAAC,OAAD,CAAMZ,GAAE,iBAAYyJ,EAAKrB,QAAzB,SAAqCqB,EAAK1P,SAE9C,eAAC6G,EAAA,EAAD,CAAKkB,GAAI,EAAT,UACK2H,EAAKxC,IADV,OACmBwC,EAAKxH,MADxB,OACmCwH,EAAKxC,IAAIwC,EAAKxH,aATpC4K,gBAmB7C,cAACjM,EAAA,EAAD,CAAKkB,GAAI,EAAT,SACI,cAACT,GAAA,EAAD,UACI,eAACuG,GAAA,EAAD,CAAWtN,QAAQ,QAAnB,UACI,cAACsN,GAAA,EAAUtH,KAAX,UACI,iDAEJ,cAACsH,GAAA,EAAUtH,KAAX,UACI,eAACQ,GAAA,EAAD,WACI,cAACF,EAAA,EAAD,oBACA,eAACA,EAAA,EAAD,eAAOmI,EAAKwD,mBAGpB,cAAC3E,GAAA,EAAUtH,KAAX,UACI,eAACQ,GAAA,EAAD,WACI,cAACF,EAAA,EAAD,uBACA,eAACA,EAAA,EAAD,eAAOmI,EAAKyD,sBAGpB,cAAC5E,GAAA,EAAUtH,KAAX,UACI,eAACQ,GAAA,EAAD,WACI,cAACF,EAAA,EAAD,kBACA,eAACA,EAAA,EAAD,eAAOmI,EAAK0D,iBAGpB,cAAC7E,GAAA,EAAUtH,KAAX,UACI,eAACQ,GAAA,EAAD,WACI,cAACF,EAAA,EAAD,oBACA,eAACA,EAAA,EAAD,eAAOmI,EAAK2D,mBAGpB,cAAC9E,GAAA,EAAUtH,KAAX,UACSyE,GAAS,cAAC,GAAD,CAASzK,QAAQ,SAAjB,SAA2ByK,MAE7C,eAAC6C,GAAA,EAAUtH,KAAX,WACK+L,QAAQC,IAAI,KAA+B,IAA1BvD,EAAKC,UAAUpC,QACjC,cAACvM,EAAA,EAAD,CACIP,KAAK,SACLH,UAAU,qBACVwI,SAAoC,IAA1B4G,EAAKC,UAAUpC,OACzBrG,QAnGN,WACtB3C,ECPmB,SAACgP,GAAD,8CAAW,WAAMhP,EAAUC,GAAhB,uBAAAC,EAAA,sEAE9BF,EAAS,CACL9D,KAAMkC,IAHoB,EAMM6B,IAAfE,EANS,EAMtBC,UAAaD,SAEfE,EAAS,CACXC,QAAS,CACL,eAAe,mBACfC,cAAc,UAAD,OAAYJ,EAASK,SAXZ,SAeTC,IAAMgK,KAAN,cAA0BuE,EAAO3O,GAfxB,gBAevBM,EAfuB,EAevBA,KAEPX,EAAS,CACL9D,KAAMmC,EACNuC,QAASD,IAnBiB,kDAsB9BX,EAAS,CACL9D,KAAMoC,GACNsC,QAAS,KAAMC,UAAY,KAAMA,SAASF,KAAKG,QAAU,KAAMD,SAASF,KAAKG,QAAU,KAAMA,UAxBnE,0DAAX,wDDOVoO,CAAY,CACjBC,WAAYhE,EAAKC,UACjBoC,gBAAiBrC,EAAKqC,gBACtBW,cAAehD,EAAKgD,cACpBQ,WAAYxD,EAAKwD,WACjBC,cAAezD,EAAKyD,cACpBC,SAAU1D,EAAK0D,SACfC,WAAY3D,EAAK2D,cAErB9N,aAAaC,WAAW,cAqFA,8C,UEmEjBmO,GApLK,SAAC,GAAsB,IAArBhU,EAAoB,EAApBA,QACZiU,EADgC,EAAX/G,MACLC,OAAOrG,GADS,EAEN7G,oBAAS,GAFH,mBAE/BiU,EAF+B,KAErBC,EAFqB,KAGhCvP,EAAWmB,cAGVhB,EADWiB,aAAY,SAAAC,GAAK,OAAIA,EAAMjB,aACtCD,SAEDqP,EAAepO,aAAY,SAAAC,GAAK,OAAIA,EAAMmO,gBACxCR,EAAyBQ,EAAzBR,MAAO9H,EAAkBsI,EAAlBtI,QAASC,EAASqI,EAATrI,MAElBsI,EAAWrO,aAAY,SAAAC,GAAK,OAAIA,EAAMoO,YAC3BC,EAAmCD,EAA5C3F,QAA8B6F,EAAcF,EAAvBvI,QAEvB0I,EAAexO,aAAY,SAAAC,GAAK,OAAIA,EAAMuO,gBAC/BC,EAA2CD,EAApD9F,QAAkCgG,EAAkBF,EAA3B1I,QAE7BA,IACA8H,EAAML,WAAaK,EAAMG,WAAWpD,QAAO,SAACC,EAAKH,GAAN,OAAeG,EAAMH,EAAKxH,MAAQwH,EAAKxC,MAAK,IAI3FhC,qBAAU,WACFlH,GACA/E,EAAQS,KAAK,UAGdsE,IAAaA,EAASoC,SAClByM,GAASA,EAAMe,KAAKrM,MAAQvD,EAASuD,KACpCtI,EAAQS,KAAK,UAIrB,IDSwBqG,ECTlB8N,EAAe,uCAAG,gCAAA9P,EAAA,sEACaO,IAAMC,IAAI,sBADvB,gBACNuP,EADM,EACZtP,MACFuP,EAASC,SAASC,cAAc,WAC/BlU,KAAM,kBACbgU,EAAOpO,IAAP,kDAAwDmO,GACxDC,EAAOG,OAAQ,EACfH,EAAOI,OAAS,WACZf,GAAY,IAEhBY,SAASI,KAAKC,YAAYN,GATN,4CAAH,sDAYjBlB,GAASA,EAAMtL,MAAQ2L,GAAWK,GAAcG,GAChD7P,EAAS,CAAC9D,KAAM2C,KAChBmB,EAAS,CAAC9D,KAAMsD,KAChBQ,GDNoBkC,ECMKmN,EDNN,uCAAQ,WAAMrP,EAAUC,GAAhB,uBAAAC,EAAA,sEAE/BF,EAAS,CACL9D,KAAMqC,KAHqB,EAMK0B,IAAfE,EANU,EAMvBC,UAAaD,SAEfE,EAAS,CACXC,QAAS,CACLC,cAAc,UAAD,OAAYJ,EAASK,SAVX,SAcVC,IAAMC,IAAN,sBAAyBwB,GAAM7B,GAdrB,gBAcxBM,EAdwB,EAcxBA,KAEPX,EAAS,CACL9D,KAAMsC,GACNoC,QAASD,IAlBkB,kDAqB/BX,EAAS,CACL9D,KAAMuC,GACNmC,QAAS,KAAMC,UAAY,KAAMA,SAASF,KAAKG,QAAU,KAAMD,SAASF,KAAKG,QAAU,KAAMA,UAvBlE,0DAAR,2DCQbkO,EAAMyB,SACRC,OAAOC,OAGPpB,GAAY,GAFZS,OAKV,CAAChQ,EAAU5E,EAASiU,EAASL,EAAOU,EAAYG,EAAgB1P,IAUlE,OAAO+G,EAAU,cAAC,GAAD,IAAaC,EAAQ,cAAC,GAAD,CAASzK,QAAQ,SAAjB,SAA2ByK,IAC7D,qCACI,qBAAIpL,UAAU,cAAd,UAA4B,uCAA5B,IAA2CiT,EAAMtL,OACjD,cAACD,GAAA,EAAD,UACI,cAACA,GAAA,EAAKK,KAAN,UACJ,eAACZ,GAAA,EAAD,WACI,cAACF,EAAA,EAAD,CAAKkB,GAAI,EAAT,SACI,eAAC8F,GAAA,EAAD,CAAWtN,QAAQ,QAAnB,UACI,eAACsN,GAAA,EAAUtH,KAAX,WACI,0CACA,8BAAG,2CAAH,IAA4BsM,EAAMe,KAAK5T,QACvC,8BAAG,4CAAH,IAA2B,mBAAGyF,KAAI,iBAAYoN,EAAMe,KAAK3D,OAA9B,SAAwC4C,EAAMe,KAAK3D,WAC9E,8BACI,+CAA2B,IAC1B4C,EAAMxB,gBAAgBC,QAF3B,IAEqC,IAChCuB,EAAMxB,gBAAgBG,KAAM,IAC5BqB,EAAMxB,gBAAgBK,WAJ3B,IAIwC,IACnCmB,EAAMxB,gBAAgBO,QAL3B,OAOCiB,EAAM4B,YACF,eAAC,GAAD,CAASlU,QAAQ,UAAjB,0BAAyCsS,EAAM6B,eAC/C,cAAC,GAAD,CAASnU,QAAQ,SAAjB,8BAGT,eAACsN,GAAA,EAAUtH,KAAX,WACI,gDACA,8BACI,8CACCsM,EAAMb,iBAEVa,EAAMyB,OACF,eAAC,GAAD,CAAS/T,QAAQ,UAAjB,qBAAoCsS,EAAM8B,UAC1C,cAAC,GAAD,CAASpU,QAAQ,SAAjB,yBAGT,eAACsN,GAAA,EAAUtH,KAAX,WACI,6CAC6B,IAA5BsM,EAAMG,WAAWnG,OAAe,cAAC,GAAD,8BAC7B,cAACgB,GAAA,EAAD,CAAWtN,QAAQ,QAAnB,SACKsS,EAAMG,WAAW5H,KAAI,SAACsE,EAAMoD,GAAP,OAClB,cAACjF,GAAA,EAAUtH,KAAX,UACI,eAACQ,GAAA,EAAD,WACI,cAACF,EAAA,EAAD,CAAKkB,GAAI,EAAT,SACI,cAACrC,EAAA,EAAD,CAAOC,IAAK+J,EAAKjI,MAAO4D,IAAKqE,EAAK1P,KAAMuF,OAAK,EAACoK,SAAO,MAEzD,cAAC9I,EAAA,EAAD,UACI,cAAC,OAAD,CAAMZ,GAAE,iBAAYyJ,EAAKrB,QAAzB,SAAqCqB,EAAK1P,SAE9C,eAAC6G,EAAA,EAAD,CAAKkB,GAAI,EAAT,UACK2H,EAAKxC,IADV,OACmBwC,EAAKxH,MADxB,OACmCwH,EAAKxC,IAAIwC,EAAKxH,aATpC4K,gBAmB7C,cAACjM,EAAA,EAAD,CAAKkB,GAAI,EAAT,SACI,cAACT,GAAA,EAAD,UACI,eAACuG,GAAA,EAAD,CAAWtN,QAAQ,QAAnB,UACI,cAACsN,GAAA,EAAUtH,KAAX,UACI,iDAEJ,cAACsH,GAAA,EAAUtH,KAAX,UACI,eAACQ,GAAA,EAAD,WACI,cAACF,EAAA,EAAD,oBACA,eAACA,EAAA,EAAD,eAAOgM,EAAML,mBAGrB,cAAC3E,GAAA,EAAUtH,KAAX,UACI,eAACQ,GAAA,EAAD,WACI,cAACF,EAAA,EAAD,uBACA,eAACA,EAAA,EAAD,eAAOgM,EAAMJ,sBAGrB,cAAC5E,GAAA,EAAUtH,KAAX,UACI,eAACQ,GAAA,EAAD,WACI,cAACF,EAAA,EAAD,kBACA,eAACA,EAAA,EAAD,eAAOgM,EAAMH,iBAGrB,cAAC7E,GAAA,EAAUtH,KAAX,UACI,eAACQ,GAAA,EAAD,WACI,cAACF,EAAA,EAAD,oBACA,eAACA,EAAA,EAAD,eAAOgM,EAAMF,oBAGnBE,EAAMyB,QACJ,eAACzG,GAAA,EAAUtH,KAAX,WACKiN,GAAc,cAAC,GAAD,IACbL,EACE,cAAC,gBAAD,CAAcyB,OAAQ/B,EAAMF,WAAYkC,UArG9C,SAACC,GAC3BjR,EDWgB,SAACqP,EAAS4B,GAAV,8CAA4B,WAAMjR,EAAUC,GAAhB,uBAAAC,EAAA,sEAE5CF,EAAS,CACL9D,KAAMwC,KAHkC,EAMRuB,IAAfE,EANuB,EAMpCC,UAAaD,SAEfE,EAAS,CACXC,QAAS,CACL,eAAe,mBACfC,cAAc,UAAD,OAAYJ,EAASK,SAXE,SAevBC,IAAMyQ,IAAN,sBAAyB7B,EAAzB,QAAwC4B,EAAe5Q,GAfhC,gBAerCM,EAfqC,EAerCA,KAEPX,EAAS,CACL9D,KAAMyC,GACNiC,QAASD,IAnB+B,kDAsB5CX,EAAS,CACL9D,KAAM0C,GACNgC,QAAS,KAAMC,UAAY,KAAMA,SAASF,KAAKG,QAAU,KAAMD,SAASF,KAAKG,QAAU,KAAMA,UAxBrD,0DAA5B,wDCXPqQ,CAAS9B,EAAS4B,OAmGc,cAAC,GAAD,OAKpBnB,GAAkB,cAAC,GAAD,IAClB3P,GAAYA,EAASoC,SAAWyM,EAAMyB,SAAWzB,EAAM4B,aACpD,cAAC5G,GAAA,EAAUtH,KAAX,UACI,cAACjG,EAAA,EAAD,CAAQP,KAAK,SAASQ,QAAQ,eAAeX,UAAU,YAAY4G,QAxG5E,WACnB3C,EDqCoB,SAACgP,GAAD,8CAAW,WAAMhP,EAAUC,GAAhB,uBAAAC,EAAA,sEAE/BF,EAAS,CACL9D,KAAMmD,KAHqB,EAMKY,IAAfE,EANU,EAMvBC,UAAaD,SAEfE,EAAS,CACXC,QAAS,CACLC,cAAc,UAAD,OAAYJ,EAASK,SAVX,SAcTC,IAAMyQ,IAAN,sBAAyBlC,EAAMtL,IAA/B,YAA8C,GAAIrD,GAdzC,gBAcxBM,EAdwB,EAcxBA,KAEPX,EAAS,CACL9D,KAAMoD,GACNsB,QAASD,IAlBkB,kDAqB/BX,EAAS,CACL9D,KAAMqD,GACNqB,QAAS,KAAMC,UAAY,KAAMA,SAASF,KAAKG,QAAU,KAAMD,SAASF,KAAKG,QAAU,KAAMA,UAvBlE,0DAAX,wDCrCXsQ,CAAapC,KAuGM,mDCnFrBqC,GAxFG,SAAC,GAAe,IAAdjW,EAAa,EAAbA,QAAa,EACNC,mBAAS,IADH,mBACvBc,EADuB,KACjBwQ,EADiB,OAEJtR,mBAAS,IAFL,mBAEvB+Q,EAFuB,KAEhBC,EAFgB,OAGEhR,mBAAS,IAHX,mBAGvBiR,EAHuB,KAGbC,EAHa,OAIgBlR,mBAAS,IAJzB,mBAIvBuR,EAJuB,KAINC,EAJM,OAKAxR,mBAAS,MALT,mBAKvByF,EALuB,KAKdgM,EALc,KAOvB9M,EAAWmB,cAGXmQ,EAAkBlQ,aAAY,SAAAC,GAAK,OAAIA,EAAMiQ,mBAC3CpK,EAAyBoK,EAAzBpK,QAASC,EAAgBmK,EAAhBnK,MAAO4I,EAASuB,EAATvB,KAGhB5P,EADUiB,aAAY,SAAAC,GAAK,OAAIA,EAAMjB,aACrCD,SAGA2J,EADW1I,aAAY,SAAAC,GAAK,OAAIA,EAAMkQ,cACtCzH,QAGRzC,qBAAU,WAEDlH,EAGI4P,EAAK5T,MAAQ4T,EAAKrM,MAAQvD,EAASuD,KAGnCiJ,EAAQoD,EAAK5T,MACbkQ,EAAS0D,EAAK3D,QAHdpM,EAASF,GAAY,YAHzB1E,EAAQS,KAAK,YASpB,CAACT,EAAS+E,EAAUH,EAAU+P,IAYhC,OACI,cAAC7M,GAAA,EAAD,UACI,cAACF,EAAA,EAAD,CAAKkB,GAAI,CAACsN,KAAK,EAAGC,OAAQ,GAA1B,SACA,cAAChO,GAAA,EAAD,CAAM1H,UAAU,MAAhB,SACA,eAAC0H,GAAA,EAAKK,KAAN,WACI,oBAAI/H,UAAU,cAAd,SAA4B,0CAC3B+E,GAAW,cAAC,GAAD,CAASpE,QAAQ,SAAjB,SAA2BoE,IACtCqG,GAAS,cAAC,GAAD,CAASzK,QAAQ,SAAjB,SAA2ByK,IACpC2C,GAAW,cAAC,GAAD,CAASpN,QAAQ,UAAjB,4BACXwK,GAAW,cAAC,GAAD,IACZ,eAAC1L,EAAA,EAAD,CAAMC,SApBI,SAACC,GACnBA,EAAEC,iBACC2Q,IAAaM,EACZE,EAAW,yBAGZ9M,E7B8EmB,SAAC+P,GAAD,8CAAU,WAAM/P,EAAUC,GAAhB,uBAAAC,EAAA,sEAEhCF,EAAS,CACL9D,KAAMoB,IAHsB,EAMI2C,IAAfE,EANW,EAMxBC,UAAaD,SAEfE,EAAS,CACXC,QAAS,CACL,eAAe,mBACfC,cAAc,UAAD,OAAYJ,EAASK,SAXV,SAeXC,IAAMyQ,IAAN,qBAAgCnB,EAAM1P,GAf3B,gBAezBM,EAfyB,EAezBA,KAEPX,EAAS,CACL9D,KAAMqB,EACNqD,QAASD,IAnBmB,kDAsBhCX,EAAS,CACL9D,KAAMsB,EACNoD,QAAS,KAAMC,UAAY,KAAMA,SAASF,KAAKG,QAAU,KAAMD,SAASF,KAAKG,QAAU,KAAMA,UAxBjE,0DAAV,wD6B9EV4Q,CAAe,CAACxP,GAAI6N,EAAKrM,IAAKvH,OAAMiQ,QAAOE,eAc/C,UACI,eAAC9Q,EAAA,EAAKkP,MAAN,CAAYC,UAAU,OAAtB,UACI,cAACnP,EAAA,EAAKoP,MAAN,oBACA,cAACpP,EAAA,EAAKS,QAAN,CAAcC,KAAK,OAAOK,YAAY,aAAaD,MAAOH,EAAMC,SAAU,SAACV,GAAD,OAAOiR,EAAQjR,EAAEW,OAAOC,aAEtG,eAACd,EAAA,EAAKkP,MAAN,CAAYC,UAAU,QAAtB,UACI,cAACnP,EAAA,EAAKoP,MAAN,sBACA,cAACpP,EAAA,EAAKS,QAAN,CAAcC,KAAK,OAAOK,YAAY,cAAcD,MAAO8P,EAAOhQ,SAAU,SAACV,GAAD,OAAO2Q,EAAS3Q,EAAEW,OAAOC,aAEzG,eAACd,EAAA,EAAKkP,MAAN,CAAYC,UAAU,WAAtB,UACI,cAACnP,EAAA,EAAKoP,MAAN,wBACA,cAACpP,EAAA,EAAKS,QAAN,CACIC,KAAK,WACLK,YAAY,iBACZD,MAAOgQ,EACPlQ,SAAU,SAACV,GAAD,OAAO6Q,EAAY7Q,EAAEW,OAAOC,aAE9C,eAACd,EAAA,EAAKkP,MAAN,CAAYC,UAAU,kBAAtB,UACI,cAACnP,EAAA,EAAKoP,MAAN,gCACA,cAACpP,EAAA,EAAKS,QAAN,CACIC,KAAK,WACLK,YAAY,mBACZD,MAAOsQ,EACPxQ,SAAU,SAACV,GAAD,OAAOmR,EAAmBnR,EAAEW,OAAOC,aAErD,eAACG,EAAA,EAAD,CAAQP,KAAK,SAASH,UAAU,qBAAhC,UAAqD,mBAAGA,UAAU,gBAAmB,IAArF,uB,UCrEL4V,GAbQ,SAAC,GAA2B,IAAzB7J,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,KAAM6J,EAAW,EAAXA,KACnC,OAAO9J,EAAQ,GACX,cAACE,GAAA,EAAD,CAAYC,KAAK,KAAKvL,QAAQ,eAA9B,SACK,aAAIwL,MAAMJ,GAAOK,QAAQZ,KAAI,SAAAa,GAAC,OAC3B,cAAC,gBAAD,CAAyBhG,GAAE,UAAKwP,EAAL,YAAaxJ,EAAE,GAA1C,SACI,cAACJ,GAAA,EAAWtF,KAAZ,CAAiBI,OAAQsF,EAAE,IAAML,EAAjC,SAAwCK,EAAE,KAD1BA,EAAE,SCRzByJ,GAA0B,0BAC1BC,GAA0B,0BAC1BC,GAAuB,uBAEvBC,GAAiC,iCACjCC,GAAiC,iCACjCC,GAA8B,8BAC9BC,GAA+B,+BCG/BC,GAAa,yDAAM,WAAMpS,EAAUC,GAAhB,uBAAAC,EAAA,sEAExBF,EAAS,CAAC9D,KAAM2V,KAFQ,EAGY5R,IAAfE,EAHG,EAGhBC,UAAaD,SAEfE,EAAS,CACXC,QAAS,CACL,eAAe,mBACfC,cAAc,UAAD,OAAYJ,EAASK,SARlB,SAWDC,IAAMC,IAAI,wBAAyBL,GAXlC,gBAWhBM,EAXgB,EAWhBA,KACRX,EAAS,CACL9D,KAAM4V,GACNlR,QAASD,IAdW,kDAiBxBX,EAAS,CACL9D,KAAM6V,GACNnR,QAAS,KAAMC,UAAY,KAAMA,SAASF,KAAKG,QAAU,KAAMD,SAASF,KAAKG,QAAU,KAAMA,UAnBzE,0DAAN,yDCkFXuR,GAlFE,SAAC,GAAsB,IAArBjX,EAAoB,EAApBA,QACTuL,EAD6B,EAAX2B,MACCC,OAAO5B,YAAc,EADX,EAGVtL,qBAHU,mBAG7BuL,EAH6B,KAGtB0L,EAHsB,KAI7BtS,EAAWmB,cAGThB,EADUiB,aAAY,SAAAC,GAAK,OAAIA,EAAMjB,aACrCD,SAEFoS,EAAcnR,aAAY,SAAAC,GAAK,OAAIA,EAAMkR,eAC/BC,EAA0DD,EAAlErL,QAA6BuL,EAAqCF,EAA3CpL,MAAmBuL,EAAwBH,EAAxBG,OAAQ3K,EAAgBwK,EAAhBxK,KAAMD,EAAUyK,EAAVzK,MAGjD6K,EADQvR,aAAY,SAAAC,GAAK,OAAIA,EAAMuR,kBAC1ChM,MAiBR,OAfAS,qBAAU,WAEDlH,GAGEyG,GACC5G,EN8GY,eAAC2G,EAAD,uDAAc,GAAIC,EAAlB,uDAA0B,GAA1B,8CAAiC,WAAM5G,EAAUC,GAAhB,uBAAAC,EAAA,sEAErDF,EAAS,CACL9D,KAAM4C,KAH2C,EAMjBmB,IAAfE,EANgC,EAM7CC,UAAaD,SAEfE,EAAS,CACXC,QAAS,CACLC,cAAc,UAAD,OAAYJ,EAASK,SAVW,SAchCC,IAAMC,IAAN,0CAA6CiG,EAA7C,kBAAiEC,GAASvG,GAd1C,gBAc9CM,EAd8C,EAc9CA,KAEPX,EAAS,CACL9D,KAAM6C,GACN6B,QAASD,IAlBwC,kDAqBrDX,EAAS,CACL9D,KAAM8C,GACN4B,QAAS,KAAMC,UAAY,KAAMA,SAASF,KAAKG,QAAU,KAAMD,SAASF,KAAKG,QAAU,KAAMA,UAvB5C,0DAAjC,wDM9GH+R,CAAalM,EAAYC,IAElC+L,GAAYA,EAAQ/L,MAGpB0L,EAASK,EAAQ/L,OAFjB5G,EAASoS,OANZhX,EAAQS,KAAK,YAUpB,CAACT,EAAS+E,EAAUH,EAAU2G,EAAYC,EAAO+L,IAG/C,cAACzP,GAAA,EAAD,UACI,eAACF,EAAA,EAAD,CAAKkB,GAAI,GAAT,UACI,oBAAInI,UAAU,cAAd,SAA4B,4CAC3ByW,EAAgB,cAAC,GAAD,IAAaC,EAAc,cAAC,GAAD,CAAS/V,QAAQ,SAAjB,SAA2B+V,IACnE,qCACA,eAACK,GAAA,EAAD,CAAOC,OAAK,EAACC,YAAU,EAACjX,UAAU,uBAAlC,UACI,uBAAOA,UAAU,eAAjB,SACI,+BACI,oCACA,sCACA,uCACA,sCACA,2CACA,6CAGR,gCACK2W,EAAOnL,KAAI,SAAAyH,GAAK,OACb,+BACI,6BAAKA,EAAMtL,MACX,6BAAKsL,EAAM1E,UAAUC,UAAU,EAAG,MAClC,6BAAKyE,EAAMF,aACX,6BACKE,EAAMyB,OACFzB,EAAM8B,OAAOvG,UAAU,EAAG,IAC1B,mBAAGxO,UAAU,mBAGtB,6BACKiT,EAAM4B,YACF5B,EAAM6B,YAAYtG,UAAU,EAAG,IAC/B,mBAAGxO,UAAU,mBAGtB,6BACI,cAAC,gBAAD,CAAeqG,GAAE,iBAAY4M,EAAMtL,KAAnC,SACI,eAACjH,EAAA,EAAD,CAAQC,QAAQ,eAAeX,UAAU,SAAzC,UAAkD,mBAAGA,UAAU,mBAAsB,IAArF,mBAlBHiT,EAAMtL,aAyB3B,cAAC,GAAD,CAAgBoE,MAAOA,EAAOC,KAAMA,EAAM6J,KAAM,uBCxDrDqB,GAzBC,WACZ,OACA,cAAC/P,GAAA,EAAD,CAAKnH,UAAU,iCAAf,SAEI,cAACiH,EAAA,EAAD,CAAKkB,GAAI,EAAGI,GAAI,GAAIvI,UAAU,cAA9B,SACI,cAAC0H,GAAA,EAAD,UACI,eAACA,GAAA,EAAKK,KAAN,WACI,cAACjC,EAAA,EAAD,CAAOC,IAAK,sBAAuBoR,eAAa,EAACF,YAAU,EAACxL,IAAI,SAASzL,UAAU,uBACnF,eAACiO,GAAA,EAAD,WACI,eAACA,GAAA,EAAUtH,KAAX,CAAgByQ,QAAM,EAAtB,UAAuB,iDAAvB,IAA+C,uBAA/C,+HACA,eAACnJ,GAAA,EAAUtH,KAAX,CAAgByQ,QAAM,EAAtB,UAAuB,0CAAvB,kDACA,eAACnJ,GAAA,EAAUtH,KAAX,CAAgByQ,QAAM,EAAtB,UAAuB,wCAAvB,0EACA,eAACnJ,GAAA,EAAUtH,KAAX,CAAgByQ,QAAM,EAAtB,UAAuB,2CAAvB,iCACA,eAACnJ,GAAA,EAAUtH,KAAX,CAAgByQ,QAAM,EAAtB,UAAuB,mDAAvB,4BACA,cAACnJ,GAAA,EAAUtH,KAAX,CAAgByQ,QAAM,EAAtB,SACI,mBAAGvR,KAAK,uCAAuC7F,UAAU,8BAA8BqX,IAAI,aAAa/W,OAAO,SAA/G,qCC2EbgX,GAnFM,SAAC,GAAsB,IAArBjY,EAAoB,EAApBA,QACbuL,EADiC,EAAX2B,MACHC,OAAO5B,YAAc,EADP,EAEdtL,qBAFc,mBAEjCuL,EAFiC,KAE1B0L,EAF0B,KAIjCtS,EAAWmB,cAEXmS,EAAWlS,aAAY,SAAAC,GAAK,OAAIA,EAAMiS,YACpCpM,EAAuCoM,EAAvCpM,QAASC,EAA8BmM,EAA9BnM,MAAOoM,EAAuBD,EAAvBC,MAAOzL,EAAgBwL,EAAhBxL,MAAOC,EAASuL,EAATvL,KAG9B5H,EADUiB,aAAY,SAAAC,GAAK,OAAIA,EAAMjB,aACrCD,SAGSqT,EADEpS,aAAY,SAAAC,GAAK,OAAIA,EAAMoS,cACtC3J,QAGO6I,EADQvR,aAAY,SAAAC,GAAK,OAAIA,EAAMuR,kBAC1ChM,MAERS,qBAAU,WACHlH,GAAYA,EAASoC,SACjBqE,GACC5G,EnC4HS,eAAC2G,EAAD,uDAAc,GAAIC,EAAlB,uDAA0B,GAA1B,8CAAiC,WAAM5G,EAAUC,GAAhB,uBAAAC,EAAA,sEAElDF,EAAS,CACL9D,KAAMuB,IAHwC,EAMdwC,IAAfE,EAN6B,EAM1CC,UAAaD,SAEfE,EAAS,CACXC,QAAS,CACLC,cAAc,UAAD,OAAYJ,EAASK,SAVQ,SAc7BC,IAAMC,IAAN,gCAAmCiG,EAAnC,kBAAuDC,GAASvG,GAdnC,gBAc3CM,EAd2C,EAc3CA,KAEPX,EAAS,CACL9D,KAAMwB,EACNkD,QAASD,IAlBqC,kDAqBlDX,EAAS,CACL9D,KAAMyB,EACNiD,QAAS,KAAMC,UAAY,KAAMA,SAASF,KAAKG,QAAU,KAAMD,SAASF,KAAKG,QAAU,KAAMA,UAvB/C,0DAAjC,wDmC5HA4S,CAAU/M,EAAYC,IAC/B+L,GAAYA,EAAQ/L,MAGpB0L,EAASK,EAAQ/L,OAFjB5G,EAASoS,OAIbhX,EAAQS,KAAK,YAGnB,CAACmE,EAAU5E,EAAS+E,EAAUqT,EAAe7M,EAAYC,EAAO+L,IAElE,IAAMgB,EAAgB,SAACzR,GAChBwO,OAAOkD,QAAQ,kBACd5T,EnC4Ic,SAACkC,GAAD,8CAAQ,WAAMlC,EAAUC,GAAhB,mBAAAC,EAAA,sEAE1BF,EAAS,CACL9D,KAAM2B,IAHgB,EAMUoC,IAAfE,EANK,EAMlBC,UAAaD,SAEfE,EAAS,CACXC,QAAS,CACLC,cAAc,UAAD,OAAYJ,EAASK,SAVhB,SAcpBC,IAAMsG,OAAN,qBAA2B7E,GAAM7B,GAdb,OAgB1BL,EAAS,CACL9D,KAAM4B,IAjBgB,gDAoB1BkC,EAAS,CACL9D,KAAM6B,EACN6C,QAAS,KAAMC,UAAY,KAAMA,SAASF,KAAKG,QAAU,KAAMD,SAASF,KAAKG,QAAU,KAAMA,UAtBvE,yDAAR,wDmC5IL+S,CAAW3R,KAG5B,OACI,qCACI,oBAAInG,UAAU,cAAd,SAA4B,wCAC3BmL,EAAU,cAAC,GAAD,IAAaC,EAAQ,cAAC,GAAD,CAASzK,QAAQ,SAAjB,SAA2ByK,IACvD,qCACA,eAAC2L,GAAA,EAAD,CAAOC,OAAK,EAACC,YAAU,EAACjX,UAAU,uBAAlC,UACI,uBAAOA,UAAU,eAAjB,SACI,+BACI,oCACA,sCACA,uCACA,uCACA,6CAGR,gCACKwX,EAAMhM,KAAI,SAAAwI,GAAI,OACX,+BACI,6BAAKA,EAAKrM,MACV,6BAAKqM,EAAK5T,OACV,6BAAK4T,EAAK3D,QACV,6BACK2D,EAAKxN,QACD,mBAAGxG,UAAU,iBACZ,mBAAGA,UAAU,mBAEvB,+BACI,cAAC,gBAAD,CAAeqG,GAAE,sBAAiB2N,EAAKrM,IAAtB,SAAjB,SACI,cAACjH,EAAA,EAAD,CAAQC,QAAQ,eAAeX,UAAU,SAAzC,SAAkD,mBAAGA,UAAU,oBAEnE,cAACU,EAAA,EAAD,CAAQC,QAAQ,iBAAiBX,UAAU,SAAS4G,QAAS,kBAAMgR,EAAc5D,EAAKrM,MAAtF,SACI,mBAAG3H,UAAU,wBAdhBgU,EAAKrM,aAqB1B,cAAC,GAAD,CAAgBoE,MAAOA,EAAOC,KAAMA,EAAM6J,KAAM,2BCejDkC,GAzFM,SAAC,GAAsB,IAArBxL,EAAoB,EAApBA,MAAOlN,EAAa,EAAbA,QACpB2Y,EAASzL,EAAMC,OAAOrG,GADW,EAGhB7G,mBAAS,IAHO,mBAGjCc,EAHiC,KAG3BwQ,EAH2B,OAIdtR,mBAAS,IAJK,mBAIjC+Q,EAJiC,KAI1BC,EAJ0B,OAKVhR,oBAAS,GALC,mBAKjCkH,EALiC,KAKxByR,EALwB,KAOjChU,EAAWmB,cAGThB,EADUiB,aAAY,SAAAC,GAAK,OAAIA,EAAMjB,aACrCD,SAEFmR,EAAkBlQ,aAAY,SAAAC,GAAK,OAAIA,EAAMiQ,mBAC3CpK,EAAyBoK,EAAzBpK,QAASC,EAAgBmK,EAAhBnK,MAAO4I,EAASuB,EAATvB,KAElBkE,EAAkB7S,aAAY,SAAAC,GAAK,OAAIA,EAAM4S,mBAClCC,EAA8DD,EAAvE/M,QAA+BiN,EAAwCF,EAA/C9M,MAA6BiN,EAAkBH,EAA3BnK,QAKpDzC,qBAAU,WACFlH,GAAaA,EAASoC,SACtBnH,EAAQS,KAAK,UAGduY,GACCpU,EAAS,CAAE9D,KAAMiC,IACjB/C,EAAQS,KAAK,oBAETkU,EAAK5T,MAAQ4T,EAAKrM,MAASqQ,GAG3BpH,EAAQoD,EAAK5T,MACbkQ,EAAS0D,EAAK3D,OACd4H,EAAWjE,EAAKxN,UAJhBvC,EAASF,GAAYiU,MAO/B,CAAC/T,EAAU5E,EAAS+E,EAAU4P,EAAMgE,EAAQK,IAY9C,OACI,qCACI,cAAC,OAAD,CAAMhS,GAAG,kBAAkBrG,UAAU,qBAArC,qBAGA,cAAC,GAAD,UACI,cAAC0H,GAAA,EAAD,UACA,eAACA,GAAA,EAAKK,KAAN,WACA,2CACCoQ,GAAiB,cAAC,GAAD,IACjBC,GAAe,cAAC,GAAD,CAASzX,QAAQ,SAAjB,SAA2ByX,IAC1CjN,EAAU,cAAC,GAAD,IAAaC,EAAQ,cAAC,GAAD,CAASzK,QAAQ,SAAjB,SAA2ByK,IACvD,eAAC3L,EAAA,EAAD,CAAMC,SAtBA,SAACC,GACnBA,EAAEC,iBACFqE,EpC+JuB,SAAC+P,GAAD,8CAAU,WAAM/P,EAAUC,GAAhB,uBAAAC,EAAA,sEAEjCF,EAAS,CACL9D,KAAM8B,IAHuB,EAMGiC,IAAfE,EANY,EAMzBC,UAAaD,SAEfE,EAAS,CACXC,QAAS,CACL,eAAe,mBACfC,cAAc,UAAD,OAAYJ,EAASK,SAXT,SAeZC,IAAMyQ,IAAN,qBAAwBnB,EAAKrM,KAAOqM,EAAM1P,GAf9B,gBAe1BM,EAf0B,EAe1BA,KAEPX,EAAS,CAAC9D,KAAM+B,IAChB+B,EAAS,CAAE9D,KAAMiB,EAAmByD,QAASD,IAlBZ,kDAoBjCX,EAAS,CACL9D,KAAMgC,EACN0C,QAAS,KAAMC,UAAY,KAAMA,SAASF,KAAKG,QAAU,KAAMD,SAASF,KAAKG,QAAU,KAAMA,UAtBhE,0DAAV,wDoC/JduT,CAAgB,CACrB3Q,IAAKqQ,EACL5X,OACAiQ,QACA7J,cAgBQ,UACI,eAAC/G,EAAA,EAAKkP,MAAN,CAAYC,UAAU,OAAtB,UACI,cAACnP,EAAA,EAAKoP,MAAN,oBACA,cAACpP,EAAA,EAAKS,QAAN,CAAcC,KAAK,OAAOK,YAAY,aAAaD,MAAOH,EAAMC,SAAU,SAACV,GAAD,OAAOiR,EAAQjR,EAAEW,OAAOC,aAEtG,eAACd,EAAA,EAAKkP,MAAN,CAAYC,UAAU,QAAtB,UACI,cAACnP,EAAA,EAAKoP,MAAN,qBACA,cAACpP,EAAA,EAAKS,QAAN,CAAcC,KAAK,OAAOK,YAAY,cAAcD,MAAO8P,EAAOhQ,SAAU,SAACV,GAAD,OAAO2Q,EAAS3Q,EAAEW,OAAOC,aAEzG,cAACd,EAAA,EAAKkP,MAAN,CAAYC,UAAU,UAAtB,SACI,cAACnP,EAAA,EAAK6S,MAAN,CACInS,KAAK,WACLoS,MAAM,YACNC,QAAShM,EACTnG,SAAU,SAACV,GAAD,OAAOsY,EAAWtY,EAAEW,OAAOkS,cAE7C,eAAC9R,EAAA,EAAD,CAAQP,KAAK,SAASH,UAAU,qBAAhC,UAAqD,mBAAGA,UAAU,gBAAmB,IAArF,wBC6BTuY,GA1GM,SAAC,GAAsB,IAArBlZ,EAAoB,EAApBA,QACbuL,EADiC,EAAX2B,MACHC,OAAO5B,YAAc,EADP,EAEdtL,mBAAS,IAFK,mBAEjCuL,EAFiC,KAE1B0L,EAF0B,KAIjCtS,EAAWmB,cAEXqH,EAAWpH,aAAY,SAAAC,GAAK,OAAIA,EAAMmH,YACpCtB,EAAuCsB,EAAvCtB,QAASC,EAA8BqB,EAA9BrB,MAAOsB,EAAuBD,EAAvBC,MAAOV,EAAgBS,EAAhBT,KAAMD,EAAUU,EAAVV,MAG7B3H,EADUiB,aAAY,SAAAC,GAAK,OAAIA,EAAMjB,aACrCD,SAEFoU,EAAanT,aAAY,SAAAC,GAAK,OAAIA,EAAMkT,cAC7BC,EAA8DD,EAAvErN,QAA+BuN,EAAwCF,EAA/CpN,MAA6BqM,EAAkBe,EAA3BzK,QAE9C4K,EAAatT,aAAY,SAAAC,GAAK,OAAIA,EAAMqT,cAC7BC,EAAoCD,EAA7C5K,QAA8B8K,EAAeF,EAArBlR,KAGjBmP,EADQvR,aAAY,SAAAC,GAAK,OAAIA,EAAMuR,kBAC1ChM,MAERS,qBAAU,WACNrH,EAAS,CAAC9D,KAAM2J,KACZ1F,GAAaA,EAASoC,QAGlBoQ,GAAYA,EAAQ/L,MAGpB0L,EAASK,EAAQ/L,OAFjB5G,EAASoS,MAHbhX,EAAQS,KAAK,UAQd8Y,EACCvZ,EAAQS,KAAR,mBAEG+K,GACC5G,EAAS0G,GAAU,GAAGC,EAAYC,MAG5C,CAAC5G,EAAU5E,EAAS+E,EAAUwU,EAAeC,EAAapB,EAAe7M,EAAYC,EAAO+L,IAW9F,OACI,qCACI,cAACzP,GAAA,EAAD,UACI,cAACF,EAAA,EAAD,CAAKjH,UAAU,aAAf,SACI,eAACU,EAAA,EAAD,CAAQV,UAAU,cAAcW,QAAQ,eAAeiG,QAb7C,WACtBvH,EAAQS,KAAK,uBAYD,UACI,mBAAGE,UAAU,gBAAmB,IADpC,qBAKR,oBAAIA,UAAU,cAAd,SAA4B,wCAC3ByY,GAAiB,cAAC,GAAD,IACjBC,GAAe,cAAC,GAAD,CAAS/X,QAAQ,SAAjB,SAA2B+X,IAC1CvN,EAAU,cAAC,GAAD,IAAaC,EAAQ,cAAC,GAAD,CAASzK,QAAQ,SAAjB,SAA2ByK,IAC3D,qCACI,eAAC2L,GAAA,EAAD,CAAOC,OAAK,EAACC,YAAU,EAACjX,UAAU,uBAAlC,UACI,uBAAOA,UAAU,eAAjB,SACI,+BACI,oCACA,sCACA,uCACA,0CACA,uCACA,0CACA,6CAGR,gCACK0M,EAAMlB,KAAI,SAAA/D,GAAI,OACX,+BACI,6BAAKA,EAAKE,MACV,6BAAKF,EAAKrH,OACV,6BAAKqH,EAAK0G,QACV,6BAAK1G,EAAKqR,WACV,6BAAKrR,EAAKa,QACV,6BAAKb,EAAKgB,eACV,+BACI,cAAC,gBAAD,CAAepC,GAAE,sBAAiBoB,EAAKE,IAAtB,SAAjB,SACI,cAACjH,EAAA,EAAD,CAAQC,QAAQ,eAAeX,UAAU,SAAzC,SAAkD,mBAAGA,UAAU,oBAElE,IACD,cAACU,EAAA,EAAD,CAAQC,QAAQ,iBAAiBX,UAAU,SAAS4G,QAAS,kBA7CtET,EA6C0FsB,EAAKE,SA5C/GgN,OAAOkD,QAAQ,kBACd5T,EAAS8G,GAAW5E,KAFN,IAACA,GA6CS,SACI,mBAAGnG,UAAU,wBAbhByH,EAAKE,aAoB1B,cAAC,GAAD,CAAeoE,MAAOA,EAAOC,KAAMA,EAAMxF,SAAS,WC/FnDuS,GAZY,SAAC,GAAgB,IAAfpQ,EAAc,EAAdA,SACzB,OACI,cAACjD,EAAA,EAAD,CAAW1F,UAAU,OAArB,SACI,cAACmH,GAAA,EAAD,CAAKnH,UAAU,4BAAf,SACI,cAACiH,EAAA,EAAD,CAAKsB,GAAI,GAAIJ,GAAI,EAAjB,SACKQ,SCaNqQ,GAnBU,SAAC,GAAsC,IAArChM,EAAoC,EAApCA,WAAYiM,EAAwB,EAAxBA,mBAEnC,OACA,mCACMjM,EAAWC,OAAS,EAChBD,EAAWxB,KAAI,SAAC0B,EAAEC,GAAH,OACb,qBAEInN,UAAU,aACVuH,MAAO,CAAC6F,gBAAiBF,GACzBtG,QAAS,SAAAjH,GAAC,OAAIsZ,EAAmB/L,KAH5BC,MAMZ,e,SC6NE+L,GAjOQ,SAAC,GAAe,IAAd7Z,EAAa,EAAbA,QAAa,EACTC,mBAAS,IADA,mBAC5BuI,EAD4B,KACrBsR,EADqB,OAGX7Z,mBAAS,IAHE,mBAG5Bc,EAH4B,KAGtBwQ,EAHsB,OAITtR,mBAAS,IAJA,mBAI5B6O,EAJ4B,KAIrBiL,EAJqB,OAKH9Z,mBAAS,IALN,mBAK5BwZ,EAL4B,KAKlBO,EALkB,OAMT/Z,mBAAS,GANA,mBAM5BgJ,EAN4B,KAMrBgR,EANqB,OAOKha,mBAAS,GAPd,mBAO5BmJ,EAP4B,KAOd8Q,EAPc,OAQPja,mBAAS,IARF,mBAQ5B4O,EAR4B,KAQpBsL,EARoB,OASGla,mBAAS,IATZ,mBAS5B8O,EAT4B,KASfqL,EATe,OAUDna,oBAAS,GAVR,mBAU5Boa,EAV4B,KAUjBC,EAViB,OAWDra,oBAAS,GAXR,mBAW5Bsa,EAX4B,KAWjBC,EAXiB,OAYCva,mBAAS,IAZV,oBAY5Bwa,GAZ4B,MAYhBC,GAZgB,MAc5B9V,GAAWmB,cAEXuT,GAAatT,aAAY,SAAAC,GAAK,OAAIA,EAAMqT,cACvCxN,GAA2BwN,GAA3BxN,QAASC,GAAkBuN,GAAlBvN,MAAO2C,GAAW4K,GAAX5K,QAGf3J,GADUiB,aAAY,SAAAC,GAAK,OAAIA,EAAMjB,aACrCD,SAGRkH,qBAAU,WACFlH,IAAaA,GAASoC,SACtBnH,EAAQS,KAAK,UAEdiO,IACC1O,EAAQS,KAAK,qBAEnB,CAACT,EAAS0O,GAAS3J,KAErB,IAAM4V,GAAiB,uCAAG,WAAOra,GAAP,uBAAAwE,EAAA,6DAChB8V,EAAMta,EAAEW,OAAO4Z,MAAM,GAC3BH,GAAcE,IACRE,EAAW,IAAIC,UACZC,OAAO,QAASJ,GACzBN,GAAa,GALS,SAQZrV,EAAS,CACXC,QAAQ,CACJ,eAAgB,wBAVN,SAaKG,IAAMgK,KAAK,cAAeyL,EAAU7V,GAbzC,gBAaVM,EAbU,EAaVA,KAERuU,EAASvU,GACT+U,GAAa,GACbE,GAAa,GAjBK,kDAmBlBnH,QAAQtH,MAAR,MACAuO,GAAa,GApBK,0DAAH,sDAuDvB,OACI,cAAC,GAAD,UACI,cAACjS,GAAA,EAAD,UACI,eAACA,GAAA,EAAKK,KAAN,WACI,qBAAI/H,UAAU,mBAAd,yBAA6C,mBAAGA,UAAU,sBACzDmL,GAAU,cAAC,GAAD,IAAaC,GAAQ,cAAC,GAAD,CAASzK,QAAQ,SAAjB,SAA2ByK,KAC3D,eAAC3L,EAAA,EAAD,CAAMC,SApBA,SAACC,G9BkBD,IAAC8H,E8BjBnB9H,EAAEC,iBACFqE,I9BgBmBwD,E8BhBC,CAChBI,QACAqG,SACA9N,OACA+N,QACA2K,WACAxQ,QACAG,eACA2F,e9BQc,uCAAU,WAAMnK,EAAUC,GAAhB,uBAAAC,EAAA,sEAE5BF,EAAS,CACL9D,KAAMwJ,KAHkB,EAMQzF,IAAfE,EANO,EAMpBC,UAAaD,SAEfE,EAAS,CACXC,QAAS,CACL,eAAe,mBACfC,cAAc,UAAD,OAAYJ,EAASK,SAXd,SAeNC,IAAMgK,KAAN,aAAyBjH,EAAMnD,GAfzB,gBAerBM,EAfqB,EAerBA,KAEPX,EAAS,CACL9D,KAAMyJ,GACN/E,QAASD,IAnBe,kDAsB5BX,EAAS,CACL9D,KAAM0J,GACNhF,QAAS,KAAMC,UAAY,KAAMA,SAASF,KAAKG,QAAU,KAAMD,SAASF,KAAKG,QAAU,KAAMA,UAxBrE,0DAAV,2D8BEyB/E,UAAU,YAAzC,UACI,eAACP,EAAA,EAAKkP,MAAN,CAAY1G,GAAId,KAAKyH,UAAU,QAA/B,UACI,cAAC3H,EAAA,EAAD,CAAKsB,GAAI,GAAIJ,GAAI,EAAjB,SACI,cAACrC,EAAA,EAAD,CACIC,IAAK+T,GACKQ,IAAIC,gBAAgBT,IAhG3C,sBAmGarO,IAAKrL,EACLmH,MAAO,CAACiT,MAAO,KACfC,WAAS,MAIjB,eAACxT,EAAA,EAAD,CAAKsB,GAAI,GAAIJ,GAAI,EAAjB,UACI,cAAC1I,EAAA,EAAKoP,MAAN,iCACA,cAACpP,EAAA,EAAKib,KAAN,CACIvU,GAAG,aACHoM,MAAO1K,GAAgB,cACvB8S,QAAM,EACNta,SAAU2Z,GAJd,SAKEN,GAAa,cAAC,GAAD,YAIvB,eAACja,EAAA,EAAKkP,MAAN,CAAY1G,GAAId,KAAKyH,UAAU,SAA/B,UACI,cAACnP,EAAA,EAAKoP,MAAN,CAAY+L,QAAM,EAACrS,GAAI,GAAIJ,GAAI,EAA/B,qBACA,eAAClB,EAAA,EAAD,CAAKsB,GAAI,GAAIJ,GAAI,EAAGnI,UAAU,kBAA9B,UACI,cAAC,KAAD,CACI6a,UAAW,SAAAC,GACJlB,IACCJ,EAAUsB,GACVjB,GAAa,KAJzB,SAQC,qBAAK9T,IAAK6T,EACLU,IAAIC,gBAAgBT,IACpB,GACJrO,IAAI,OACN,cAAC,GAAD,CAAkBuB,WAAYkB,GAAU,GAAI+K,mBA7E7C,SAACtZ,GACxB,IAAMob,EAAiB7M,EAAO8M,QAAO,SAAA1T,GAAK,OAAIA,IAAU3H,KACxD6Z,EAAUuB,YA8EM,eAACtb,EAAA,EAAKkP,MAAN,CAAY1G,GAAId,KAAKyH,UAAU,OAA/B,UACI,cAACnP,EAAA,EAAKoP,MAAN,CAAY+L,QAAM,EAACrS,GAAI,GAAIJ,GAAI,EAA/B,mBACA,cAAClB,EAAA,EAAD,CAAKsB,GAAI,GAAIJ,GAAI,EAAjB,SACI,cAAC1I,EAAA,EAAKS,QAAN,CACIC,KAAK,OACLK,YAAY,OACZD,MAAOH,EACP8R,UAAQ,EACR7R,SAAU,SAACV,GAAD,OAAOiR,EAAQjR,EAAEW,OAAOC,eAK9C,eAACd,EAAA,EAAKkP,MAAN,CAAY1G,GAAId,KAAKyH,UAAU,QAA/B,UACI,cAACnP,EAAA,EAAKoP,MAAN,CAAY+L,QAAM,EAACrS,GAAI,GAAIJ,GAAI,EAA/B,oBACA,cAAClB,EAAA,EAAD,CAAKsB,GAAI,GAAIJ,GAAI,EAAjB,SACI,cAAC1I,EAAA,EAAKS,QAAN,CACIC,KAAK,OACLK,YAAY,QACZD,MAAO4N,EACP9N,SAAU,SAACV,GAAD,OAAOyZ,EAASzZ,EAAEW,OAAOC,eAI/C,eAACd,EAAA,EAAKkP,MAAN,CAAY1G,GAAId,KAAKyH,UAAU,WAA/B,UACI,cAACnP,EAAA,EAAKoP,MAAN,CAAY+L,QAAM,EAACrS,GAAI,GAAIJ,GAAI,EAA/B,uBACA,cAAClB,EAAA,EAAD,CAAKsB,GAAI,GAAIJ,GAAI,EAAjB,SACI,cAAC1I,EAAA,EAAKS,QAAN,CACIC,KAAK,OACLK,YAAY,WACZD,MAAOuY,EACPzY,SAAU,SAACV,GAAD,OAAO0Z,EAAY1Z,EAAEW,OAAOC,eAIlD,eAACd,EAAA,EAAKkP,MAAN,CAAY1G,GAAId,KAAKyH,UAAU,QAA/B,UACI,cAACnP,EAAA,EAAKoP,MAAN,CAAY+L,QAAM,EAACrS,GAAI,GAAIJ,GAAI,EAA/B,oBACA,cAAClB,EAAA,EAAD,CAAKsB,GAAI,GAAIJ,GAAI,EAAjB,SACI,cAAC1I,EAAA,EAAKS,QAAN,CACIC,KAAK,SACLK,YAAY,QACZD,MAAO+H,EACPjI,SAAU,SAACV,GAAD,OAAO2Z,EAAS3Z,EAAEW,OAAOC,eAI/C,eAACd,EAAA,EAAKkP,MAAN,CAAY1G,GAAId,KAAKyH,UAAU,eAA/B,UACI,cAACnP,EAAA,EAAKoP,MAAN,CAAY+L,QAAM,EAACrS,GAAI,GAAIJ,GAAI,EAA/B,6BACA,cAAClB,EAAA,EAAD,CAAKsB,GAAI,GAAIJ,GAAI,EAAjB,SACI,cAAC1I,EAAA,EAAKS,QAAN,CACIC,KAAK,SACLK,YAAY,iBACZD,MAAOkI,EACPpI,SAAU,SAACV,GAAD,OAAO4Z,EAAgB5Z,EAAEW,OAAOC,eAItD,eAACd,EAAA,EAAKkP,MAAN,CAAY1G,GAAId,KAAKyH,UAAU,cAA/B,UACI,cAACnP,EAAA,EAAKoP,MAAN,CAAY+L,QAAM,EAACrS,GAAI,GAAIJ,GAAI,EAA/B,0BACA,cAAClB,EAAA,EAAD,CAAKsB,GAAI,GAAIJ,GAAI,EAAjB,SACI,cAAC1I,EAAA,EAAKS,QAAN,CACI+H,GAAG,WACHgT,KAAM,EACNza,YAAY,cACZD,MAAO6N,EACP/N,SAAU,SAACV,GAAD,OAAO8Z,EAAe9Z,EAAEW,OAAOC,eAIrD,eAAC4G,GAAA,EAAD,CAAKnH,UAAU,OAAf,UACI,cAACiH,EAAA,EAAD,CAAKsB,GAAI,EAAGvI,UAAU,aAAtB,SACI,eAACU,EAAA,EAAD,CAAQP,KAAK,SAASQ,QAAQ,kBAA9B,UACI,mBAAGX,UAAU,gBAAmB,IADpC,YAIJ,cAACiH,EAAA,EAAD,CAAKsB,GAAI,EAAGvI,UAAU,YAAtB,SACI,eAACU,EAAA,EAAD,CAAQC,QAAQ,iBAAiBiG,QAvJxC,WACjBuS,EAAS,IACTvI,EAAQ,IACRwI,EAAS,IACTC,EAAY,IACZC,EAAS,GACTC,EAAgB,GAChBC,EAAU,IACVC,EAAe,IACfM,GAAc,KA8IU,UACI,mBAAG/Z,UAAU,eAAb,eADJ,IACuC,IADvC,4BCsCjBkb,GAzPM,SAAC,GAAsB,IAArB3O,EAAoB,EAApBA,MAAOlN,EAAa,EAAbA,QACpBoP,EAASlC,EAAMC,OAAOrG,GADW,EAGd7G,mBAAS,IAHK,mBAGjCuI,EAHiC,KAG1BsR,EAH0B,OAKhB7Z,mBAAS,IALO,mBAKjCc,EALiC,KAK3BwQ,EAL2B,OAMdtR,mBAAS,IANK,mBAMjC6O,EANiC,KAM1BiL,EAN0B,OAOR9Z,mBAAS,IAPD,mBAOjCwZ,EAPiC,KAOvBO,EAPuB,OAQd/Z,mBAAS,GARK,mBAQjCgJ,EARiC,KAQ1BgR,EAR0B,OASAha,mBAAS,GATT,mBASjCmJ,EATiC,KASnB8Q,EATmB,OAUZja,mBAAS,IAVG,mBAUjC4O,EAViC,KAUzBsL,EAVyB,OAWFla,mBAAS,IAXP,mBAWjC8O,EAXiC,KAWpBqL,EAXoB,OAYNna,oBAAS,GAZH,mBAYjCoa,EAZiC,KAYtBC,EAZsB,OAaNra,oBAAS,GAbH,mBAajCsa,EAbiC,KAatBC,GAbsB,QAcJva,mBAAS,IAdL,qBAcjCwa,GAdiC,MAcrBC,GAdqB,MAgBjC9V,GAAWmB,cAGThB,GADUiB,aAAY,SAAAC,GAAK,OAAIA,EAAMjB,aACrCD,SAEFuJ,GAActI,aAAY,SAAAC,GAAK,OAAIA,EAAMqI,eACxCxC,GAAwBwC,GAAxBxC,QAASC,GAAeuC,GAAfvC,MAAO3D,GAAQkG,GAARlG,KAEjB0T,GAAa9V,aAAY,SAAAC,GAAK,OAAIA,EAAM6V,cAC9BhD,GAA6DgD,GAAtEhQ,QAA+BiN,GAAuC+C,GAA9C/P,MAA6BiN,GAAiB8C,GAA1BpN,QAGnDzC,qBAAU,WACFlH,IAAaA,GAASoC,QAGnB6R,IACCpU,GAAS,CAAE9D,KAAM+J,KACjBjG,GAAS6G,GAAY2D,KAElBhH,IAAQA,GAAKE,MAAQ8G,EACpBxK,GAAS6G,GAAY2D,KAErB0K,EAAS1R,GAAKI,OACd+I,EAAQnJ,GAAKrH,MACbgZ,EAAS3R,GAAK0G,OACdkL,EAAY5R,GAAKqR,UACjBQ,EAAS7R,GAAKa,OACdiR,EAAgB9R,GAAKgB,cACrBgR,EAAehS,GAAK2G,aACpBoL,EAAU/R,GAAKyG,SAhBvB7O,EAAQS,KAAK,YAoBnB,CAACmE,GAAU5E,EAASoP,EAAQ4J,GAAe5Q,GAAMrD,KAEnD,IAOM4V,GAAiB,uCAAG,WAAOra,GAAP,uBAAAwE,EAAA,6DAChB8V,EAAMta,EAAEW,OAAO4Z,MAAM,GAC3BH,GAAcE,IACRE,EAAW,IAAIC,UACZC,OAAO,QAASJ,GACzBN,GAAa,GALS,SAQZrV,EAAS,CACXC,QAAQ,CACJ,eAAgB,wBAVN,SAaKG,IAAMgK,KAAK,cAAeyL,EAAU7V,GAbzC,gBAaVM,EAbU,EAaVA,KAERuU,EAASvU,GACT+U,GAAa,GACbE,IAAa,GAjBK,kDAmBlBnH,QAAQtH,MAAR,MACAuO,GAAa,GApBK,0DAAH,sDA4CvB,OACI,cAAC,GAAD,UACI,cAACjS,GAAA,EAAD,UACI,eAACA,GAAA,EAAKK,KAAN,WACI,qBAAI/H,UAAU,mBAAd,uBAA2C,mBAAGA,UAAU,sBACvDmY,IAAiB,cAAC,GAAD,IACjBC,IAAe,cAAC,GAAD,CAASzX,QAAQ,SAAjB,SAA2ByX,KAC1CjN,GAAU,cAAC,GAAD,IAAaC,GAAQ,cAAC,GAAD,CAASzK,QAAQ,SAAjB,SAA2ByK,KAC3D,eAAC3L,EAAA,EAAD,CAAMC,SAvBA,SAACC,GACnBA,EAAEC,iBACFqE,G/B6BkB,SAACwD,GAAD,8CAAU,WAAMxD,EAAUC,GAAhB,uBAAAC,EAAA,sEAE5BF,EAAS,CACL9D,KAAM4J,KAHkB,EAMQ7F,IAAfE,EANO,EAMpBC,UAAaD,SAEfE,EAAS,CACXC,QAAS,CACL,eAAe,mBACfC,cAAc,UAAD,OAAYJ,EAASK,SAXd,SAeNC,IAAMyQ,IAAN,qBAAwB1N,EAAKE,KAAOF,EAAMnD,GAfpC,gBAerBM,EAfqB,EAerBA,KAEPX,EAAS,CACL9D,KAAM6J,GACNnF,QAASD,IAnBe,kDAsB5BX,EAAS,CACL9D,KAAM8J,GACNpF,QAAS,KAAMC,UAAY,KAAMA,SAASF,KAAKG,QAAU,KAAMD,SAASF,KAAKG,QAAU,KAAMA,UAxBrE,0DAAV,wD+B7BTqW,CAAW,CAChBzT,IAAK8G,EACL5G,QACAzH,OACA+N,QACA2K,WACAxQ,QACAG,eACA2F,cACAF,aAYuClO,UAAU,YAAzC,UACI,eAACP,EAAA,EAAKkP,MAAN,CAAY1G,GAAId,KAAKyH,UAAU,QAA/B,UACI,cAAC3H,EAAA,EAAD,CAAKsB,GAAI,GAAIJ,GAAI,EAAjB,SACI,cAACrC,EAAA,EAAD,CACIC,IAAK+T,GACKQ,IAAIC,gBAAgBT,IACpB,UAAGrS,GAAKI,OAAR,UACGJ,GAAKI,OAlH/B,sBAqHa4D,IAAKhE,GAAKrH,KACVmH,MAAO,CAACiT,MAAO,KACfC,WAAS,MAIjB,eAACxT,EAAA,EAAD,CAAKsB,GAAI,GAAIJ,GAAI,EAAjB,UACI,cAAC1I,EAAA,EAAKoP,MAAN,iCACA,cAACpP,EAAA,EAAKib,KAAN,CACIvU,GAAG,aACHoM,MAAO1K,GAAgB,cACvB8S,QAAM,EACNta,SAAU2Z,GAJd,SAKEN,GAAa,cAAC,GAAD,YAIvB,eAACja,EAAA,EAAKkP,MAAN,CAAY1G,GAAId,KAAKyH,UAAU,SAA/B,UACI,cAACnP,EAAA,EAAKoP,MAAN,CAAY+L,QAAM,EAACrS,GAAI,GAAIJ,GAAI,EAA/B,qBACA,eAAClB,EAAA,EAAD,CAAKsB,GAAI,GAAIJ,GAAI,EAAGnI,UAAU,kBAA9B,UAEI,cAAC,KAAD,CACI+F,IAAK6T,EACCU,IAAIC,gBAAgBT,IACpB,UAAGrS,GAAKI,OAAR,UACGJ,GAAKI,OACR,KAENgT,UAAW,SAAAC,GACJlB,IACCJ,EAAUsB,GACVjB,IAAa,OAKzB,cAAC,GAAD,CAAkB7M,WAAYkB,GAAU,GAAI+K,mBA1E7C,SAACtZ,GACxB,IAAMob,EAAiB7M,EAAO8M,QAAO,SAAA1T,GAAK,OAAIA,IAAU3H,KACxD6Z,EAAUuB,YA2EM,eAACtb,EAAA,EAAKkP,MAAN,CAAY1G,GAAId,KAAKyH,UAAU,OAA/B,UACI,cAACnP,EAAA,EAAKoP,MAAN,CAAY+L,QAAM,EAACrS,GAAI,GAAIJ,GAAI,EAA/B,mBACA,cAAClB,EAAA,EAAD,CAAKsB,GAAI,GAAIJ,GAAI,EAAjB,SACI,cAAC1I,EAAA,EAAKS,QAAN,CACIC,KAAK,OACLK,YAAY,OACZD,MAAOH,EACPC,SAAU,SAACV,GAAD,OAAOiR,EAAQjR,EAAEW,OAAOC,eAK9C,eAACd,EAAA,EAAKkP,MAAN,CAAY1G,GAAId,KAAKyH,UAAU,QAA/B,UACI,cAACnP,EAAA,EAAKoP,MAAN,CAAY+L,QAAM,EAACrS,GAAI,GAAIJ,GAAI,EAA/B,oBACA,cAAClB,EAAA,EAAD,CAAKsB,GAAI,GAAIJ,GAAI,EAAjB,SACI,cAAC1I,EAAA,EAAKS,QAAN,CACIC,KAAK,OACLK,YAAY,QACZD,MAAO4N,EACP9N,SAAU,SAACV,GAAD,OAAOyZ,EAASzZ,EAAEW,OAAOC,eAI/C,eAACd,EAAA,EAAKkP,MAAN,CAAY1G,GAAId,KAAKyH,UAAU,WAA/B,UACI,cAACnP,EAAA,EAAKoP,MAAN,CAAY+L,QAAM,EAACrS,GAAI,GAAIJ,GAAI,EAA/B,uBACA,cAAClB,EAAA,EAAD,CAAKsB,GAAI,GAAIJ,GAAI,EAAjB,SACI,cAAC1I,EAAA,EAAKS,QAAN,CACIC,KAAK,OACLK,YAAY,WACZD,MAAOuY,EACPzY,SAAU,SAACV,GAAD,OAAO0Z,EAAY1Z,EAAEW,OAAOC,eAIlD,eAACd,EAAA,EAAKkP,MAAN,CAAY1G,GAAId,KAAKyH,UAAU,QAA/B,UACI,cAACnP,EAAA,EAAKoP,MAAN,CAAY+L,QAAM,EAACrS,GAAI,GAAIJ,GAAI,EAA/B,oBACA,cAAClB,EAAA,EAAD,CAAKsB,GAAI,GAAIJ,GAAI,EAAjB,SACI,cAAC1I,EAAA,EAAKS,QAAN,CACIC,KAAK,SACLK,YAAY,QACZD,MAAO+H,EACPjI,SAAU,SAACV,GAAD,OAAO2Z,EAAS3Z,EAAEW,OAAOC,eAI/C,eAACd,EAAA,EAAKkP,MAAN,CAAY1G,GAAId,KAAKyH,UAAU,eAA/B,UACI,cAACnP,EAAA,EAAKoP,MAAN,CAAY+L,QAAM,EAACrS,GAAI,GAAIJ,GAAI,EAA/B,6BACA,cAAClB,EAAA,EAAD,CAAKsB,GAAI,GAAIJ,GAAI,EAAjB,SACI,cAAC1I,EAAA,EAAKS,QAAN,CACIC,KAAK,SACLK,YAAY,iBACZD,MAAOkI,EACPpI,SAAU,SAACV,GAAD,OAAO4Z,EAAgB5Z,EAAEW,OAAOC,eAItD,eAACd,EAAA,EAAKkP,MAAN,CAAY1G,GAAId,KAAKyH,UAAU,cAA/B,UACI,cAACnP,EAAA,EAAKoP,MAAN,CAAY+L,QAAM,EAACrS,GAAI,GAAIJ,GAAI,EAA/B,0BACA,cAAClB,EAAA,EAAD,CAAKsB,GAAI,GAAIJ,GAAI,EAAjB,SACI,cAAC1I,EAAA,EAAKS,QAAN,CACI+H,GAAG,WACHgT,KAAM,EACNza,YAAY,cACZD,MAAO6N,EACP/N,SAAU,SAACV,GAAD,OAAO8Z,EAAe9Z,EAAEW,OAAOC,eAIrD,eAAC4G,GAAA,EAAD,CAAKnH,UAAU,OAAf,UACI,cAACiH,EAAA,EAAD,CAAKsB,GAAI,EAAGvI,UAAU,aAAtB,SACI,eAACU,EAAA,EAAD,CAAQP,KAAK,SAASQ,QAAQ,eAA9B,UACI,mBAAGX,UAAU,cAAb,eADJ,cAKJ,cAACiH,EAAA,EAAD,CAAKsB,GAAI,EAAGvI,UAAU,YAAtB,SACI,eAACU,EAAA,EAAD,CAAQC,QAAQ,iBAAiBiG,QAAS,kBAxL/CT,EAwLmEsB,GAAKE,SAvLxFgN,OAAOkD,QAAQ,mBACd5T,GAAS8G,GAAW5E,IACpB9G,EAAQS,KAAK,qBAHC,IAACqG,GAwLK,UACI,mBAAGnG,UAAU,eAAb,eADJ,6BC/JjBqb,GA/EY,SAAC,GAAsB,IAArBhc,EAAoB,EAApBA,QACnBuL,EADuC,EAAX2B,MACTC,OAAO5B,YAAc,EADD,EAEpBtL,qBAFoB,mBAEvCuL,EAFuC,KAEhC0L,EAFgC,KAIvCtS,EAAWmB,cAEXkW,EAAYjW,aAAY,SAAAC,GAAK,OAAIA,EAAMgW,aACrCnQ,EAAwCmQ,EAAxCnQ,QAASC,EAA+BkQ,EAA/BlQ,MAAOuL,EAAwB2E,EAAxB3E,OAAQ3K,EAAgBsP,EAAhBtP,KAAMD,EAAUuP,EAAVvP,MAG9B3H,EADUiB,aAAY,SAAAC,GAAK,OAAIA,EAAMjB,aACrCD,SAGOwS,EADQvR,aAAY,SAAAC,GAAK,OAAIA,EAAMuR,kBAC1ChM,MAgBR,OAdAS,qBAAU,WACHlH,GAAYA,EAASoC,SACjBqE,GACC5G,Ef8IU,eAAE2G,EAAF,uDAAe,GAAIC,EAAnB,uDAA2B,GAA3B,8CAAkC,WAAM5G,EAAUC,GAAhB,uBAAAC,EAAA,sEAEpDF,EAAS,CACL9D,KAAMgD,KAH0C,EAMhBe,IAAfE,EAN+B,EAM5CC,UAAaD,SAEfE,EAAS,CACXC,QAAS,CACLC,cAAc,UAAD,OAAYJ,EAASK,SAVU,SAc/BC,IAAMC,IAAN,sCAAyCiG,EAAzC,kBAA6DC,GAASvG,GAdvC,gBAc7CM,EAd6C,EAc7CA,KAEPX,EAAS,CACL9D,KAAMiD,GACNyB,QAASD,IAlBuC,kDAqBpDX,EAAS,CACL9D,KAAMkD,GACNwB,QAAS,KAAMC,UAAY,KAAMA,SAASF,KAAKG,QAAU,KAAMD,SAASF,KAAKG,QAAU,KAAMA,UAvB7C,0DAAlC,wDe9IDwW,CAAW3Q,EAAYC,IAEhC+L,GAAYA,EAAQ/L,MAGpB0L,EAASK,EAAQ/L,OAFjB5G,EAASoS,OAIbhX,EAAQS,KAAK,YAEnB,CAACmE,EAAU5E,EAAS+E,EAAUwG,EAAYC,EAAO+L,IAG/C,qCACI,oBAAI5W,UAAU,cAAd,SAA4B,yCAC3BmL,EAAU,cAAC,GAAD,IAAaC,EAAQ,cAAC,GAAD,CAASzK,QAAQ,SAAjB,SAA2ByK,IACvD,qCACA,eAAC2L,GAAA,EAAD,CAAOC,OAAK,EAACC,YAAU,EAACjX,UAAU,uBAAlC,UACI,uBAAOA,UAAU,eAAjB,SACI,+BACI,oCACA,sCACA,sCACA,uCACA,sCACA,2CACA,6CAGR,gCACK2W,EAAOnL,KAAI,SAAAyH,GAAK,OACb,+BACI,6BAAKA,EAAMtL,MACX,6BAAKsL,EAAMe,MAAQf,EAAMe,KAAK5T,OAC9B,6BAAK6S,EAAM1E,UAAUC,UAAU,EAAG,MAClC,oCAAOyE,EAAMF,cACb,6BACKE,EAAMyB,OACFzB,EAAM8B,OAAOvG,UAAU,EAAG,IACzB,mBAAGxO,UAAU,mBAEvB,6BACKiT,EAAM4B,YACF5B,EAAM6B,YAAYtG,UAAU,EAAG,IAC9B,mBAAGxO,UAAU,mBAEvB,6BACI,cAAC,gBAAD,CAAeqG,GAAE,iBAAY4M,EAAMtL,KAAnC,SACI,eAACjH,EAAA,EAAD,CAAQC,QAAQ,eAAeX,UAAU,SAAzC,UAAkD,mBAAGA,UAAU,mBAAsB,IAArF,mBAjBHiT,EAAMtL,aAwB3B,cAAC,GAAD,CAAgBoE,MAAOA,EAAOC,KAAMA,EAAM6J,KAAM,yB,SClFnD2F,GAA8B,8BAC9BC,GAA8B,8BAC9BC,GAA2B,2BAE3BC,GAA8B,8BAC9BC,GAA8B,8BAC9BC,GAA2B,2BAE3BC,GAAgC,gCAChCC,GAAgC,gCAChCC,GAA6B,6BCmC3BC,GAvCI,WACjB,IACM/N,EAAS,CAAC,UAAW,UAAW,UAAW,UAAW,WACtDjK,EAAWmB,cAET8W,EAAgB7W,aAAY,SAAAC,GAAK,OAAIA,EAAM4W,iBACzC/Q,EAAsB+Q,EAAtB/Q,QAASgR,EAAaD,EAAbC,UAQnB,OALE7Q,qBAAU,WACNrH,ECF6B,uCAAM,WAAMA,EAAUC,GAAhB,uBAAAC,EAAA,sEAEnCF,EAAS,CACL9D,KAAMqb,KAHyB,EAMCtX,IAAfE,EANc,EAM3BC,UAAaD,SAEfE,EAAS,CACXC,QAAS,CACL,eAAe,mBACfC,cAAc,UAAD,OAAYJ,EAASK,SAXP,SAedC,IAAMC,IAAN,sBAAiCL,GAfnB,gBAe5BM,EAf4B,EAe5BA,KAEPX,EAAS,CACL9D,KAAMsb,GACN5W,QAASD,IAnBsB,kDAsBnCX,EAAS,CACL9D,KAAMub,GACN7W,QAAS,KAAMC,UAAY,KAAMA,SAASF,KAAKG,QAAU,KAAMD,SAASF,KAAKG,QAAU,KAAMA,UAxB9D,0DAAN,2DDI/B,CAACd,IAGH,qCACE,qBAAKjE,UAAU,qBAAf,SACE,oBAAIA,UAAU,QAAd,qBAEAmL,EAAY,cAAC,GAAD,IAGZ,cAAC,OAAD,CAAKvG,KAAM,CACTwX,OAtBY,CAAC,QAAS,SAAU,QAAS,OAuBzCC,SAAU,CACR,CACE9J,MAAO,aACP3N,KAAMuX,EACN/O,gBAAiBc,EACjBoO,YAAapO,EACbqO,YAAa,WEmBZC,GAjDO,WAClB,IACMtO,EAAS,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,WAYnIjK,EAAWmB,cAEXqX,EAAsBpX,aAAY,SAAAC,GAAK,OAAIA,EAAMmX,uBAC/CtR,EAAuBsR,EAAvBtR,QAASuR,EAAcD,EAAdC,WAOjB,OALApR,qBAAU,WACRrH,EDkBgC,uCAAM,WAAMA,EAAUC,GAAhB,uBAAAC,EAAA,sEAEpCF,EAAS,CACL9D,KAAMwb,KAH0B,EAMAzX,IAAfE,EANe,EAM5BC,UAAaD,SAEfE,EAAS,CACXC,QAAS,CACL,eAAe,mBACfC,cAAc,UAAD,OAAYJ,EAASK,SAXN,SAefC,IAAMC,IAAN,2BAAsCL,GAfvB,gBAe7BM,EAf6B,EAe7BA,KAEPX,EAAS,CACL9D,KAAMyb,GACN/W,QAASD,IAnBuB,kDAsBpCX,EAAS,CACL9D,KAAM0b,GACNhX,QAAS,KAAMC,UAAY,KAAMA,SAASF,KAAKG,QAAU,KAAMD,SAASF,KAAKG,QAAU,KAAMA,UAxB7D,0DAAN,2DChBhC,CAACd,IAGC,qCACE,qBAAKjE,UAAU,qBAAf,SACE,oBAAIA,UAAU,QAAd,gCAEAmL,EAAY,cAAC,GAAD,IAEZ,cAAC,OAAD,CACEvG,KAAM,CACJwX,OAhCS,CAAC,MAAM,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAiCtFC,SAAU,CAAC,CACT9J,MAAO,WACP3N,KAAM8X,EACNtP,gBAAiBc,EACjBoO,YAAapO,EACbqO,YAAa,KAGjBI,QAvCM,CACdC,OAAQ,CACNC,MAAO,CACL,CACEC,MAAO,CACLC,aAAa,aCoDZC,GA1DW,WAEtB,IAAM/Y,EAAWmB,cAEX6X,EAAuB5X,aAAY,SAAAC,GAAK,OAAIA,EAAM2X,wBAChD9R,EAAgC8R,EAAhC9R,QAASC,EAAuB6R,EAAvB7R,MAAO8R,EAAgBD,EAAhBC,YAMxB,OAJA5R,qBAAU,WACNrH,EF0D4B,uCAAM,WAAMA,EAAUC,GAAhB,uBAAAC,EAAA,sEAElCF,EAAS,CACL9D,KAAM2b,KAHwB,EAME5X,IAAfE,EANa,EAM1BC,UAAaD,SAEfE,EAAS,CACXC,QAAS,CACL,eAAe,mBACfC,cAAc,UAAD,OAAYJ,EAASK,SAXR,SAebC,IAAMC,IAAN,0BAAqCL,GAfxB,gBAe3BM,EAf2B,EAe3BA,KAEPX,EAAS,CACL9D,KAAM4b,GACNlX,QAASD,IAnBqB,kDAsBlCX,EAAS,CACL9D,KAAM6b,GACNnX,QAAS,KAAMC,UAAY,KAAMA,SAASF,KAAKG,QAAU,KAAMD,SAASF,KAAKG,QAAU,KAAMA,UAxB/D,0DAAN,2DEzD9B,CAACd,IAGC,qCACI,oBAAIjE,UAAU,cAAd,SAA4B,qDAC3BmL,EAAU,cAAC,GAAD,IAAaC,EAAQ,cAAC,GAAD,CAASzK,QAAQ,SAAjB,SAA2ByK,IACvD,eAAC2L,GAAA,EAAD,CAAOC,OAAK,EAACC,YAAU,EAACjX,UAAU,uBAAlC,UACI,uBAAOA,UAAU,eAAjB,SACI,+BACI,oCACA,sCACA,sCACA,uCACA,sCACA,2CACA,6CAGR,gCACKkd,EAAY1R,KAAI,SAAAyH,GAAK,OAClB,+BACI,6BAAKA,EAAMtL,MACX,6BAAKsL,EAAMe,MAAQf,EAAMe,KAAK5T,OAC9B,6BAAK6S,EAAM1E,UAAUC,UAAU,EAAG,MAClC,oCAAOyE,EAAMF,cACb,6BACKE,EAAMyB,OACFzB,EAAM8B,OAAOvG,UAAU,EAAG,IACzB,mBAAGxO,UAAU,mBAEvB,6BACKiT,EAAM4B,YACF5B,EAAM6B,YAAYtG,UAAU,EAAG,IAC9B,mBAAGxO,UAAU,mBAEvB,6BACI,cAAC,gBAAD,CAAeqG,GAAE,iBAAY4M,EAAMtL,KAAnC,SACI,eAACjH,EAAA,EAAD,CAAQC,QAAQ,eAAeX,UAAU,SAAzC,UAAkD,mBAAGA,UAAU,mBAAsB,IAArF,mBAjBHiT,EAAMtL,iBCX5BwV,GAnBO,SAAC,GAAe,IAAd9d,EAAa,EAAbA,QAGZ+E,EADUiB,aAAY,SAAAC,GAAK,OAAIA,EAAMjB,aACrCD,SAOR,OALAkH,qBAAU,WACFlH,GAAaA,EAASoC,SACtBnH,EAAQS,KAAK,YAEnB,CAACT,EAAS+E,IAER,eAAC+C,GAAA,EAAD,CAAKnH,UAAU,OAAf,UACI,cAACiH,EAAA,EAAD,CAAKkB,GAAI,EAAGI,GAAI,GAAhB,SAAoB,cAAC,GAAD,MACpB,cAACtB,EAAA,EAAD,CAAKkB,GAAI,EAAGI,GAAI,GAAhB,SAAoB,cAAC,GAAD,MACpB,cAACtB,EAAA,EAAD,CAAKsB,GAAI,GAAIvI,UAAU,OAAvB,SAA8B,cAAC,GAAD,UC0C3Bod,GAxDE,SAAC,GAAe,IAAd/d,EAAa,EAAbA,QAAa,EACHC,mBAAS,IADN,mBACtBuL,EADsB,KACf0L,EADe,KAGtBtS,EAAWmB,cAGThB,EADUiB,aAAY,SAAAC,GAAK,OAAIA,EAAMjB,aACrCD,SAGOwS,EADQvR,aAAY,SAAAC,GAAK,OAAIA,EAAMuR,kBAC1ChM,MAGAkD,EADqB1I,aAAY,SAAAC,GAAK,OAAIA,EAAM+X,wBAChDtP,QAERzC,qBAAU,WACFlH,GAAaA,EAASoC,SACtBnH,EAAQS,KAAK,UAEdiO,GACC9J,EAAS,CAAE9D,KAAMiW,KACjBnS,EAASoS,OAELO,GAAYA,EAAQ/L,MAIpB0L,EAASK,EAAQ/L,OAHjB5G,EAASoS,QAMnB,CAACpS,EAAU5E,EAAS+E,EAAUwS,EAAS7I,IAOzC,OACI,cAAC5G,GAAA,EAAD,UACI,cAACF,EAAA,EAAD,CAAKkB,GAAI,CAACsN,KAAK,EAAGC,OAAQ,GAA1B,SACI,cAAChO,GAAA,EAAD,CAAM1H,UAAU,MAAhB,SACI,eAAC0H,GAAA,EAAKK,KAAN,WACI,0CACA,eAACtI,EAAA,EAAD,CAAMC,SAXJ,SAACC,GACnBA,EAAEC,iBACFqE,EjBNqB,SAAC2S,GAAD,8CAAa,WAAM3S,EAAUC,GAAhB,uBAAAC,EAAA,sEAElCF,EAAS,CAAC9D,KAAM8V,KAFkB,EAGE/R,IAAfE,EAHa,EAG1BC,UAAaD,SAEfE,EAAS,CACXC,QAAS,CACL,eAAe,mBACfC,cAAc,UAAD,OAAYJ,EAASK,SARR,SAYXC,IAAMyQ,IAAI,wBAAyByB,EAAStS,GAZjC,gBAY1BM,EAZ0B,EAY1BA,KAERX,EAAS,CACL9D,KAAM+V,GACNrR,QAASD,IAhBqB,kDAmBlCX,EAAS,CACL9D,KAAMgW,GACNtR,QAAS,KAAMC,UAAY,KAAMA,SAASF,KAAKG,QAAU,KAAMD,SAASF,KAAKG,QAAU,KAAMA,UArB/D,0DAAb,wDiBMZuY,CAAc,CAAC1G,QAAS/L,MASjB,UACI,eAACpL,EAAA,EAAKkP,MAAN,CAAYC,UAAU,OAAtB,UACI,cAACnP,EAAA,EAAKoP,MAAN,8BACA,cAACpP,EAAA,EAAKS,QAAN,CAAcC,KAAK,SAASK,YAAY,eAAeD,MAAOsK,EAAOxK,SAAU,SAACV,GAAD,OAAO4W,EAAS5W,EAAEW,OAAOC,aAE5G,eAACG,EAAA,EAAD,CAAQP,KAAK,SAASH,UAAU,qBAAhC,UAAqD,mBAAGA,UAAU,gBAAmB,IAArF,uBCyCbud,GA5DH,WAEV,IACQnZ,EADUiB,aAAY,SAAAC,GAAK,OAAIA,EAAMjB,aACrCD,SAER,OACE,cAAC,gBAAD,UACA,eAACsB,EAAA,EAAD,CAAWC,OAAK,EAAC3F,UAAU,kBAA3B,UACI,cAACiH,EAAA,EAAD,CAAKjH,UAAU,eAAf,SACCoE,GAAYA,EAASoC,SACpB,cAAC,GAAD,MAGF,eAACS,EAAA,EAAD,CAAKjH,UAAU,MAAf,UACE,cAAC,GAAD,IACA,iCACE,cAAC0F,EAAA,EAAD,CAAW1F,UAAU,qBAAqB2F,OAAK,EAA/C,SACE,cAAC,IAAD,CAAO3B,KAAK,IAAIwZ,UAAW7R,GAAU8R,OAAK,MAE5C,eAAC/X,EAAA,EAAD,WACE,cAAC,IAAD,CAAO1B,KAAK,SAASwZ,UAAWpN,KAChC,cAAC,IAAD,CAAOpM,KAAK,YAAYwZ,UAAW7M,KACnC,cAAC,IAAD,CAAO3M,KAAK,WAAWwZ,UAAWtG,KAClC,cAAC,IAAD,CAAOlT,KAAK,YAAYwZ,UAAWhM,KACnC,cAAC,IAAD,CAAOxN,KAAK,WAAWwZ,UAAWrL,KAClC,cAAC,IAAD,CAAOnO,KAAK,cAAcwZ,UAAW/K,KACrC,cAAC,IAAD,CAAOzO,KAAK,aAAawZ,UAAWnK,KACpC,cAAC,IAAD,CAAOrP,KAAK,SAASwZ,UAAWlR,GAAWmR,OAAK,IAChD,cAAC,IAAD,CAAOzZ,KAAK,0BAA0BwZ,UAAWlR,GAAWmR,OAAK,IACjE,cAAC,IAAD,CAAOzZ,KAAK,aAAawZ,UAAWnQ,GAAUoQ,OAAK,IACnD,cAAC,IAAD,CAAOzZ,KAAK,WAAWwZ,UAAWlI,KAClC,cAAC,IAAD,CAAOtR,KAAK,YAAYwZ,UAAWlH,GAAUmH,OAAK,IAClD,cAAC,IAAD,CAAOzZ,KAAK,wBAAwBwZ,UAAWlH,GAAUmH,OAAK,IAC9D,cAAC,IAAD,CAAOzZ,KAAK,kBAAkBwZ,UAAWJ,GAAUK,OAAK,IAExD,cAAC,IAAD,CAAOzZ,KAAK,mBAAmBwZ,UAAWL,KAC1C,cAAC,IAAD,CAAOnZ,KAAK,kBAAkBwZ,UAAWlG,GAAcmG,OAAK,IAC5D,cAAC,IAAD,CAAOzZ,KAAK,8BAA8BwZ,UAAWlG,GAAcmG,OAAK,IACxE,cAAC,IAAD,CAAOzZ,KAAK,kBAAkBwZ,UAAWjF,GAAckF,OAAK,IAC5D,cAAC,IAAD,CAAOzZ,KAAK,8BAA8BwZ,UAAWjF,GAAckF,OAAK,IACxE,cAAC,IAAD,CAAOzZ,KAAK,qBAAqBwZ,UAAWtE,KAC5C,cAAC,IAAD,CAAOlV,KAAK,uBAAuBwZ,UAAWtC,KAC9C,cAAC,IAAD,CAAOlX,KAAK,uBAAuBwZ,UAAWzF,KAC9C,cAAC,IAAD,CAAO/T,KAAK,gBAAgBwZ,UAAWnC,GAAoBoC,OAAK,IAChE,cAAC,IAAD,CAAOzZ,KAAK,4BAA4BwZ,UAAWnC,GAAoBoC,OAAK,IAE5E,cAAC,IAAD,CAAOzZ,KAAK,aAAawZ,UAAWlO,KACpC,cAAC,IAAD,CAAOtL,KAAK,mBAAmBwZ,UAAWlR,GAAWmR,OAAK,IAC1D,cAAC,IAAD,CAAOzZ,KAAK,oBAAoBwZ,UAAWlR,GAAWmR,OAAK,IAC3D,cAAC,IAAD,CAAOzZ,KAAK,oCAAoCwZ,UAAWlR,GAAWmR,OAAK,UAG/E,cAAC,GAAD,aC3EUC,QACW,cAA7B/I,OAAOpF,SAASoO,UAEe,UAA7BhJ,OAAOpF,SAASoO,UAEhBhJ,OAAOpF,SAASoO,SAASpR,MACvB,2D,0CCRAqR,GAAUC,2BAAgB,CAC5BpR,SCgB2B,WAAgC,IAA/BnH,EAA8B,uDAAtB,CAACoH,MAAO,IAAK0K,EAAS,uCAC1D,OAAQA,EAAOjX,MACX,KAAK+I,GACD,MAAO,CAAEiC,SAAS,EAAMuB,MAAO,IACnC,KAAKvD,GACD,MAAO,CAAEgC,SAAS,EAAOuB,MAAO0K,EAAOvS,QAAQ6H,MAAOX,MAAOqL,EAAOvS,QAAQkH,MAAOC,KAAMoL,EAAOvS,QAAQmH,MAC5G,KAAK5C,GACD,MAAO,CAAE+B,SAAS,EAAOC,MAAOgM,EAAOvS,SAC3C,QACI,OAAOS,IDxBfqI,YC4BuB,WAA4C,IAA3CrI,EAA0C,uDAAlC,CAACmC,KAAM,CAAC4G,QAAS,KAAQ+I,EAAS,uCAClE,OAAQA,EAAOjX,MACX,KAAKkJ,GACD,OAAO,cAAE8B,SAAS,GAAS7F,GAC/B,KAAKgE,GACD,MAAO,CAAE6B,SAAS,EAAO1D,KAAM2P,EAAOvS,SAC1C,KAAK0E,GACD,MAAO,CAAE4B,SAAS,EAAOC,MAAOgM,EAAOvS,SAC3C,QACI,OAAOS,IDpCf8J,KELuB,WAA0D,IAAzD9J,EAAwD,uDAAhD,CAAC+J,UAAW,GAAIoC,gBAAiB,IAAK2F,EAAU,uCAChF,OAAOA,EAAOjX,MACV,KAAKuD,GACD,IAAMoM,EAAOsH,EAAOvS,QACdiZ,EAAaxY,EAAM+J,UAAU0O,MAAK,SAAA1R,GAAC,OAAIA,EAAEoC,SAAWqB,EAAKrB,UAC/D,OAAGqP,EACC,6BACOxY,GADP,IAEI+J,UAAW/J,EAAM+J,UAAU7D,KAAI,SAAAa,GAAC,OAAIA,EAAEoC,SAAWqP,EAAWrP,OAASqB,EAAOzD,OAGzE,6BACA/G,GADP,IAEI+J,UAAU,GAAD,oBAAM/J,EAAM+J,WAAZ,CAAuBS,MAG5C,KAAKnM,GACD,OAAO,6BACA2B,GADP,IAEI+J,UAAW/J,EAAM+J,UAAU2L,QAAO,SAAA3O,GAAC,OAAIA,EAAEoC,SAAW2I,EAAOvS,aAEnE,KAAKjB,GACD,OAAO,6BACA0B,GADP,IAEImM,gBAAiB2F,EAAOvS,UAEhC,KAAKhB,GACD,OAAO,6BACAyB,GADP,IAEI8M,cAAegF,EAAOvS,UAE9B,KAAKf,GACD,MAAM,CACFuL,UAAW,GACXoC,gBAAiB,IAGzB,QACI,OAAOnM,IFhCfjB,UGc4B,WAAwB,IAAvBiB,EAAsB,uDAAd,GAAK8R,EAAS,uCACnD,OAAQA,EAAOjX,MACX,KAAKS,EACD,MAAO,CAAEuK,SAAS,GACtB,KAAKtK,EACD,MAAO,CAAEsK,SAAS,EAAO/G,SAAUgT,EAAOvS,SAC9C,KAAK/D,EACD,MAAO,CAAEqK,SAAS,EAAOC,MAAOgM,EAAOvS,SAC3C,KAAK9D,EACD,MAAO,GACX,QACI,OAAOuE,IHxBf0L,aG6B+B,WAAwB,IAAvB1L,EAAsB,uDAAd,GAAK8R,EAAS,uCACtD,OAAOA,EAAOjX,MACV,KAAKa,EACD,MAAO,CAAEmK,SAAS,GACtB,KAAKlK,EACD,MAAO,CAAEkK,SAAS,EAAO/G,SAAUgT,EAAOvS,SAC9C,KAAK3D,EACD,MAAO,CAAEiK,SAAS,EAAOC,MAAOgM,EAAOvS,SAC3C,QACI,OAAOS,IHrCfiQ,gBG0C2B,WAAgC,IAA/BjQ,EAA8B,uDAAtB,CAAE0O,KAAK,IAAMoD,EAAS,uCAC1D,OAAOA,EAAOjX,MACV,KAAKgB,EACD,OAAO,6BAAKmE,GAAZ,IAAmB6F,SAAS,IAChC,KAAK/J,EACD,MAAO,CAAE+J,SAAS,EAAO6I,KAAMoD,EAAOvS,SAC1C,KAAKxD,EACD,MAAO,CAAE8J,SAAS,EAAOC,MAAOgM,EAAOvS,SAC3C,KAAKvD,EACD,MAAO,CAAE0S,KAAM,IACnB,QACI,OAAO1O,IHpDfkQ,WGyD6B,WAAwB,IAAvBlQ,EAAsB,uDAAd,GAAK8R,EAAS,uCACpD,OAAOA,EAAOjX,MACV,KAAKoB,EACD,MAAO,CAAE4J,SAAS,GACtB,KAAK3J,EACD,MAAO,CAAE2J,SAAS,EAAO4C,SAAS,EAAM3J,SAAUgT,EAAOvS,SAC7D,KAAKpD,EACD,MAAO,CAAE0J,SAAS,EAAOC,MAAOgM,EAAOvS,SAC3C,QACI,OAAOS,IHjEf0N,YIM8B,WAAwB,IAAtB1N,EAAqB,uDAAd,GAAI8R,EAAU,uCACrD,OAAOA,EAAOjX,MACV,KAAKkC,EACD,MAAM,CACF8I,SAAS,GAEjB,KAAK7I,EACD,MAAM,CACF6I,SAAS,EACT4C,SAAS,EACTkF,MAAOmE,EAAOvS,SAEtB,KAAKtC,GACD,MAAM,CACF4I,SAAS,EACTC,MAAOgM,EAAOvS,SAEtB,QACI,OAAOS,IJvBfmO,aI2B+B,WAA2E,IAAzEnO,EAAwE,uDAAjE,CAAE6F,SAAS,EAAMiI,WAAY,GAAI3B,gBAAiB,IAAK2F,EAAU,uCACzG,OAAOA,EAAOjX,MACV,KAAKqC,GACD,oCACO8C,GADP,IAEI6F,SAAS,IAEjB,KAAK1I,GACD,MAAM,CACF0I,SAAS,EACT8H,MAAOmE,EAAOvS,SAEtB,KAAKnC,GACD,MAAM,CACFyI,SAAS,EACTC,MAAOgM,EAAOvS,SAEtB,QACI,OAAOS,IJ5CfoO,SIgD2B,WAAyB,IAAvBpO,EAAsB,uDAAf,GAAK8R,EAAU,uCACnD,OAAOA,EAAOjX,MACV,KAAKwC,GACD,oCACO2C,GADP,IAEI6F,SAAS,IAEjB,KAAKvI,GACD,MAAM,CACFuI,SAAS,EACT4C,SAAS,GAEjB,KAAKlL,GACD,MAAM,CACFsI,SAAS,EACTC,MAAOgM,EAAOvS,SAEtB,KAAK/B,GACD,MAAM,GAEV,QACI,OAAOwC,IJpEfkR,YIwE8B,WAAoC,IAAlClR,EAAiC,uDAA1B,CAAEqR,OAAQ,IAAMS,EAAU,uCACjE,OAAOA,EAAOjX,MACV,KAAK4C,GACD,MAAM,CACFoI,SAAS,GAEjB,KAAKnI,GACD,MAAM,CACFmI,SAAS,EACTwL,OAAQS,EAAOvS,QAAQ8R,OAAQ5K,MAAOqL,EAAOvS,QAAQkH,MAAOC,KAAMoL,EAAOvS,QAAQmH,MAEzF,KAAK/I,GACD,MAAM,CACFkI,SAAS,EACTC,MAAOgM,EAAOvS,SAEtB,KAAK3B,GACD,MAAM,CACFyT,OAAQ,IAEhB,QACI,OAAOrR,IJ5FfiS,SGkE2B,WAAkC,IAAjCjS,EAAgC,uDAAxB,CAAEkS,MAAO,IAAMJ,EAAS,uCAC5D,OAAOA,EAAOjX,MACV,KAAKuB,EACD,MAAO,CAAEyJ,SAAS,GACtB,KAAKxJ,EACD,MAAO,CACHwJ,SAAS,EAAOqM,MAAOJ,EAAOvS,QAAQ2S,MAAOzL,MAAOqL,EAAOvS,QAAQkH,MAAOC,KAAMoL,EAAOvS,QAAQmH,MAEvG,KAAKpK,EACD,MAAO,CAAEuJ,SAAS,EAAOC,MAAOgM,EAAOvS,SAC3C,KAAKhD,EACD,MAAO,CAAE2V,MAAO,IACpB,QACI,OAAOlS,IH9EfoS,WGmF6B,WAAwB,IAAvBpS,EAAsB,uDAAd,GAAK8R,EAAS,uCACpD,OAAOA,EAAOjX,MACV,KAAK2B,EACD,MAAO,CAAEqJ,SAAS,GACtB,KAAKpJ,EACD,MAAO,CAAEoJ,SAAS,EAAO4C,SAAS,GACtC,KAAK/L,EACD,MAAO,CAAEmJ,SAAS,EAAOC,MAAOgM,EAAOvS,SAC3C,QACI,OAAOS,IH3Ff4S,gBGgGkC,WAAiC,IAAhC5S,EAA+B,uDAAvB,CAAE0O,KAAM,IAAMoD,EAAS,uCAClE,OAAOA,EAAOjX,MACV,KAAK8B,EACD,MAAO,CAAEkJ,SAAS,GACtB,KAAKjJ,EACD,MAAO,CAAEiJ,SAAS,EAAO4C,SAAS,GACtC,KAAK5L,EACD,MAAO,CAAEgJ,SAAS,EAAOC,MAAOgM,EAAOvS,SAC3C,KAAKzC,EACD,MAAO,CAAE4R,KAAM,IACnB,QACI,OAAO1O,IH1GfkT,WC4B6B,WAAuB,IAAtBlT,EAAqB,uDAAb,GAAI8R,EAAS,uCACnD,OAAQA,EAAOjX,MACX,KAAKqJ,GACD,MAAO,CAAE2B,SAAS,GACtB,KAAK1B,GACD,MAAO,CAAE0B,SAAS,EAAO4C,SAAS,GACtC,KAAKrE,GACD,MAAO,CAAEyB,SAAS,EAAOC,MAAOgM,EAAOvS,SAC3C,QACI,OAAOS,IDpCfqT,WCwC6B,WAAuB,IAAtBrT,EAAqB,uDAAb,GAAI8R,EAAS,uCACnD,OAAQA,EAAOjX,MACX,KAAKwJ,GACD,MAAO,CAAEwB,SAAS,GACtB,KAAKvB,GACD,MAAO,CAAEuB,SAAS,EAAO4C,SAAS,EAAMtG,KAAM2P,EAAOvS,SACzD,KAAKgF,GACD,MAAO,CAAEsB,SAAS,EAAOC,MAAOgM,EAAOvS,SAC3C,KAAKiF,GACD,MAAO,GACX,QACI,OAAOxE,IDlDf6V,WCsD6B,WAA8B,IAA7B7V,EAA4B,uDAApB,CAACmC,KAAK,IAAK2P,EAAS,uCAC1D,OAAQA,EAAOjX,MACX,KAAK4J,GACD,MAAO,CAAEoB,SAAS,GACtB,KAAKnB,GACD,MAAO,CAAEmB,SAAS,EAAO4C,SAAS,EAAMtG,KAAM2P,EAAOvS,SACzD,KAAKoF,GACD,MAAO,CAAEkB,SAAS,EAAOC,MAAOgM,EAAOvS,SAC3C,KAAKqF,GACD,MAAO,CAAEzC,KAAM,IACnB,QACI,OAAOnC,IDhEfgW,UI0F4B,WAAoC,IAAlChW,EAAiC,uDAA1B,CAAEqR,OAAQ,IAAMS,EAAU,uCAC/D,OAAOA,EAAOjX,MACV,KAAKgD,GACD,MAAM,CACFgI,SAAS,EACTwL,OAAQ,IAEhB,KAAKvT,GACD,MAAM,CACF+H,SAAS,EACTwL,OAAQS,EAAOvS,QAAQ8R,OAAQ5K,MAAOqL,EAAOvS,QAAQkH,MAAOC,KAAMoL,EAAOvS,QAAQmH,MAEzF,KAAK3I,GACD,MAAM,CACF8H,SAAS,EACTC,MAAOgM,EAAOvS,SAEtB,QACI,OAAOS,IJ3GfuO,aI+G+B,WAAyB,IAAvBvO,EAAsB,uDAAf,GAAK8R,EAAU,uCACvD,OAAOA,EAAOjX,MACV,KAAKmD,GACD,oCACOgC,GADP,IAEI6F,SAAS,IAEjB,KAAK5H,GACD,MAAM,CACF4H,SAAS,EACT4C,SAAS,GAEjB,KAAKvK,GACD,MAAM,CACF2H,SAAS,EACTC,MAAOgM,EAAOvS,SAEtB,KAAKpB,GACD,MAAM,GAEV,QACI,OAAO6B,IJnIfsI,iBCkEmC,WAAuB,IAAtBtI,EAAqB,uDAAb,GAAI8R,EAAS,uCACzD,OAAQA,EAAOjX,MACX,KAAKgK,GACD,MAAO,CAAEgB,SAAS,GACtB,KAAKf,GACD,MAAO,CAAEe,SAAS,EAAO4C,SAAS,GACtC,KAAK1D,GACD,MAAO,CAAEc,SAAS,EAAOC,MAAOgM,EAAOvS,SAC3C,KAAKyF,GACD,MAAO,GACX,QACI,OAAOhF,ID5Ef4F,aCgF+B,WAAqC,IAApC5F,EAAmC,uDAA3B,CAAE+F,SAAU,IAAM+L,EAAS,uCACnE,OAAQA,EAAOjX,MACX,KAAKoK,GACD,MAAO,CAAEY,SAAS,EAAME,SAAU,IACtC,KAAKb,GACD,MAAO,CAAEW,SAAS,EAAOE,SAAU+L,EAAOvS,SAC9C,KAAK4F,GACD,MAAO,CAAEU,SAAS,EAAOC,MAAOgM,EAAOvS,SAC3C,QACI,OAAOS,IDxFf4W,cKnBgC,WAAoC,IAAnC5W,EAAkC,uDAA1B,CAAC6W,UAAW,IAAK/E,EAAS,uCACnE,OAAOA,EAAOjX,MACV,KAAKqb,GACD,MAAO,CAAErQ,SAAS,GACtB,KAAKsQ,GACD,MAAO,CAAEtQ,SAAS,EAAOgR,UAAW/E,EAAOvS,SAC/C,KAAK6W,GACD,MAAO,CAAEvQ,SAAS,EAAOC,MAAOgM,EAAOvS,SAC3C,QACI,OAAOS,ILWfmX,oBKPsC,WAAqC,IAApCnX,EAAmC,uDAA3B,CAACoX,WAAY,IAAKtF,EAAS,uCAC1E,OAAOA,EAAOjX,MACV,KAAKwb,GACD,MAAO,CAAExQ,SAAS,GACtB,KAAKyQ,GACD,MAAO,CAAEzQ,SAAS,EAAOuR,WAAYtF,EAAOvS,SAChD,KAAKgX,GACD,MAAO,CAAE1Q,SAAS,EAAOC,MAAOgM,EAAOvS,SAC3C,QACI,OAAOS,ILDfuR,eMvBiC,WAAiC,IAAhCvR,EAA+B,uDAAvB,CAAEuF,MAAM,IAAMuM,EAAS,uCACjE,OAAOA,EAAOjX,MACV,KAAK2V,GACD,MAAO,CAAE3K,SAAS,GACtB,KAAK4K,GACD,MAAO,CAAE5K,SAAS,EAAON,MAAOuM,EAAOvS,SAC3C,KAAKmR,GACD,MAAO,CAAE7K,SAAS,EAAOC,MAAOgM,EAAOvS,SAC3C,QACI,OAAOS,INef+X,qBMVuC,WAAwB,IAAvB/X,EAAsB,uDAAd,GAAK8R,EAAS,uCAC9D,OAAOA,EAAOjX,MACV,KAAK8V,GACD,MAAO,CAAE9K,SAAS,GACtB,KAAK+K,GACD,MAAO,CAAE/K,SAAS,EAAO4C,SAAS,GACtC,KAAKoI,GACD,MAAO,CAAEhL,SAAS,EAAOC,MAAOgM,EAAOvS,SAC3C,KAAKuR,GACD,MAAO,GACX,QACI,OAAO9Q,INAf2X,qBKGuC,WAAsC,IAArC3X,EAAoC,uDAA5B,CAAC4X,YAAa,IAAK9F,EAAS,uCAC5E,OAAOA,EAAOjX,MACV,KAAK2b,GACD,MAAO,CAAE3Q,SAAS,GACtB,KAAK4Q,GACD,MAAO,CAAE5Q,SAAS,EAAO+R,YAAa9F,EAAOvS,SACjD,KAAKmX,GACD,MAAO,CAAE7Q,SAAS,EAAOC,MAAOgM,EAAOvS,SAC3C,QACI,OAAOS,MLTb0Y,GAAuB/Y,aAAagZ,QAAQ,aAAe/O,KAAKgP,MAAMjZ,aAAagZ,QAAQ,cAAgB,GAE3GE,GAAsBlZ,aAAagZ,QAAQ,YAAc/O,KAAKgP,MAAMjZ,aAAagZ,QAAQ,aAAe,KAKxGG,GAAe,CACjBhP,KAAM,CACFC,UAAW2O,GACXvM,gBAN2BxM,aAAagZ,QAAQ,mBAAqB/O,KAAKgP,MAAMjZ,aAAagZ,QAAQ,oBAAsB,IAQ/H5Z,UAAW,CAACD,SAAU+Z,KAKpBE,GAAa,CAACC,MAMLC,GAJDC,uBACVZ,GAASQ,GAAcK,+BAAoBC,mBAAe,WAAf,EAAmBL,MOnDlEM,IAASpY,OACP,cAAC,IAAD,CAAUgY,MAAOA,GAAjB,SACE,cAAC,GAAD,MAEFnK,SAASwK,eAAe,SRuHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAA/T,GACLsH,QAAQtH,MAAMA,EAAMrG,c","file":"static/js/main.e5565c01.chunk.js","sourcesContent":["import React,{ useState } from 'react'\r\nimport { Form, InputGroup, Button} from 'react-bootstrap'\r\n\r\nconst SearchForm = ({history}) => {\r\n    const[ keyword, setKeyword] = useState('')\r\n\r\n    const submitHandler = (e) =>{\r\n        e.preventDefault()\r\n        if(keyword.trim()){\r\n            history.push(`/search/${keyword}`)\r\n        }else{\r\n            history.push('/')\r\n        }\r\n    }\r\n    return (\r\n        <Form onSubmit={submitHandler} inline className='search-header'>\r\n            <InputGroup>\r\n                <Form.Control\r\n                    className='search-input'\r\n                    type='text'\r\n                    name='q'\r\n                    onChange={(e) => setKeyword(e.target.value)}\r\n                    placeholder=\"search...\"\r\n\r\n                />\r\n                <InputGroup.Append>\r\n                    <Button className='search-btn' type='submit' variant=\"outline-secondary\"> <i className='fas fa-search'> </i></Button>\r\n                </InputGroup.Append>\r\n            </InputGroup>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default SearchForm\r\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_INFO_REQUEST = 'USER_INFO_REQUEST'\r\nexport const USER_INFO_SUCCESS = 'USER_INFO_SUCCESS'\r\nexport const USER_INFO_FAIL = 'USER_INFO_FAIL'\r\nexport const USER_INFO_RESET = 'USER_INFO_RESET'\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\nexport const USER_UPDATE_ADMIN_REQUEST = 'USER_UPDATE_ADMIN_REQUEST'\r\nexport const USER_UPDATE_ADMIN_SUCCESS = 'USER_UPDATE_ADMIN_SUCCESS'\r\nexport const USER_UPDATE_ADMIN_FAIL = 'USER_UPDATE_ADMIN_FAIL'\r\nexport const USER_UPDATE_ADMIN_RESET = 'USER_UPDATE_ADMIN_RESET'","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'","export const CART_ADD_ITEM = 'CART_ADD_ITEM';\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM';\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\r\nexport const CART_REMOVE_ALL_ITEMS= 'CART_REMOVE_ALL_ITEMS'","import axios from 'axios';\r\nimport { \r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGOUT,\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n    USER_INFO_REQUEST,\r\n    USER_INFO_SUCCESS,\r\n    USER_INFO_FAIL,\r\n    USER_INFO_RESET,\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n    USER_DELETE_FAIL,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_REQUEST,\r\n    USER_UPDATE_ADMIN_REQUEST,\r\n    USER_UPDATE_ADMIN_SUCCESS,\r\n    USER_UPDATE_ADMIN_FAIL\r\n} from '../constants/userConstants';\r\nimport { ORDER_LIST_MY_RESET} from '../constants/orderConstants'\r\nimport {CART_REMOVE_ALL_ITEMS} from '../constants/cartConstants'\r\n\r\nexport const login = (email, password) => async(dispatch)=>{\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type':'application/json'\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.post('/api/users/login',{email, password}, config)\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const register = (name, email, password) => async(dispatch)=>{\r\n    try {\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type':'application/json',\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.post('/api/users',{name, email, password}, config)\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        //redirect to login \r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\n//User Info Get\r\nexport const getUserInfo = (path) => async(dispatch, getState)=>{\r\n    try {\r\n        dispatch({\r\n            type: USER_INFO_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type':'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.get(`/api/users/${path}`, config)\r\n\r\n        dispatch({\r\n            type: USER_INFO_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_INFO_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\n//User Update\r\nexport const updateUserInfo = (user) => async(dispatch, getState)=>{\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type':'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.put(`/api/users/profile`, user, config)\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\n//User List\r\nexport const listUsers = (pageNumber = '', items = '') => async(dispatch, getState)=>{\r\n    try {\r\n        dispatch({\r\n            type: USER_LIST_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.get(`/api/users?pageNumber=${pageNumber}&items=${items}`, config)\r\n\r\n        dispatch({\r\n            type: USER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LIST_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\n//Delete User\r\nexport const deleteUser = (id) => async(dispatch, getState)=>{\r\n    try {\r\n        dispatch({\r\n            type: USER_DELETE_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        await axios.delete(`/api/users/${id}`, config)\r\n\r\n        dispatch({\r\n            type: USER_DELETE_SUCCESS\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DELETE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\n//Update admin users\r\nexport const updateAdminUser = (user) => async(dispatch, getState)=>{\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_ADMIN_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type':'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.put(`/api/users/${user._id}`, user, config)\r\n\r\n        dispatch({type: USER_UPDATE_ADMIN_SUCCESS})\r\n        dispatch({ type: USER_INFO_SUCCESS, payload: data })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_ADMIN_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const logout = () => (dispatch) =>{\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({ type: USER_LOGOUT })\r\n    dispatch({ type: USER_INFO_RESET })\r\n    dispatch({ type: ORDER_LIST_MY_RESET })\r\n    dispatch({ type: USER_LIST_RESET })\r\n    dispatch({ type: CART_REMOVE_ALL_ITEMS })\r\n    localStorage.removeItem('cartItems')\r\n}\r\n\r\n","import React from 'react'\r\nimport { Route }  from 'react-router-dom'\r\nimport { Container, Navbar, Nav, NavDropdown, Image } from 'react-bootstrap';\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { useDispatch, useSelector}  from 'react-redux'\r\nimport SearchForm from './SearchForm'\r\nimport { logout } from '../actions/userAction'\r\n\r\nconst Header = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const logoutHandler = () =>{\r\n        dispatch(logout())\r\n    }\r\n\r\n    return (\r\n        <header>\r\n            <Navbar  collapseOnSelect  className='top-nav'  expand=\"lg\"> \r\n                <Container fluid>\r\n                    <Navbar.Brand href=\"/\" className=\"brand-logo\"><Image src={`../images/logo.png`} fluid /></Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                        <Nav className=\"ml-auto px-4 text-center\">\r\n                            <LinkContainer to=\"/\">\r\n                                <Nav.Link className=\"px-4\"><i className='fas fa-home'></i> Home</Nav.Link>\r\n                            </LinkContainer>\r\n                            <LinkContainer to=\"/bikes\">\r\n                                <Nav.Link className=\"px-4\"><i className='fas fa-bicycle'></i> Bike Store</Nav.Link>\r\n                            </LinkContainer>\r\n                            <LinkContainer to=\"/contact\">\r\n                                <Nav.Link className=\"px-4\"><i className='fas fa-phone'></i> Contact</Nav.Link>\r\n                            </LinkContainer>\r\n                        </Nav>\r\n                        <Route render={({history}) => <SearchForm history={history} />} />\r\n                        <Nav className=\"ml-auto text-center\">\r\n                            {userInfo ? (\r\n                                !userInfo.isAdmin ? (<NavDropdown title={userInfo.name}  id='username'>\r\n                                    <LinkContainer to='/profile'>\r\n                                        <NavDropdown.Item><i className='fas fa-user'></i> Profile</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                    <LinkContainer to='/myorders'>\r\n                                        <NavDropdown.Item><i className='fas fa-user'></i> My Orders</NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                    <NavDropdown.Item onClick={logoutHandler}><i className='fas fa-sign-out-alt'></i> Logout</NavDropdown.Item>\r\n                                </NavDropdown>):''\r\n                                ) :\r\n                                <Nav.Link href=\"/login\"><i className='fas fa-user'></i> Log In</Nav.Link>\r\n                            } \r\n                            <Nav.Link href=\"/cart\"><i className=\"fas fa-shopping-cart\"></i> Cart</Nav.Link>  \r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\n\r\nconst HRLine = () => {\r\n    return (\r\n        <hr className=\"mt-2 mb-3\" />\r\n    )\r\n}\r\n\r\nexport default HRLine\r\n","import React,{ useState } from 'react'\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { useDispatch}  from 'react-redux'\r\nimport { Col, Button, Navbar, Nav } from 'react-bootstrap'\r\nimport { logout } from '../actions/userAction'\r\nimport HRLine from '../components/HRLine'\r\n\r\nconst AdminSidebar = () => {\r\n    const [active, setActive] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n   \r\n\r\n    const logoutHandler = () =>{\r\n        dispatch(logout())\r\n    }\r\n\r\n    const sidbarHandler = (e) =>{\r\n        e.preventDefault()\r\n        if(active === '')\r\n            setActive('active')\r\n        else\r\n            setActive('')\r\n    }\r\n\r\n\r\n    return (\r\n      <>\r\n        <Col className='wrap-sidebar p-0'>\r\n        <Navbar id='sidebar' className={`${active}`}>\r\n          <Col className='sidebar-button'>\r\n            <Button \r\n              type='button' \r\n              variant='outline-dark'\r\n              id=\"sidebarCollapse\" \r\n              onClick={sidbarHandler}\r\n            ><i className={active ?'fa fa-bars':'fa fa-times'}></i></Button>\r\n          </Col>\r\n          <HRLine />\r\n\r\n          {/* <Navbar.Brand href=\"/\" className=\"brand-logo\"><Image src={`../images/logo.png`}/></Navbar.Brand> */}\r\n          <Nav className=\"sidebar-navs\">\r\n            <LinkContainer to=\"/admin/dashboard\">\r\n              <Nav.Link className=\"px-4\"><i className='fas fa-chart-line'></i> Main</Nav.Link>\r\n            </LinkContainer>\r\n            <LinkContainer to=\"/admin/userlist\">\r\n              <Nav.Link className=\"px-4\"><i className='fas fa-users'></i> Users </Nav.Link>\r\n            </LinkContainer>\r\n            <LinkContainer to=\"/admin/bikelist\">\r\n              <Nav.Link className=\"px-4\"><i className='fas fa-bicycle'></i> Bikes </Nav.Link>\r\n            </LinkContainer>\r\n            <LinkContainer to=\"/admin/orders\">\r\n              <Nav.Link className=\"px-4\"><i className='fas fa-book'></i> Orders </Nav.Link>\r\n            </LinkContainer>\r\n            <HRLine />\r\n            <LinkContainer to='/profile'>\r\n                <Nav.Link className=\"px-4\"><i className='fas fa-user'></i> Profile </Nav.Link>\r\n            </LinkContainer>\r\n            <LinkContainer to='/myorders'>\r\n                <Nav.Link className=\"px-4\"><i className='fas fa-th-list'></i> My Orders </Nav.Link>\r\n            </LinkContainer>\r\n            <Nav.Link className=\"px-4\" onClick={logoutHandler}><i className='fas fa-sign-out-alt'></i> Logout</Nav.Link>\r\n            <HRLine />\r\n            <LinkContainer to='/admin/settings'>\r\n                <Nav.Link className=\"px-4\"><i className='fas fa-cog'></i> Settings </Nav.Link>\r\n            </LinkContainer>     \r\n          </Nav>\r\n        </Navbar>\r\n        </Col>\r\n      </>\r\n    )\r\n}\r\n\r\nexport default AdminSidebar\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer className='footer-bottom'>\r\n            <Container>\r\n                <Row>\r\n                    <Col className='text-center py-3'>Copyright &copy; BikeShop 2020</Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\n\r\nconst Rating = ({ value, text, color }) => {\r\n    return (\r\n    <div className=\"rating\">\r\n        <span>\r\n            <i\r\n            style={{ color }}\r\n            className={\r\n                value >= 1\r\n                ? \"fas fa-star\"\r\n                : value >= 0.5\r\n                ? \"fas fa-star-half-alt\"\r\n                : \"far fa-star\"\r\n            }\r\n            ></i>\r\n        </span>\r\n        <span>\r\n            <i\r\n            style={{ color }}\r\n            className={\r\n                value >= 2\r\n                ? \"fas fa-star\"\r\n                : value >= 1.5\r\n                ? \"fas fa-star-half-alt\"\r\n                : \"far fa-star\"\r\n            }\r\n            ></i>\r\n        </span>\r\n        <span>\r\n            <i\r\n            style={{ color }}\r\n            className={\r\n                value >= 3\r\n                ? \"fas fa-star\"\r\n                : value >= 2.5\r\n                ? \"fas fa-star-half-alt\"\r\n                : \"far fa-star\"\r\n            }\r\n            ></i>\r\n        </span>\r\n        <span>\r\n            <i\r\n            style={{ color }}\r\n            className={\r\n                value >= 4\r\n                ? \"fas fa-star\"\r\n                : value >= 3.5\r\n                ? \"fas fa-star-half-alt\"\r\n                : \"far fa-star\"\r\n            }\r\n            ></i>\r\n        </span>\r\n        <span>\r\n            <i\r\n            style={{ color }}\r\n            className={\r\n                value >= 5\r\n                ? \"fas fa-star\"\r\n                : value >= 4.5\r\n                ? \"fas fa-star-half-alt\"\r\n                : \"far fa-star\"\r\n            }\r\n            ></i>\r\n        </span>\r\n        <span> {text && text}</span>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Rating\r\n","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Card, Row, Col, Button } from 'react-bootstrap';\r\nimport Rating from '../components/Rating';\r\n\r\nconst Product = ({ bike }) => {\r\n\r\n\r\n    return (\r\n        <Card className=\"my-3 rounded h-100\">\r\n            <Link to={`/bikes/${bike._id}`} className='p-3'>\r\n                <Card.Img src={bike.image} cariant=\"top\" />\r\n            </Link>\r\n            <Card.Body>\r\n                <Link to={`/bikes/${bike._id}`}>\r\n                    <Card.Title as=\"div\" className=\"product-box\">\r\n                        <strong>{bike.name}</strong>\r\n                    </Card.Title>\r\n                </Link>\r\n                <Card.Text as=\"div\">\r\n                    <Row>\r\n                        <Col md={6}>\r\n                            <Rating\r\n                                value={bike.rating}\r\n                                text={`${bike.numReviews}`}\r\n                            />\r\n                        </Col>\r\n                        <Col md={6}>\r\n                            <h6><strong>{bike.price} $</strong></h6>\r\n                        </Col>\r\n                        <Col xs={12}>\r\n                            <LinkContainer to={`/cart/${bike._id}?qty=1`}>\r\n                            <Button\r\n                                className=\"btn-block mt-3\"\r\n                                type=\"button\"\r\n                                variant='outline-dark'\r\n                                disabled={bike.countInStock === 0}\r\n                            ><i className='fas fa-shopping-cart'></i>{' '}\r\n                                {bike.countInStock === 0 ?'Out of stock':'Add to cart'}\r\n                            </Button>\r\n                            </LinkContainer>\r\n                        </Col>\r\n                    </Row>\r\n                    \r\n                </Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Product\r\n","import React from 'react';\r\nimport { Alert } from 'react-bootstrap';\r\n\r\n\r\nconst Message = ({ variant, children }) => {\r\n    return (\r\n        <Alert variant={variant}>\r\n            {children}\r\n        </Alert>\r\n    )\r\n}\r\n\r\nMessage.defaultProps = {\r\n    variant: 'info'\r\n}\r\n\r\nexport default Message\r\n","import React from 'react';\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <Spinner animation=\"border\" role=\"status\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n        </Spinner>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","export const BIKE_LIST_REQUEST = 'BIKE_LIST_REQUEST';\r\nexport const BIKE_LIST_SUCCESS = 'BIKE_LIST_SUCCESS';\r\nexport const BIKE_LIST_FAIL = 'BIKE_LIST_FAIL';\r\n\r\nexport const BIKE_REQUEST = 'BIKE_REQUEST';\r\nexport const BIKE_SUCCESS = 'BIKE_SUCCESS';\r\nexport const BIKE_FAIL = 'BIKE_FAIL';\r\n\r\nexport const BIKE_DELETE_REQUEST = 'BIKE_DELETE_REQUEST';\r\nexport const BIKE_DELETE_SUCCESS = 'BIKE_DELETE_SUCCESS';\r\nexport const BIKE_DELETE_FAIL = 'BIKE_DELETE_FAIL';\r\n\r\nexport const BIKE_CREATE_REQUEST = 'BIKE_CREATE_REQUEST';\r\nexport const BIKE_CREATE_SUCCESS = 'BIKE_CREATE_SUCCESS';\r\nexport const BIKE_CREATE_FAIL = 'BIKE_CREATE_FAIL';\r\nexport const BIKE_CREATE_RESET = 'BIKE_CREATE_RESET';\r\n\r\nexport const BIKE_UPDATE_REQUEST = 'BIKE_UPDATE_REQUEST';\r\nexport const BIKE_UPDATE_SUCCESS = 'BIKE_UPDATE_SUCCESS';\r\nexport const BIKE_UPDATE_FAIL = 'BIKE_UPDATE_FAIL';\r\nexport const BIKE_UPDATE_RESET = 'BIKE_UPDATE_RESET';\r\n\r\nexport const BIKE_CREATE_REVIEW_REQUEST = 'BIKE_CREATE_REVIEW_REQUEST';\r\nexport const BIKE_CREATE_REVIEW_SUCCESS = 'BIKE_CREATE_REVIEW_SUCCESS';\r\nexport const BIKE_CREATE_REVIEW_FAIL = 'BIKE_CREATE_REVIEW_FAIL';\r\nexport const BIKE_CREATE_REVIEW_RESET = 'BIKE_CREATE_REVIEW_RESET';\r\n\r\nexport const TOP_BIKE_REQUEST = 'TOP_BIKE_REQUEST';\r\nexport const TOP_BIKE_SUCCESS = 'TOP_BIKE_SUCCESS';\r\nexport const TOP_BIKE_FAIL = 'TOP_BIKE_FAIL';\r\n\r\n","import axios from 'axios';\r\nimport { \r\n    BIKE_LIST_REQUEST, \r\n    BIKE_LIST_SUCCESS, \r\n    BIKE_LIST_FAIL,\r\n    BIKE_REQUEST,\r\n    BIKE_SUCCESS,\r\n    BIKE_FAIL,\r\n    BIKE_DELETE_REQUEST,\r\n    BIKE_DELETE_SUCCESS,\r\n    BIKE_DELETE_FAIL,\r\n    BIKE_CREATE_FAIL,\r\n    BIKE_CREATE_SUCCESS,\r\n    BIKE_CREATE_REQUEST,\r\n    BIKE_UPDATE_REQUEST,\r\n    BIKE_UPDATE_SUCCESS,\r\n    BIKE_UPDATE_FAIL,\r\n    BIKE_CREATE_REVIEW_REQUEST,\r\n    BIKE_CREATE_REVIEW_FAIL,\r\n    BIKE_CREATE_REVIEW_SUCCESS,\r\n    TOP_BIKE_FAIL,\r\n    TOP_BIKE_SUCCESS,\r\n    TOP_BIKE_REQUEST\r\n} from '../constants/bikeConstants';\r\n\r\nexport const topRatedBikes = () => async(dispatch) =>{\r\n    try {\r\n        dispatch({type: TOP_BIKE_REQUEST});\r\n        const { data } = await axios.get('/api/bikes/top');\r\n\r\n        dispatch({\r\n            type: TOP_BIKE_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: TOP_BIKE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listBikes = (keyword = '', pageNumber = '', items = '') => async(dispatch) =>{\r\n    try {\r\n        dispatch({type: BIKE_LIST_REQUEST});\r\n        const { data } = await axios.get(`/api/bikes?keyword=${keyword}&pageNumber=${pageNumber}&items=${items}`);\r\n        dispatch({\r\n            type: BIKE_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: BIKE_LIST_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const detailsBike = (id) => async(dispatch) =>{\r\n    try {\r\n        dispatch({type: BIKE_REQUEST});\r\n        const { data } = await axios.get(`/api/bikes/${id}`);\r\n        dispatch({\r\n            type: BIKE_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: BIKE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const deleteBike = (id) => async(dispatch, getState)=>{\r\n    try {\r\n        dispatch({\r\n            type: BIKE_DELETE_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        await axios.delete(`/api/bikes/${id}`, config)\r\n\r\n        dispatch({\r\n            type: BIKE_DELETE_SUCCESS\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: BIKE_DELETE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const createBike = (bike) => async(dispatch, getState)=>{\r\n    try {\r\n        dispatch({\r\n            type: BIKE_CREATE_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type':'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const{ data } = await axios.post(`/api/bikes`, bike, config)\r\n\r\n        dispatch({\r\n            type: BIKE_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: BIKE_CREATE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateBike = (bike) => async(dispatch, getState)=>{\r\n    try {\r\n        dispatch({\r\n            type: BIKE_UPDATE_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type':'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const{ data } = await axios.put(`/api/bikes/${bike._id}`, bike, config)\r\n\r\n        dispatch({\r\n            type: BIKE_UPDATE_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: BIKE_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const createBikeReview = (bikeId,  review) => async(dispatch, getState)=>{\r\n    try {\r\n        dispatch({\r\n            type: BIKE_CREATE_REVIEW_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type':'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        await axios.post(`/api/bikes/${bikeId}/reviews`, review, config)\r\n\r\n        dispatch({\r\n            type: BIKE_CREATE_REVIEW_SUCCESS\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: BIKE_CREATE_REVIEW_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n","import React,{ useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Carousel, Image } from 'react-bootstrap'\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { topRatedBikes } from '../actions/bikeAction';\r\n\r\n\r\n\r\nconst CarouselBikes = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const bikeTopRated = useSelector(state => state.bikeTopRated)\r\n    const { loading, error, topbikes} = bikeTopRated\r\n\r\n    useEffect(()=>{\r\n        dispatch(topRatedBikes())\r\n    },[dispatch])\r\n\r\n    return loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>:(\r\n        <Carousel>\r\n            {topbikes.map(bike => (\r\n                <Carousel.Item key={bike._id} className='bg-white'>\r\n                    <Link to={`/bikes/${bike._id}`} className='mx-auto'>\r\n                        <Image src={bike.image} alt={bike.name} fluid className='d-block' />\r\n                        <Carousel.Caption className='carousel-caption'>\r\n                            <h2>{bike.name}</h2>\r\n                        </Carousel.Caption>\r\n                    </Link>\r\n                </Carousel.Item>\r\n            ))}\r\n        </Carousel>\r\n    )\r\n}\r\n\r\nexport default CarouselBikes\r\n","import React,{ useEffect } from 'react'\r\nimport { Row, Col, Container }  from 'react-bootstrap';\r\nimport Product from '../components/Product';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport CarouselBikes from '../components/CarouselBikes';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { topRatedBikes } from '../actions/bikeAction';\r\n\r\nconst HomeView = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const bikeTopRated = useSelector(state => state.bikeTopRated)\r\n    const { loading, error, topbikes} = bikeTopRated\r\n\r\n    useEffect(()=>{\r\n        dispatch(topRatedBikes())\r\n    },[dispatch])\r\n\r\n    return (\r\n    <>\r\n        <CarouselBikes />\r\n        <Container className='pt-5 pb-5'>\r\n            <h3 className='text-center'>TOP RATED BIKE</h3>\r\n            { loading ? (\r\n                    <Loader />\r\n                ): error ?(\r\n                    <Message variant='danger'>{error}</Message>\r\n                ):(\r\n                    <Row>\r\n                        {topbikes.map(bike => (\r\n                                <Col key={bike._id} sm={12} md={6} xl={4} className='p-3'>\r\n                                    <Product bike={bike} />\r\n                                </Col>\r\n                                )\r\n                            )\r\n                        }\r\n                    </Row>\r\n                )\r\n            }\r\n        </Container>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default HomeView\r\n","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nconst PaginationBox = ({ pages, page, isAdmin=false, keyword = ''}) => {\r\n    return pages > 1 && (\r\n        <Pagination size=\"sm\" variant='outline-dark'>\r\n            {[...Array(pages).keys()].map(x => (\r\n                <LinkContainer key={x+1} to={!isAdmin ? keyword ? `/search/${keyword}/page/${x+1}` : `/bikes/page/${x+1}` : `/admin/bikelist/${x+1}`}>\r\n                    <Pagination.Item active={x+1 === page}>{x+1}</Pagination.Item>\r\n                </LinkContainer>\r\n            ))}\r\n        </Pagination>\r\n    )\r\n}\r\n\r\nexport default PaginationBox\r\n","import React,{ useEffect } from 'react';\r\nimport { Row, Col }  from 'react-bootstrap';\r\nimport Product from '../components/Product';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport PaginationBox from '../components/PaginationBox';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { listBikes } from '../actions/bikeAction';\r\n\r\n\r\nconst BikeStore = ({match}) => {\r\n    const keyword = match.params.keyword\r\n    const pageNumber = match.params.pageNumber || 1\r\n    const items = match.params.items || 6\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const bikeList = useSelector(state => state.bikeList)\r\n    const { loading, error, bikes, page, pages} = bikeList\r\n\r\n    useEffect(()=>{\r\n        dispatch(listBikes(keyword, pageNumber, items))\r\n    },[dispatch, keyword, pageNumber, items])\r\n\r\n    return (\r\n    <>\r\n        <h2 className='text-center my-5'>BIKE STORE</h2>\r\n        { loading ? (\r\n                <Loader />\r\n            ): error ?(\r\n                <Message variant='danger'>{error}</Message>\r\n            ):(\r\n                <>\r\n                    <Row className='mb-3'>\r\n                        {bikes.map(bike => (\r\n                                <Col key={bike._id} sm={12} md={6} xl={4} className='p-3'>\r\n                                    <Product bike={bike} />\r\n                                </Col>\r\n                                )\r\n                            )\r\n                        }\r\n                    </Row>\r\n                    <PaginationBox pages={pages} page={page} keyword={keyword ?  keyword : ''} />\r\n                </>\r\n            )\r\n        }\r\n    </>\r\n    )\r\n}\r\n\r\nexport default BikeStore;\r\n","import React,{ useState, useEffect } from 'react'\r\n\r\nconst Rate = ({ ratevalue, rateChange }) => {\r\n    const[value, setValue] = useState(ratevalue)\r\n\r\n    useEffect(()=>{\r\n        rateChange(value)\r\n    },[rateChange, value])\r\n\r\n    return (\r\n        <div className=\"rating\">\r\n            <span onClick={() => setValue(1)}>\r\n                <i\r\n                className={\r\n                    value >= 1\r\n                    ? \"fas fa-star\"\r\n                    : value >= 0.5\r\n                    ? \"fas fa-star-half-alt\"\r\n                    : \"far fa-star\"\r\n                }\r\n                ></i>\r\n            </span>\r\n            <span onClick={() => setValue(2)}>\r\n                <i\r\n                className={\r\n                    value >= 2\r\n                    ? \"fas fa-star\"\r\n                    : value >= 1.5\r\n                    ? \"fas fa-star-half-alt\"\r\n                    : \"far fa-star\"\r\n                }\r\n                ></i>\r\n            </span>\r\n            <span onClick={() => setValue(3)}>\r\n                <i\r\n                className={\r\n                    value >= 3\r\n                    ? \"fas fa-star\"\r\n                    : value >= 2.5\r\n                    ? \"fas fa-star-half-alt\"\r\n                    : \"far fa-star\"\r\n                }\r\n                ></i>\r\n            </span>\r\n            <span onClick={() => setValue(4)}>\r\n                <i\r\n                className={\r\n                    value >= 4\r\n                    ? \"fas fa-star\"\r\n                    : value >= 3.5\r\n                    ? \"fas fa-star-half-alt\"\r\n                    : \"far fa-star\"\r\n                }\r\n                ></i>\r\n            </span>\r\n            <span onClick={() => setValue(5)}>\r\n                <i\r\n                className={\r\n                    value >= 5\r\n                    ? \"fas fa-star\"\r\n                    : value >= 4.5\r\n                    ? \"fas fa-star-half-alt\"\r\n                    : \"far fa-star\"\r\n                }\r\n                ></i>\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Rate\r\n","import React from 'react';\r\nimport { Col } from 'react-bootstrap'\r\n\r\nconst BikeColor = ({bikeColors}) => {\r\n    return (\r\n    <>\r\n    <Col xs={4}><b>Colors:</b></Col>\r\n    { bikeColors.length > 0 ? \r\n        bikeColors.map((c,i) => (\r\n            <Col xs={1} key={i}>\r\n                <div className=\"bikecolors\" style={{backgroundColor: c}}> </div>\r\n            </Col>\r\n            \r\n        ))\r\n        :''\r\n    }\r\n    \r\n    </>\r\n    )\r\n}\r\n\r\nexport default BikeColor\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Row, Col, Image, ListGroup, Card, Button } from \"react-bootstrap\";\r\nimport Rating from \"../components/Rating\";\r\nimport Rate from \"../components/Rate\";\r\nimport BikeColor from '../components/BikeColor';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { detailsBike, createBikeReview } from '../actions/bikeAction';\r\nimport { BIKE_CREATE_REVIEW_RESET } from '../constants/bikeConstants'\r\n\r\nconst BikeView = ({ history, match }) => {\r\n    const[qty, setQty] = useState(1);\r\n    const[rating, setRating] = useState(0);\r\n    const[comment, setComment] = useState('');\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin;\r\n\r\n    const bikeDetails = useSelector(state => state.bikeDetails)\r\n    const { loading, error, bike } = bikeDetails;\r\n\r\n    const bikeCreateReview = useSelector(state => state.bikeCreateReview)\r\n    const { error: errorReview, success: successReview } = bikeCreateReview;\r\n\r\n    useEffect(()=>{\r\n        \r\n        if(successReview){\r\n            alert('Review Submitted')\r\n            setRating(0)\r\n            setComment('')\r\n            dispatch({type: BIKE_CREATE_REVIEW_RESET})\r\n        }\r\n        dispatch(detailsBike(match.params.id))\r\n    },[dispatch,  match, successReview])\r\n\r\n    const addToCartHandler = () =>{\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n    }\r\n\r\n    const submitHanlder = (e) =>{\r\n        e.preventDefault()\r\n        dispatch(createBikeReview(match.params.id, {rating, comment}))\r\n    }\r\n\r\n    const changeRate = (props) =>{\r\n        setRating(props)\r\n    }\r\n\r\n    return (\r\n    <>\r\n        <Link className=\"btn btn-dark my-3\" to=\"/\">\r\n            Go Back\r\n        </Link>\r\n        { loading ? (\r\n                <Loader />\r\n            ): error ?(\r\n                <Message variant='danger'>{error}</Message>\r\n            ):(\r\n            <>\r\n                <Row>\r\n                    <Col md={6}>\r\n                        <Image src={bike.image} alt={bike.name} fluid />\r\n                    </Col>\r\n                    <Col md={6}>\r\n                        <ListGroup>\r\n                            <ListGroup.Item>\r\n                                <h4><strong>{bike.name}</strong></h4>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <BikeColor bikeColors={bike.colors || []} />\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col md={6}><b>Brand:</b> {bike.brand}</Col>\r\n                                    <Col md={6}>\r\n                                        <Rating\r\n                                            value={bike.rating}\r\n                                            text={`${bike.numReviews}`}\r\n                                        />\r\n                                    </Col> \r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item><b>Description:</b> {bike.description}</ListGroup.Item>\r\n                        </ListGroup>\r\n                        <Card>\r\n                            <ListGroup variant=\"flush\">\r\n                                <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col><b>Status:</b> {bike.countInStock > 0 ? `${bike.countInStock} In Stock` : \"Out of Stock\"}</Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                                { bike.countInStock > 0 &&(\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col md={6}><b>Quantity:</b> </Col>\r\n                                            <Col md={6}>\r\n                                                <Button \r\n                                                    variant=\"outline-secondary\" \r\n                                                    className=\"mr-3\" \r\n                                                    type=\"button\" \r\n                                                    onClick={(e)=>(qty > 1)?setQty(qty-1):setQty(qty)}\r\n                                                >-\r\n                                                </Button> \r\n                                                {qty} \r\n                                                <Button \r\n                                                    variant=\"outline-primary\" \r\n                                                    className=\"ml-3\" \r\n                                                    type=\"button\" \r\n                                                    onClick={(e)=>(qty < bike.countInStock)?setQty(qty+1):setQty(qty)}\r\n                                                >+\r\n                                                </Button>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n                                )}\r\n                                <ListGroup.Item>\r\n                                    <Row>\r\n                                        <Col md={6}><b>Price:</b> ${bike.price}</Col>\r\n                                        <Col md={6}>\r\n                                        <Button\r\n                                            onClick={addToCartHandler}\r\n                                            className=\"btn-block\"\r\n                                            type=\"button\"\r\n                                            variant='outline-dark'\r\n                                            disabled={bike.countInStock === 0}\r\n                                        ><i className='fas fa-shopping-cart'></i>{' '}\r\n                                            Add to cart\r\n                                        </Button>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                            </ListGroup></Card>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md={6}>\r\n                        <h3>Reviews</h3>\r\n                        {bike.reviews.length === 0 && <Message>No Reviews</Message>}\r\n                        <ListGroup variant='flush'>\r\n                            {bike.reviews.map(review =>(\r\n                                <ListGroup.Item key={review._id}>\r\n                                    <strong>{review.name}</strong>\r\n                                    <Rating value={review.rating} />\r\n                                    <p>{review.createdAt.substring(0, 10)}</p>\r\n                                    <p>{review.comment}</p>\r\n                                </ListGroup.Item>\r\n                            ))}\r\n                            <ListGroup.Item>\r\n                                <h2>Write a Customer Review</h2>\r\n                                {errorReview && (<Message variant='danger'>{errorReview}</Message>)}\r\n                                {userInfo \r\n                                ? (\r\n                                    <Form onSubmit={submitHanlder}>\r\n                                        <Form.Group controlId='rating'>\r\n                                            <Form.Label>Rating</Form.Label>\r\n                                            <Rate ratevalue={rating} rateChange={changeRate} />\r\n                                        </Form.Group>\r\n                                        <Form.Group controlId='comment'>\r\n                                            <Form.Label>Comment</Form.Label>\r\n                                            <Form.Control as='textarea' row='3' value={comment} onChange={(e) => setComment(e.target.value)}></Form.Control>\r\n                                        </Form.Group>\r\n                                        <Button type='submit' variant='outline-dark'>\r\n                                            Submit\r\n                                        </Button>\r\n                                    </Form>\r\n                                ) \r\n                                : <Message>Please <Link to='/login'>sign in</Link> to write review</Message>}\r\n                                </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Col>\r\n                </Row>\r\n            </>\r\n            )\r\n        }\r\n    </>\r\n    )\r\n}\r\n\r\nexport default BikeView\r\n","import axios from 'axios';\r\nimport { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_SHIPPING_ADDRESS, CART_SAVE_PAYMENT_METHOD } from '../constants/cartConstants';\r\n\r\nexport const addToCart = (id, qty) => async(dispatch, getState) =>{\r\n    const{ data } = await axios.get(`/api/bikes/${id}`);\r\n    dispatch({\r\n        type: CART_ADD_ITEM,\r\n        payload: {\r\n            bikeId: data._id,\r\n            name: data.name,\r\n            image: data.image,\r\n            price: data.price,\r\n            countInStock: data.countInStock,\r\n            qty\r\n        }\r\n    })\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) =>{\r\n    dispatch({\r\n        type: CART_REMOVE_ITEM,\r\n        payload: id\r\n    })\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) =>{\r\n    dispatch({\r\n        type: CART_SAVE_SHIPPING_ADDRESS,\r\n        payload: data\r\n    })\r\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) =>{\r\n    dispatch({\r\n        type: CART_SAVE_PAYMENT_METHOD,\r\n        payload: data\r\n    })\r\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n}\r\n\r\n","import React,{ useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector} from 'react-redux';\r\nimport { Row, Col, Image, ListGroup, Button, Card } from 'react-bootstrap';\r\nimport Message from '../components/Message';\r\nimport { addToCart, removeFromCart} from '../actions/cartAction';\r\n\r\nconst CartScreen = ({match, location, history}) => {\r\n    const bikeID = match.params.id;\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const cart = useSelector(state => state.cart)\r\n    const { cartItems } = cart\r\n\r\n    useEffect(()=>{\r\n        if(bikeID){\r\n            dispatch(addToCart(bikeID, qty))\r\n        }\r\n    },[dispatch, bikeID, qty])\r\n\r\n    const removeFromCartHandler = (id) =>{\r\n        dispatch(removeFromCart(id))\r\n    }\r\n\r\n    const checkoutHandler =()=>{\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={12}>\r\n                <h2>Your Shoping Card</h2>\r\n                \r\n                { cartItems === 0 ? \r\n                    <Message>Your cart is empty. <Link to='/'>Go Back</Link></Message> : \r\n                    <ListGroup variant=\"flush\" className=\"text-center\">\r\n                        <Row>\r\n                            <Col md={2}><b>Image</b></Col>\r\n                            <Col md={4}><b>Name</b></Col>\r\n                            <Col md={2}><b>Price</b></Col>\r\n                            <Col md={2}><b>Quatity</b></Col>\r\n                            <Col md={2}><b>Action</b></Col>\r\n                        </Row>\r\n                        {cartItems.map(item => (\r\n                            <ListGroup.Item key={item.bikeId}>\r\n                                <Row>\r\n                                    <Col md={2}>\r\n                                        <Image src={item.image} alt={item.name} fluid rounded />\r\n                                    </Col>\r\n                                    <Col md={4}>\r\n                                        <Link to={`/bikes/${item.bikeId}`}>{item.name}</Link>\r\n                                    </Col>\r\n                                    <Col md={2}>${item.price}</Col>\r\n                                    <Col md={2}>\r\n                                        <Button \r\n                                            variant=\"outline-secondary\" \r\n                                            className=\"mr-3\" \r\n                                            type=\"button\" \r\n                                            onClick={(e)=> item.qty > 1 ?\r\n                                                dispatch(addToCart(item.bikeId, Number(item.qty-1))) :\r\n                                                dispatch(addToCart(item.bikeId, Number(item.qty)))\r\n                                            }\r\n                                        >-\r\n                                        </Button> \r\n                                        {item.qty} \r\n                                        <Button \r\n                                            variant=\"outline-primary\" \r\n                                            className=\"ml-3\" \r\n                                            type=\"button\" \r\n                                            onClick={(e)=> item.qty < item.countInStock ?\r\n                                                dispatch(addToCart(item.bikeId, Number(item.qty+1))) :\r\n                                                dispatch(addToCart(item.bikeId, Number(item.qty)))\r\n                                            }\r\n                                        >+\r\n                                        </Button>\r\n                                    </Col>\r\n                                    <Col md={2}>\r\n                                        <Button type='button' variant='outline-dark' onClick={() => removeFromCartHandler(item.bikeId)}>\r\n                                            <i className='fas fa-trash'></i>\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                        ))}\r\n                    </ListGroup>\r\n                }\r\n            </Col>\r\n            <Col md={12}>\r\n                <Card>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h4>({cartItems.reduce((acc, item) => acc + item.qty, 0)}) items</h4>\r\n                            ${cartItems.reduce((acc, item) => acc + item.qty * item.price, 0).toFixed(2)}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Button type='button' className='btn-block btn-dark' disabled={cartItems.length === 0} onClick={checkoutHandler}>Proceed to Checkout</Button>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default CartScreen\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst FormContainer = ({children}) => {\r\n    return (\r\n        <Container className='mt-5'>\r\n            <Row className='justify-content-md-center'>\r\n                <Col xs={12} md={4} >\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer","import React,{ useEffect, useState} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Form, Button, Row, Col, Card } from 'react-bootstrap'\r\nimport FormContainer from '../components/FormContainer'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { login } from '../actions/userAction'\r\n\r\n\r\nconst LoginScreen = ({location, history}) => {\r\n    const[email, setEmail] = useState('')\r\n    const[password, setPassword] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {loading, error, userInfo} = userLogin\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    //if loged in redirect\r\n    useEffect(()=>{\r\n        //if it is not null, logged user\r\n         if(userInfo){\r\n             history.push(redirect)\r\n         }\r\n    },[history, userInfo, redirect])\r\n\r\n    const submitHandler = (e)=>{\r\n        e.preventDefault()\r\n        dispatch(login(email, password))\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <Card>\r\n            <Card.Body>\r\n            <h3 className='text-center'><b>Login</b></h3>\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Control \r\n                        className='input-form-style'\r\n                        type='text' \r\n                        placeholder='E-mail' \r\n                        value={email} \r\n                        onChange={(e) => setEmail(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='password'>\r\n                    {/* <Form.Label>Password:</Form.Label> */}\r\n                    <Form.Control \r\n                        className='input-form-style'\r\n                        type='password' \r\n                        placeholder='Password' \r\n                        value={password} \r\n                        onChange={(e) => setPassword(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n                <Button type='submit' className='btn-dark btn-block'><i className='fas fa-sign-in-alt'></i>{' '}Login</Button>\r\n            </Form>\r\n            <Row>\r\n                <Col>\r\n                    No account {' '}\r\n                    <Link to={redirect ? `/register?redirect=${redirect}`:'/register'}>Register</Link>\r\n                </Col>\r\n            </Row>\r\n            </Card.Body>\r\n            </Card>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n","import React,{ useEffect, useState} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Form, Button, Row, Col, Card } from 'react-bootstrap'\r\nimport FormContainer from '../components/FormContainer'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { register } from '../actions/userAction'\r\n\r\n\r\nconst RegisterScreen = ({location, history}) => {\r\n    const[name, setName] = useState('')\r\n    const[email, setEmail] = useState('')\r\n    const[password, setPassword] = useState('')\r\n    const[confirmPassword, setConfirmPassword] = useState('')\r\n    const[message, setMessage] = useState(null)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    //get user register state\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const { loading, error, userInfo } = userRegister\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    //if loged in redirect\r\n    useEffect(()=>{\r\n        //if it is not null, logged user\r\n         if(userInfo){\r\n             history.push(redirect)\r\n         }\r\n    },[history, userInfo, redirect])\r\n\r\n    const submitHandler = (e)=>{\r\n        e.preventDefault()\r\n        if(password !== confirmPassword){\r\n            setMessage('Password do not match')\r\n        }\r\n        else{\r\n            dispatch(register(name, email, password))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <Card>\r\n            <Card.Body>\r\n            <h3 className='text-center'><b>Sign Up</b></h3>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Control \r\n                        className='input-form-style' \r\n                        type='text' \r\n                        placeholder='Name' \r\n                        value={name} \r\n                        onChange={(e) => setName(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Control \r\n                        className='input-form-style' \r\n                        type='text' \r\n                        placeholder='E-mail' \r\n                        value={email} \r\n                        onChange={(e) => setEmail(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='password'>\r\n                    <Form.Control \r\n                        className='input-form-style'\r\n                        type='password' \r\n                        placeholder='Enter password' \r\n                        value={password} \r\n                        onChange={(e) => setPassword(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='confirmpassword'>\r\n                    <Form.Control \r\n                        className='input-form-style'\r\n                        type='password' \r\n                        placeholder='Confirm password' \r\n                        value={confirmPassword} \r\n                        onChange={(e) => setConfirmPassword(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n                <Button type='submit' className='btn-dark btn-block'>Register</Button>\r\n            </Form>\r\n            <Row>\r\n                <Col>\r\n                    Have another account {' '}\r\n                    <Link to={redirect ? `/login?redirect=${redirect}`:'/login'}>Login</Link>\r\n                </Col>\r\n            </Row>\r\n            </Card.Body>\r\n            </Card>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default RegisterScreen\r\n","import React from 'react'\r\nimport { Container } from 'react-bootstrap'\r\n\r\nconst CheckoutSteps = ({step1, step2, step3, step4}) => {\r\n    return (\r\n    <>\r\n        <Container className='mt-5'>\r\n            <ul id=\"progressbar\" className='text-center'>\r\n                <li class={step1 ? 'active':''} id=\"account\"><strong>Login</strong></li>\r\n                <li class={step2 ? 'active':''} id=\"shipping\"><strong>Address</strong></li>\r\n                <li class={step3 ? 'active':''} id=\"payment\"><strong>Payment</strong></li>\r\n                <li class={step4 ? 'active':''} id=\"order\"><strong>Order</strong></li>\r\n            </ul>\r\n        </Container>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default CheckoutSteps\r\n","import React,{ useState } from 'react'\r\nimport {Form, Button, Card, Container, Row, Col} from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { saveShippingAddress } from '../actions/cartAction'\r\n\r\n\r\nconst ShippingScreen = ({history}) => {\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address)\r\n    const [city, setCity] = useState(shippingAddress.city)\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n    const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const submitHandler = (e) =>{\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({\r\n            address, city, postalCode, country\r\n        }))\r\n        history.push('/payment')\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <CheckoutSteps step1 step2 />\r\n            <h4 className='text-center'>Shipping</h4>\r\n            <Row className=\"justify-content-md-center\">\r\n                <Col xs={12} md={4}>\r\n                    <Card>\r\n                        <Card.Body>\r\n                            <Form onSubmit={submitHandler} >\r\n                                <Form.Group controlId='address'>\r\n                                    <Form.Label>Address</Form.Label>\r\n                                    <Form.Control\r\n                                        type='text'\r\n                                        placeholder='Enter address'\r\n                                        required\r\n                                        value={address}\r\n                                        onChange={(e) => setAddress(e.target.value)}\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Group controlId='city'>\r\n                                    <Form.Label>City</Form.Label>\r\n                                    <Form.Control\r\n                                        type='text'\r\n                                        placeholder='Enter city'\r\n                                        required\r\n                                        value={city}\r\n                                        onChange={(e) => setCity(e.target.value)}\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Group controlId='postalcode'>\r\n                                    <Form.Label>Zip</Form.Label>\r\n                                    <Form.Control\r\n                                        type='text'\r\n                                        placeholder='Enter zip code'\r\n                                        required\r\n                                        value={postalCode}\r\n                                        onChange={(e) => setPostalCode(e.target.value)}\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Group controlId='country'>\r\n                                    <Form.Label>Country</Form.Label>\r\n                                    <Form.Control\r\n                                        type='text'\r\n                                        placeholder='Enter Country'\r\n                                        required\r\n                                        value={country}\r\n                                        onChange={(e) => setCountry(e.target.value)}\r\n                                    ></Form.Control>\r\n                                </Form.Group>\r\n                                <Button type='submit' className='btn-block btn-dark'>Continue</Button>\r\n                            </Form>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ShippingScreen\r\n","import React,{ useState } from 'react'\r\nimport {Form, Button, Col, Card, Container, Row} from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { savePaymentMethod } from '../actions/cartAction'\r\n\r\nconst PaymentScreen = ({history}) => {\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    if(!shippingAddress){\r\n        history.push('/shipping')\r\n    }\r\n\r\n    const[paymentMethod, setPaymentMethod] = useState('PayPal')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const submitHandler = (e) =>{\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        history.push('/placeorder')\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <CheckoutSteps step1 step2 step3 />\r\n            <h4 className='text-center'>Payment</h4>\r\n            <Row className=\"justify-content-md-center\">\r\n                <Col xs={12} md={4}>\r\n                    <Card>\r\n                        <Card.Body>\r\n                            <Form onSubmit={submitHandler}>\r\n                                <Form.Group>\r\n                                    <Form.Label as='legend'>Select Method</Form.Label>\r\n                                    <Col>\r\n                                        <Form.Check \r\n                                            type='radio' \r\n                                            label='PayPal or CreditCard' \r\n                                            id='PayPal' \r\n                                            name='paymentMethod' \r\n                                            value='PayPal' \r\n                                            checked \r\n                                            onChange={(e) => setPaymentMethod(e.target.value)}\r\n                                        ></Form.Check>\r\n                                    </Col>\r\n                                </Form.Group>\r\n                                <Button type='submit' className='btn-block btn-dark'>Continue</Button>\r\n                            </Form>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default PaymentScreen\r\n","import React,{ useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport {Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { createOrder } from '../actions/orderAction'\r\n\r\nconst PlaceOrderScreen = ({history}) => {\r\n    const dispatch = useDispatch()\r\n    const cart = useSelector(state => state.cart)\r\n    console.log(cart.cartItems.length)\r\n\r\n    //calculate price\r\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n    cart.shippingPrice = cart.itemsPrice > 500 ? 10 : 20\r\n    cart.taxPrice = Number((0.19 * cart.itemsPrice).toFixed(2))\r\n    cart.totalPrice = (Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\r\n\r\n    const orderCreate = useSelector(state => state.orderCreate)\r\n    const { order, success, error} = orderCreate\r\n\r\n    useEffect(() =>{\r\n        if(success){\r\n            history.push(`/order/${order._id}`)\r\n        }\r\n        // eslint-disable-next-line\r\n    },[history, success])\r\n\r\n    const placeOrderHandler = () =>{\r\n        dispatch(createOrder({\r\n            orderItems: cart.cartItems,\r\n            shippingAddress: cart.shippingAddress,\r\n            paymentMethod: cart.paymentMethod,\r\n            itemsPrice: cart.itemsPrice,\r\n            shippingPrice: cart.shippingPrice,\r\n            taxPrice: cart.taxPrice,\r\n            totalPrice: cart.totalPrice,\r\n        }))\r\n        localStorage.removeItem('cartItems')\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <CheckoutSteps step1 step2 step3 step4/>\r\n            <Card>\r\n            <Card.Body>\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h3>Shipping</h3>\r\n                            <p>\r\n                                <strong>Address</strong>\r\n                                {cart.shippingAddress.address},{' '}\r\n                                {cart.shippingAddress.city}{' '}\r\n                                {cart.shippingAddress.postalCode},{' '}\r\n                                {cart.shippingAddress.country},\r\n                            </p>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <h3>Payment Method</h3>\r\n                            <strong>Method: </strong>\r\n                            {cart.paymentMethod}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <h3>Order Items</h3>\r\n                            {cart.cartItems.length === 0 ? <Message>Your cart is empty!</Message>:(\r\n                                <ListGroup variant='flush'>\r\n                                    {cart.cartItems.map((item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={1}>\r\n                                                    <Image src={item.image} alt={item.name} fluid rounded/>\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Link to={`/bikes/${item.bikeId}`}>{ item.name }</Link>\r\n                                                </Col>\r\n                                                <Col md={4}>\r\n                                                    {item.qty} x ${item.price} = ${item.qty*item.price}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h3>Order Summary</h3>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items</Col>\r\n                                    <Col>${cart.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping</Col>\r\n                                    <Col>${cart.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax</Col>\r\n                                    <Col>${cart.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total</Col>\r\n                                    <Col>${cart.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                    {error && <Message variant='danger'>{error}</Message>}\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                {console.log('hi',cart.cartItems.length === 0)}\r\n                                <Button \r\n                                    type='button' \r\n                                    className='btn-block btn-dark' \r\n                                    disabled={cart.cartItems.length === 0}\r\n                                    onClick={placeOrderHandler}\r\n                                >Place Order</Button>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n            </Card.Body>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n","import axios from 'axios'\r\nimport { \r\n    ORDER_CREATE_REQUEST, \r\n    ORDER_CREATE_SUCCESS, \r\n    ORDER_CREATE_FAIL,\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n    ORDER_DELIVER_REQUEST,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_SUCCESS\r\n} from '../constants/orderConstants'\r\n\r\n//Create Order\r\nexport const createOrder = (order) => async(dispatch, getState)=>{\r\n    try {\r\n        dispatch({\r\n            type: ORDER_CREATE_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type':'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.post(`/api/orders`, order, config)\r\n\r\n        dispatch({\r\n            type: ORDER_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_CREATE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\n//Get Order by Id\r\nexport const getOrderDetails = (id) => async(dispatch, getState)=>{\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DETAILS_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.get(`/api/orders/${id}`, config)\r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\n//Pay Order\r\nexport const payOrder = (orderId, paymentResult) => async(dispatch, getState)=>{\r\n    try {\r\n        dispatch({\r\n            type: ORDER_PAY_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type':'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.put(`/api/orders/${orderId}/pay`, paymentResult, config)\r\n\r\n        dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_PAY_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\n//Deliver Order\r\nexport const deliverOrder = (order) => async(dispatch, getState)=>{\r\n    try {\r\n        dispatch({\r\n            type: ORDER_DELIVER_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const{ data } = await axios.put(`/api/orders/${order._id}/deliver`, {}, config)\r\n\r\n        dispatch({\r\n            type: ORDER_DELIVER_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DELIVER_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\n//Get Orders\r\nexport const listMyOrders = (pageNumber = '', items = '') => async(dispatch, getState)=>{\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.get(`/api/orders/myorders?pageNumber=${pageNumber}&items=${items}`, config)\r\n\r\n        dispatch({\r\n            type: ORDER_LIST_MY_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_MY_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\n//List All Orders\r\nexport const listOrders = ( pageNumber = '', items = '') => async(dispatch, getState)=>{\r\n    try {\r\n        dispatch({\r\n            type: ORDER_LIST_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        \r\n        const {data} = await axios.get(`/api/orders/list?pageNumber=${pageNumber}&items=${items}`, config)  \r\n\r\n        dispatch({\r\n            type: ORDER_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_LIST_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}","import React,{ useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport { Link } from 'react-router-dom'\r\nimport {Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderAction'\r\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\r\n\r\nconst OrderScreen = ({history, match}) => {\r\n    const orderId = match.params.id\r\n    const [sdkReady, setSdkReady] = useState(false)\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const{ userInfo } = userLogin\r\n    \r\n    const orderDetails = useSelector(state => state.orderDetails)\r\n    const { order, loading, error} = orderDetails\r\n\r\n    const orderPay = useSelector(state => state.orderPay)\r\n    const { success: successPay, loading: loadingPay} = orderPay\r\n\r\n    const orderDeliver = useSelector(state => state.orderDeliver)\r\n    const { success: successDeliver, loading: loadingDeliver} = orderDeliver\r\n\r\n    if(!loading){\r\n        order.itemsPrice = order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n    }\r\n    \r\n\r\n    useEffect(() =>{\r\n        if(!userInfo){\r\n            history.push('/login')\r\n        }\r\n\r\n        if(userInfo && !userInfo.isAdmin){\r\n            if(order && order.user._id !== userInfo._id){\r\n                history.push('/login')\r\n            }\r\n        }\r\n        \r\n        const addPayPalScript = async() =>{\r\n            const { data: clientId } = await axios.get('/api/config/paypal')\r\n            const script = document.createElement('script')\r\n            script.type= 'text/javascript'\r\n            script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\r\n            script.async = true\r\n            script.onload = () =>{\r\n                setSdkReady(true)\r\n            }\r\n            document.body.appendChild(script)\r\n        }\r\n        \r\n        if(!order || order._id !== orderId || successPay || successDeliver){\r\n            dispatch({type: ORDER_PAY_RESET})\r\n            dispatch({type: ORDER_DELIVER_RESET})\r\n            dispatch(getOrderDetails(orderId))\r\n            \r\n        }else if(!order.isPaid){\r\n            if(!window.paypal){\r\n                addPayPalScript()\r\n            }else{\r\n                setSdkReady(true)\r\n            }\r\n        }\r\n    },[dispatch, history, orderId, order, successPay, successDeliver, userInfo])\r\n\r\n    const successPaymentHandler = (paymentResult) =>{\r\n        dispatch(payOrder(orderId, paymentResult))\r\n    }\r\n\r\n    const deliverHandler = () =>{\r\n        dispatch(deliverOrder(order))\r\n    }\r\n\r\n    return loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> :\r\n        <>\r\n            <h5 className='text-center'><b>Order:</b> {order._id}</h5>\r\n            <Card>\r\n                <Card.Body>\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h5>Shipping</h5>\r\n                            <p><strong>Name </strong> { order.user.name}</p>\r\n                            <p><strong>Email </strong> <a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\r\n                            <p>\r\n                                <strong>Address: </strong>{' '}\r\n                                {order.shippingAddress.address},{' '}\r\n                                {order.shippingAddress.city}{' '}\r\n                                {order.shippingAddress.postalCode},{' '}\r\n                                {order.shippingAddress.country},\r\n                            </p>\r\n                            {order.isDelivered ? \r\n                                (<Message variant='success'>Delivered on {order.deliveredAt}</Message>) : \r\n                                (<Message variant='danger'>Not Delivered</Message>)\r\n                            }\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <h5>Payment Method</h5>\r\n                            <p>\r\n                                <strong>Method: </strong>\r\n                                {order.paymentMethod}\r\n                            </p>\r\n                            {order.isPaid ? \r\n                                (<Message variant='success'>Paid on {order.paidAt}</Message>) : \r\n                                (<Message variant='danger'>Not Paid</Message>)\r\n                            }\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <h5>Order Items</h5>\r\n                            {order.orderItems.length === 0 ? <Message>Order is empty!</Message>:(\r\n                                <ListGroup variant='flush'>\r\n                                    {order.orderItems.map((item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={1}>\r\n                                                    <Image src={item.image} alt={item.name} fluid rounded/>\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Link to={`/bikes/${item.bikeId}`}>{ item.name }</Link>\r\n                                                </Col>\r\n                                                <Col md={4}>\r\n                                                    {item.qty} x ${item.price} = ${item.qty*item.price}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h5>Order Summary</h5>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items</Col>\r\n                                    <Col>${order.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping</Col>\r\n                                    <Col>${order.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax</Col>\r\n                                    <Col>${order.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total</Col>\r\n                                    <Col>${order.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            {!order.isPaid && (\r\n                                <ListGroup.Item>\r\n                                    {loadingPay && <Loader />}\r\n                                    {!sdkReady ? <Loader /> :(\r\n                                        <PayPalButton amount={order.totalPrice} onSuccess={successPaymentHandler} />\r\n                                    )}\r\n                                </ListGroup.Item>\r\n                            )}\r\n                            {loadingDeliver && <Loader />}\r\n                            {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n                                <ListGroup.Item>\r\n                                    <Button type='button' variant='outline-dark' className='btn-block' onClick={deliverHandler}>Mark as Delivered</Button>\r\n                                </ListGroup.Item>\r\n                            )}\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n            </Card.Body>\r\n            </Card>\r\n        </>\r\n    \r\n}\r\n\r\nexport default OrderScreen\r\n","import React,{ useEffect, useState} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Form, Button, Row, Col, Card } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getUserInfo, updateUserInfo } from '../actions/userAction'\r\n\r\nconst MyProfile = ({history}) => {\r\n    const[name, setName] = useState('')\r\n    const[email, setEmail] = useState('')\r\n    const[password, setPassword] = useState('')\r\n    const[confirmPassword, setConfirmPassword] = useState('')\r\n    const[message, setMessage] = useState(null)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    //get user register state\r\n    const userInfoDetails = useSelector(state => state.userInfoDetails)\r\n    const { loading, error, user } = userInfoDetails \r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdate = useSelector(state => state.userUpdate)\r\n    const { success } = userUpdate\r\n\r\n    //if loged in redirect\r\n    useEffect(()=>{\r\n        //if it is not null, logged user\r\n         if(!userInfo){\r\n             history.push('/login')\r\n         }else{\r\n             if(!user.name || user._id !== userInfo._id){\r\n                 dispatch(getUserInfo('profile'))\r\n             }else{\r\n                 setName(user.name)\r\n                 setEmail(user.email)\r\n             }\r\n         }\r\n    },[history, userInfo, dispatch, user])\r\n\r\n    const submitHandler = (e)=>{\r\n        e.preventDefault()\r\n        if(password !== confirmPassword){\r\n            setMessage('Password do not match')\r\n        }\r\n        else{\r\n           dispatch(updateUserInfo({id: user._id, name, email, password}))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={{span:6, offset: 3}}>\r\n            <Card className='m-5'>\r\n            <Card.Body>\r\n                <h3 className='text-center'><b>Profile</b></h3>\r\n                {message && <Message variant='danger'>{message}</Message>}\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n                {success && <Message variant='success'>Update Success</Message>}\r\n                {loading && <Loader />}\r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group controlId='name'>\r\n                        <Form.Label>Name:</Form.Label>\r\n                        <Form.Control type='text' placeholder='Enter name' value={name} onChange={(e) => setName(e.target.value)}></Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>E-mail:</Form.Label>\r\n                        <Form.Control type='text' placeholder='Enter email' value={email} onChange={(e) => setEmail(e.target.value)}></Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId='password'>\r\n                        <Form.Label>Password:</Form.Label>\r\n                        <Form.Control \r\n                            type='password' \r\n                            placeholder='Enter password' \r\n                            value={password} \r\n                            onChange={(e) => setPassword(e.target.value)}></Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId='confirmpassword'>\r\n                        <Form.Label>Confirm Password:</Form.Label>\r\n                        <Form.Control \r\n                            type='password' \r\n                            placeholder='Confirm password' \r\n                            value={confirmPassword} \r\n                            onChange={(e) => setConfirmPassword(e.target.value)}></Form.Control>\r\n                    </Form.Group>\r\n                    <Button type='submit' className='btn-dark btn-block'><i className='fas fa-save'></i>{' '}Save</Button>\r\n                </Form>\r\n            </Card.Body>\r\n            </Card>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default MyProfile\r\n","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nconst PaginationOnly = ({ pages, page, rout }) => {\r\n    return pages > 1 && (\r\n        <Pagination size=\"sm\" variant='outline-dark'>\r\n            {[...Array(pages).keys()].map(x => (\r\n                <LinkContainer key={x+1} to={`${rout}/${x+1}`}>\r\n                    <Pagination.Item active={x+1 === page}>{x+1}</Pagination.Item>\r\n                </LinkContainer>\r\n            ))}\r\n        </Pagination>\r\n    )\r\n}\r\n\r\n\r\nexport default PaginationOnly\r\n","export const SETTING_ITEMSPP_REQUEST = 'SETTING_ITEMSPP_REQUEST';\r\nexport const SETTING_ITEMSPP_SUCCESS = 'SETTING_ITEMSPP_SUCCESS';\r\nexport const SETTING_ITEMSPP_FAIL = 'SETTING_ITEMSPP_FAIL';\r\n\r\nexport const SETTING_ITEMSPP_UPDATE_REQUEST = 'SETTING_ITEMSPP_UPDATE_REQUEST';\r\nexport const SETTING_ITEMSPP_UPDATE_SUCCESS = 'SETTING_ITEMSPP_UPDATE_SUCCESS';\r\nexport const SETTING_ITEMSPP_UPDATE_FAIL = 'SETTING_ITEMSPP_UPDATE_FAIL';\r\nexport const SETTING_ITEMSPP_UPDATE_RESET = 'SETTING_ITEMSPP_UPDATE_RESET';","import axios from 'axios'\r\nimport { \r\n    SETTING_ITEMSPP_REQUEST,\r\n    SETTING_ITEMSPP_SUCCESS,\r\n    SETTING_ITEMSPP_FAIL,\r\n    SETTING_ITEMSPP_UPDATE_REQUEST,\r\n    SETTING_ITEMSPP_UPDATE_SUCCESS,\r\n    SETTING_ITEMSPP_UPDATE_FAIL\r\n} from '../constants/settingConstants';\r\n\r\nexport const getItemspp = () => async(dispatch, getState) =>{\r\n    try {\r\n        dispatch({type: SETTING_ITEMSPP_REQUEST});\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type':'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.get('/api/settings/itemspp', config);\r\n        dispatch({\r\n            type: SETTING_ITEMSPP_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: SETTING_ITEMSPP_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateItemspp = (itemspp) => async(dispatch, getState) =>{\r\n    try {\r\n        dispatch({type: SETTING_ITEMSPP_UPDATE_REQUEST});\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type':'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put('/api/settings/itemspp', itemspp, config);\r\n\r\n        dispatch({\r\n            type: SETTING_ITEMSPP_UPDATE_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: SETTING_ITEMSPP_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}","import React,{ useState, useEffect} from 'react'\r\nimport {LinkContainer} from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Table, Button, Row, Col } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listMyOrders } from '../actions/orderAction'\r\nimport PaginationOnly from '../components/PaginationOnly';\r\nimport { getItemspp } from '../actions/settingsAction'  \r\n\r\nconst MyOrders = ({history, match}) => {\r\n    const pageNumber = match.params.pageNumber || 1\r\n    //const items = match.params.items || 15\r\n    const[items, setItems] = useState()\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const orderListMy = useSelector(state => state.orderListMy)\r\n    const { loading:loadingOrders, error:errorOrders, orders, page, pages } = orderListMy\r\n\r\n    const settingItemspp = useSelector(state => state.settingItemspp)\r\n    const { items: itemspp } = settingItemspp\r\n\r\n    useEffect(()=>{\r\n        //if it is not null, logged user\r\n         if(!userInfo){\r\n             history.push('/login')\r\n         }else{\r\n            if(items)\r\n                dispatch(listMyOrders(pageNumber, items))\r\n            \r\n            if(!itemspp || !itemspp.items)\r\n                dispatch(getItemspp())\r\n            else\r\n                setItems(itemspp.items)\r\n         }\r\n    },[history, userInfo, dispatch, pageNumber, items, itemspp])\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={12}>\r\n                <h3 className='text-center'><b>My Orders</b></h3>\r\n                {loadingOrders ? <Loader /> : errorOrders ? <Message variant='danger'>{errorOrders}</Message> :(\r\n                    <>\r\n                    <Table hover responsive className='table-sm text-center'> \r\n                        <thead className='dark-bgcolor'>\r\n                            <tr>\r\n                                <th>ID</th>\r\n                                <th>DATE</th>\r\n                                <th>TOTAL</th>\r\n                                <th>PAID</th>\r\n                                <th>DELIVERED</th>\r\n                                <th>Action</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {orders.map(order =>(\r\n                                <tr key={order._id}>\r\n                                    <td>{order._id}</td>\r\n                                    <td>{order.createdAt.substring(0, 10)}</td>\r\n                                    <td>{order.totalPrice}</td>\r\n                                    <td>\r\n                                        {order.isPaid ? \r\n                                            (order.paidAt.substring(0, 10)) : \r\n                                            (<i className='fas fa-times'></i>) \r\n                                        }\r\n                                    </td>\r\n                                    <td>\r\n                                        {order.isDelivered ? \r\n                                            (order.deliveredAt.substring(0, 10)) : \r\n                                            (<i className='fas fa-times'></i>) \r\n                                        }\r\n                                    </td>\r\n                                    <td>\r\n                                        <LinkContainer to={`/order/${order._id}`}>\r\n                                            <Button variant=\"outline-dark\" className='btn-sm'><i className='fas fa-archive'></i>{' '}Details</Button>\r\n                                        </LinkContainer>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </Table>\r\n                    <PaginationOnly pages={pages} page={page} rout={'/myorders'}/>\r\n                    </>\r\n                )}\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default MyOrders\r\n","import React from 'react'\r\nimport { Row, Col, Image, ListGroup, Card } from 'react-bootstrap';\r\n\r\nconst Contact = () => {\r\n    return (\r\n    <Row className='justify-content-md-center mt-5'>\r\n        \r\n        <Col md={6} xs={12} className='text-center'>\r\n            <Card>\r\n                <Card.Body>\r\n                    <Image src={'images/b-link-p.jpg'} roundedCircle responsive alt='besart' className='profile-image mb-3' />\r\n                    <ListGroup>\r\n                        <ListGroup.Item action><b>Besart Mullabazi</b> <br /> Fascinated always in Web Development & Software Engineer including Graphic Design, Hacking and SEO - Internet Marketing.</ListGroup.Item>\r\n                        <ListGroup.Item action><b>FullStack</b>: MERN (Mongodb, Expressjs, Reactjs, Nodejs)</ListGroup.Item>\r\n                        <ListGroup.Item action><b>Other: </b>HTML, CSS, JavaScript, jQuery, PHP, Java, Hibernate, SpringBoot, C++</ListGroup.Item>\r\n                        <ListGroup.Item action><b>Database: </b>SQL, MySQL, Pl/SQL, MongoDB</ListGroup.Item>\r\n                        <ListGroup.Item action><b>Graphic Designer: </b>Photoshop, Illustrator</ListGroup.Item>\r\n                        <ListGroup.Item action>\r\n                            <a href='https://www.linkedin.com/in/besartm/' className='btn btn-sm btn-outline-info' rel=\"noreferrer\" target='_blank'>Linkedin</a>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Card.Body>\r\n            </Card>\r\n        </Col>\r\n    </Row>\r\n    )\r\n}\r\n\r\nexport default Contact\r\n","import React,{ useState, useEffect} from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../../components/Message'\r\nimport Loader from '../../components/Loader'\r\nimport { listUsers, deleteUser } from '../../actions/userAction' \r\nimport { getItemspp } from '../../actions/settingsAction' \r\nimport PaginationOnly from '../../components/PaginationOnly';\r\n\r\nconst UserListView = ({history, match}) => {\r\n    const pageNumber = match.params.pageNumber || 1\r\n    const[items, setItems] = useState()\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userList = useSelector(state => state.userList)\r\n    const { loading, error, users, pages, page } = userList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userDelete = useSelector(state => state.userDelete)\r\n    const { success: successDelete } = userDelete\r\n\r\n    const settingItemspp = useSelector(state => state.settingItemspp)\r\n    const { items: itemspp } = settingItemspp\r\n\r\n    useEffect(()=>{\r\n        if(userInfo && userInfo.isAdmin){\r\n            if(items)\r\n                dispatch(listUsers(pageNumber, items))\r\n            if(!itemspp || !itemspp.items)\r\n                dispatch(getItemspp())\r\n            else\r\n                setItems(itemspp.items)\r\n        }else{\r\n            history.push('/login')\r\n        }\r\n        \r\n    },[dispatch, history, userInfo, successDelete, pageNumber, items, itemspp])\r\n\r\n    const deleteHandler = (id) =>{\r\n        if(window.confirm('Are you sure?')){\r\n            dispatch(deleteUser(id))\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <h3 className='text-center'><b>Users</b></h3>\r\n            {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>:(\r\n                <>\r\n                <Table hover responsive className='table-sm text-center'>\r\n                    <thead className='dark-bgcolor'>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>NAME</th>\r\n                            <th>EMAIL</th>\r\n                            <th>ADMIN</th>\r\n                            <th>ACTION</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {users.map(user => (\r\n                            <tr key={user._id}>\r\n                                <td>{user._id}</td>\r\n                                <td>{user.name}</td>\r\n                                <td>{user.email}</td>\r\n                                <td>\r\n                                    {user.isAdmin ? \r\n                                        (<i className='fas fa-check'></i>) \r\n                                        :(<i className='fas fa-times'></i>)}\r\n                                </td>\r\n                                <td>\r\n                                    <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                                        <Button variant='outline-dark' className='btn-sm'><i className='fas fa-edit'></i></Button>\r\n                                    </LinkContainer>\r\n                                    <Button variant='outline-danger' className='btn-sm' onClick={() => deleteHandler(user._id)}>\r\n                                        <i className='fas fa-trash'></i>\r\n                                    </Button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n                <PaginationOnly pages={pages} page={page} rout={'/admin/userlist'}/>\r\n                </>\r\n            )}\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserListView\r\n","import React,{ useEffect, useState} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Form, Button, Card } from 'react-bootstrap'\r\nimport FormContainer from '../../components/FormContainer'\r\nimport Message from '../../components/Message'\r\nimport Loader from '../../components/Loader'\r\nimport { getUserInfo, updateAdminUser } from '../../actions/userAction'\r\nimport { USER_UPDATE_ADMIN_RESET } from '../../constants/userConstants'\r\n\r\n\r\nconst UserEditView = ({match, history}) => {\r\n    const userId = match.params.id\r\n\r\n    const[name, setName] = useState('')\r\n    const[email, setEmail] = useState('')\r\n    const[isAdmin, setIsAdmin] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userInfoDetails = useSelector(state => state.userInfoDetails)\r\n    const { loading, error, user } = userInfoDetails\r\n\r\n    const userUpdateAdmin = useSelector(state => state.userUpdateAdmin)\r\n    const { loading: loadingUpdate, error: errorUpdate, success: successUpdate } = userUpdateAdmin\r\n\r\n    \r\n\r\n\r\n    useEffect(()=>{\r\n        if(!userInfo || !userInfo.isAdmin){\r\n            history.push('/login')\r\n        }\r\n\r\n        if(successUpdate){\r\n            dispatch({ type: USER_UPDATE_ADMIN_RESET })\r\n            history.push('/admin/userlist')\r\n        }else{\r\n            if(!user.name || user._id  !== userId){\r\n                dispatch(getUserInfo(userId))\r\n            }else{\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setIsAdmin(user.isAdmin)\r\n            }\r\n        }\r\n    },[dispatch, history, userInfo, user, userId, successUpdate])\r\n\r\n    const submitHandler = (e)=>{\r\n        e.preventDefault()\r\n        dispatch(updateAdminUser({\r\n            _id: userId,\r\n            name,\r\n            email,\r\n            isAdmin\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Link to='/admin/userlist' className='btn btn-light my-3'>\r\n                Go Back\r\n            </Link>\r\n            <FormContainer>\r\n                <Card>\r\n                <Card.Body>\r\n                <h3>Edit User</h3>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n                {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> :(\r\n                    <Form onSubmit={submitHandler}>\r\n                        <Form.Group controlId='name'>\r\n                            <Form.Label>Name:</Form.Label>\r\n                            <Form.Control type='text' placeholder='Enter name' value={name} onChange={(e) => setName(e.target.value)}></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId='email'>\r\n                            <Form.Label>Email:</Form.Label>\r\n                            <Form.Control type='text' placeholder='Enter email' value={email} onChange={(e) => setEmail(e.target.value)}></Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId='isadmin'>\r\n                            <Form.Check \r\n                                type='checkbox' \r\n                                label='Is Admin?' \r\n                                checked={isAdmin} \r\n                                onChange={(e) => setIsAdmin(e.target.checked)}></Form.Check>\r\n                        </Form.Group>\r\n                        <Button type='submit' className='btn-dark btn-block'><i className='fas fa-save'></i>{' '}Save</Button>\r\n                    </Form>\r\n                )}\r\n                \r\n                </Card.Body>\r\n                </Card>\r\n            </FormContainer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserEditView\r\n","import React,{ useState, useEffect} from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport PaginationBox from '../../components/PaginationBox'; \r\nimport Message from '../../components/Message'\r\nimport Loader from '../../components/Loader'\r\nimport { listBikes, deleteBike } from '../../actions/bikeAction'\r\nimport { getItemspp } from '../../actions/settingsAction' \r\nimport { BIKE_CREATE_RESET } from '../../constants/bikeConstants'\r\n\r\n\r\nconst BikeListView = ({history, match}) => {\r\n    const pageNumber = match.params.pageNumber || 1\r\n    const[items, setItems] = useState(10)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const bikeList = useSelector(state => state.bikeList)\r\n    const { loading, error, bikes, page, pages } = bikeList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const bikeDelete = useSelector(state => state.bikeDelete)\r\n    const { loading: loadingDelete, error: errorDelete, success: successDelete } = bikeDelete\r\n\r\n    const bikeCreate = useSelector(state => state.bikeCreate)\r\n    const{  success: successCreate, bike: createdBike} = bikeCreate\r\n\r\n    const settingItemspp = useSelector(state => state.settingItemspp)\r\n    const { items: itemspp } = settingItemspp\r\n\r\n    useEffect(()=>{\r\n        dispatch({type: BIKE_CREATE_RESET})\r\n        if(!userInfo || !userInfo.isAdmin){\r\n            history.push('/login')\r\n        }else{\r\n            if(!itemspp || !itemspp.items)\r\n                dispatch(getItemspp())\r\n            else\r\n                setItems(itemspp.items)\r\n        }\r\n\r\n        if(successCreate){\r\n            history.push(`/admin/bikelist`)\r\n        }else{\r\n            if(items)\r\n                dispatch(listBikes('',pageNumber, items))\r\n        }\r\n        \r\n    },[dispatch, history, userInfo, successCreate, createdBike, successDelete, pageNumber, items, itemspp])\r\n\r\n    const createBikeHandler = () =>{\r\n        history.push('/admin/bike/create')\r\n    }\r\n\r\n    const deleteHandler = (id) =>{\r\n        if(window.confirm('Are you sure?')){\r\n            dispatch(deleteBike(id))\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col className=\"text-right\">\r\n                    <Button className='my-3 btn-sm' variant=\"outline-dark\" onClick={createBikeHandler}>\r\n                        <i className='fas fa-plus'></i>{' '}Create Bike\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n            <h3 className='text-center'><b>Bikes</b></h3>\r\n            {loadingDelete && <Loader />}\r\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n            {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>:(\r\n            <>\r\n                <Table hover responsive className='table-sm text-center'>\r\n                    <thead className='dark-bgcolor'>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>NAME</th>\r\n                            <th>BRAND</th>\r\n                            <th>CATEGORY</th>\r\n                            <th>PRICE</th>\r\n                            <th>IN STOCK</th>\r\n                            <th>ACTION</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {bikes.map(bike => (\r\n                            <tr key={bike._id}>\r\n                                <td>{bike._id}</td>\r\n                                <td>{bike.name}</td>\r\n                                <td>{bike.brand}</td>\r\n                                <td>{bike.category}</td>\r\n                                <td>{bike.price}</td>\r\n                                <td>{bike.countInStock}</td>\r\n                                <td>\r\n                                    <LinkContainer to={`/admin/bike/${bike._id}/edit`}>\r\n                                        <Button variant='outline-dark' className='btn-sm'><i className='fas fa-edit'></i></Button>\r\n                                    </LinkContainer>\r\n                                    {' '}\r\n                                    <Button variant='outline-danger' className='btn-sm' onClick={() => deleteHandler(bike._id)}>\r\n                                        <i className='fas fa-trash'></i>\r\n                                    </Button>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n                <PaginationBox pages={pages} page={page} isAdmin={true} />\r\n            </>\r\n            )}\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default BikeListView\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst FormLargeContainer = ({children}) => {\r\n    return (\r\n        <Container className='mt-5'>\r\n            <Row className='justify-content-md-center'>\r\n                <Col xs={12} md={8} >\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormLargeContainer","import React from 'react'\r\n\r\nconst ExtractBikeColor = ({bikeColors, removeColorHandler}) => {\r\n\r\n    return (\r\n    <>\r\n        { bikeColors.length > 0 \r\n            ? bikeColors.map((c,i) => (\r\n                <div \r\n                    key={i}\r\n                    className=\"bikecolors\" \r\n                    style={{backgroundColor: c}}\r\n                    onClick={e => removeColorHandler(c)}\r\n                ></div>\r\n            ))\r\n            :'No Colors'\r\n        }\r\n    </>\r\n    )\r\n}\r\n\r\nexport default ExtractBikeColor\r\n","import React,{ useEffect, useState} from 'react'\r\nimport axios from 'axios'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Form, Button, Card, Image, Row, Col} from 'react-bootstrap'\r\nimport FormLargeContainer from '../../components/FormLargeContainer'\r\nimport Message from '../../components/Message'\r\nimport Loader from '../../components/Loader'\r\nimport ExtractBikeColor from '../../components/ExtractBikeColor'\r\nimport { ColorExtractor } from 'react-color-extractor'\r\nimport { createBike } from '../../actions/bikeAction'\r\n\r\nconst CreateBikeView = ({history}) => {\r\n    const[image, setImage] = useState('')\r\n    const defaultImg = '/images/default.jpg'\r\n    const[name, setName] = useState('')\r\n    const[brand, setBrand] = useState('')\r\n    const[category, setCategory] = useState('')\r\n    const[price, setPrice] = useState(0)\r\n    const[countInStock, setCountInStock] = useState(0)\r\n    const[colors, setColors] = useState([])\r\n    const[description, setDescription] = useState('')\r\n    const[uploading, setUploading] = useState(false)\r\n    const[newUpload, setNewUpload] = useState(false)\r\n    const[fileUpload, setFileUpload] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n    \r\n    const bikeCreate = useSelector(state => state.bikeCreate)\r\n    const {loading, error, success} = bikeCreate\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n\r\n    useEffect(()=>{\r\n        if(!userInfo || !userInfo.isAdmin)\r\n            history.push('/login')\r\n\r\n        if(success)\r\n            history.push('/admin/bikelist')\r\n           \r\n    },[history, success, userInfo])\r\n\r\n    const uploadFileHandler = async (e) =>{\r\n        const file= e.target.files[0]\r\n        setFileUpload(file)\r\n        const formData = new FormData()\r\n        formData.append('image', file)\r\n        setUploading(true)\r\n\r\n        try {\r\n            const config = {\r\n                headers:{\r\n                    'Content-Type': 'multipart/form-data'\r\n                } \r\n            }\r\n            const { data } = await axios.post('/api/upload', formData, config)\r\n\r\n            setImage(data)\r\n            setUploading(false)\r\n            setNewUpload(true)\r\n        } catch (error) {\r\n            console.error(error)\r\n            setUploading(false)\r\n        }\r\n    }\r\n\r\n    const removeColorHandler = (e) =>{\r\n        const filteredColors = colors.filter(color => color !== e)\r\n        setColors(filteredColors)\r\n    }\r\n\r\n    const clearHandler = () =>{\r\n        setImage('')\r\n        setName('')\r\n        setBrand('')\r\n        setCategory('')\r\n        setPrice(0)\r\n        setCountInStock(0)\r\n        setColors([])\r\n        setDescription('')\r\n        setFileUpload('')\r\n    }\r\n\r\n    const submitHandler = (e)=>{\r\n        e.preventDefault()\r\n        dispatch(createBike({\r\n            image,\r\n            colors,\r\n            name,\r\n            brand,\r\n            category,\r\n            price,\r\n            countInStock,\r\n            description\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <FormLargeContainer>\r\n            <Card>\r\n                <Card.Body>\r\n                    <h3 className='text-center mb-5'>Create Bike <i className='fas fa-bicycle'></i></h3>\r\n                    {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> :(\r\n                    <Form onSubmit={submitHandler} className='col-sm-12'>\r\n                        <Form.Group as={Row} controlId='image'>\r\n                            <Col xs={12} md={3}>\r\n                                <Image \r\n                                    src={fileUpload \r\n                                            ? URL.createObjectURL(fileUpload) \r\n                                            : defaultImg\r\n                                        } \r\n                                    alt={name} \r\n                                    style={{width: 100}} \r\n                                    thumbnail\r\n                                        \r\n                                />\r\n                            </Col>\r\n                            <Col xs={12} md={9}>\r\n                                <Form.Label>Upload bike image:</Form.Label> \r\n                                <Form.File \r\n                                    id='image-file' \r\n                                    label={image ? image : 'Choose File'} \r\n                                    custom\r\n                                    onChange={uploadFileHandler}\r\n                                >{uploading && <Loader />}</Form.File>\r\n                            </Col>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Row} controlId='colors'>\r\n                            <Form.Label column xs={12} md={3}>Colors:</Form.Label>\r\n                            <Col xs={12} md={9} className='editbike-colors'>\r\n                                <ColorExtractor\r\n                                    getColors={colorsArray => {\r\n                                        if(newUpload){\r\n                                            setColors(colorsArray)\r\n                                            setNewUpload(false)\r\n                                        }\r\n                                            \r\n                                    }}\r\n                                ><img src={newUpload \r\n                                    ? URL.createObjectURL(fileUpload)\r\n                                    : ''\r\n                                } alt='' /></ColorExtractor>\r\n                                <ExtractBikeColor bikeColors={colors || []} removeColorHandler={removeColorHandler} />\r\n                            </Col>\r\n                        </Form.Group>\r\n                        <Form.Group as={Row} controlId='name'>\r\n                            <Form.Label column xs={12} md={3}>Name:</Form.Label>\r\n                            <Col xs={12} md={9}>\r\n                                <Form.Control\r\n                                    type='text' \r\n                                    placeholder='name' \r\n                                    value={name} \r\n                                    required\r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                >    \r\n                                </Form.Control>\r\n                            </Col>\r\n                        </Form.Group>\r\n                        <Form.Group as={Row} controlId='brand'>\r\n                            <Form.Label column xs={12} md={3}>Brand:</Form.Label>\r\n                            <Col xs={12} md={9}>\r\n                                <Form.Control \r\n                                    type='text' \r\n                                    placeholder='brand' \r\n                                    value={brand} \r\n                                    onChange={(e) => setBrand(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Col>\r\n                        </Form.Group>\r\n                        <Form.Group as={Row} controlId='category'>\r\n                            <Form.Label column xs={12} md={3}>Category:</Form.Label>\r\n                            <Col xs={12} md={9}>\r\n                                <Form.Control \r\n                                    type='text' \r\n                                    placeholder='category' \r\n                                    value={category} \r\n                                    onChange={(e) => setCategory(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Col>\r\n                        </Form.Group>\r\n                        <Form.Group as={Row} controlId='price'>\r\n                            <Form.Label column xs={12} md={3}>Price:</Form.Label>\r\n                            <Col xs={12} md={9}>\r\n                                <Form.Control \r\n                                    type='number' \r\n                                    placeholder='price' \r\n                                    value={price} \r\n                                    onChange={(e) => setPrice(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Col>\r\n                        </Form.Group>\r\n                        <Form.Group as={Row} controlId='countInStock'>\r\n                            <Form.Label column xs={12} md={3}>Count in Stock:</Form.Label>\r\n                            <Col xs={12} md={9}>\r\n                                <Form.Control \r\n                                    type='number' \r\n                                    placeholder='count in stock' \r\n                                    value={countInStock} \r\n                                    onChange={(e) => setCountInStock(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Col>\r\n                        </Form.Group>\r\n                        <Form.Group as={Row} controlId='Description'>\r\n                            <Form.Label column xs={12} md={3}>Description:</Form.Label>\r\n                            <Col xs={12} md={9}>\r\n                                <Form.Control \r\n                                    as='textarea'\r\n                                    rows={3}\r\n                                    placeholder='description' \r\n                                    value={description} \r\n                                    onChange={(e) => setDescription(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Col>\r\n                        </Form.Group>\r\n                        <Row className='mt-5'>\r\n                            <Col xs={6} className=\"text-right\">\r\n                                <Button type='submit' variant='outline-primary'>\r\n                                    <i className='fas fa-save'></i>{' '}Save\r\n                                </Button>\r\n                            </Col>\r\n                            <Col xs={6} className=\"text-left\">\r\n                                <Button variant='outline-danger' onClick={clearHandler}>\r\n                                    <i className='fas fa-broom'> </i> {' '} Clear\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                    )}\r\n                </Card.Body>\r\n            </Card>\r\n        </FormLargeContainer>\r\n    )\r\n}\r\n\r\nexport default CreateBikeView\r\n","import React,{ useEffect, useState} from 'react'\r\nimport axios from 'axios'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Form, Button, Card, Image, Row, Col} from 'react-bootstrap'\r\nimport FormLargeContainer from '../../components/FormLargeContainer'\r\nimport Message from '../../components/Message'\r\nimport Loader from '../../components/Loader'\r\nimport ExtractBikeColor from '../../components/ExtractBikeColor'\r\nimport { ColorExtractor } from 'react-color-extractor'\r\nimport { deleteBike, detailsBike, updateBike } from '../../actions/bikeAction'\r\nimport { BIKE_UPDATE_RESET } from '../../constants/bikeConstants'\r\n\r\nconst EditBikeView = ({match, history}) => {\r\n    const bikeId = match.params.id\r\n\r\n    const[image, setImage] = useState('')\r\n    const defaultImg = '/images/default.jpg'\r\n    const[name, setName] = useState('')\r\n    const[brand, setBrand] = useState('')\r\n    const[category, setCategory] = useState('')\r\n    const[price, setPrice] = useState(0)\r\n    const[countInStock, setCountInStock] = useState(0)\r\n    const[colors, setColors] = useState([])\r\n    const[description, setDescription] = useState('')\r\n    const[uploading, setUploading] = useState(false)\r\n    const[newUpload, setNewUpload] = useState(false)\r\n    const[fileUpload, setFileUpload] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n    \r\n    const bikeDetails = useSelector(state => state.bikeDetails)\r\n    const {loading, error, bike} = bikeDetails\r\n\r\n    const bikeUpdate = useSelector(state => state.bikeUpdate)\r\n    const {loading: loadingUpdate, error: errorUpdate, success: successUpdate} = bikeUpdate\r\n\r\n\r\n    useEffect(()=>{\r\n        if(!userInfo || !userInfo.isAdmin){\r\n            history.push('/login')\r\n        }else{\r\n            if(successUpdate){\r\n                dispatch({ type: BIKE_UPDATE_RESET })\r\n                dispatch(detailsBike(bikeId))\r\n            }else{\r\n                if(bike && bike._id !== bikeId){\r\n                    dispatch(detailsBike(bikeId))\r\n                }else{\r\n                    setImage(bike.image)\r\n                    setName(bike.name)\r\n                    setBrand(bike.brand)\r\n                    setCategory(bike.category)\r\n                    setPrice(bike.price)\r\n                    setCountInStock(bike.countInStock)\r\n                    setDescription(bike.description)\r\n                    setColors(bike.colors)\r\n                }\r\n            }\r\n        }  \r\n    },[dispatch, history, bikeId, successUpdate, bike, userInfo])\r\n\r\n    const deleteHandler = (id) =>{\r\n        if(window.confirm('Are you sure?')){\r\n            dispatch(deleteBike(id))\r\n            history.push('/admin/bikelist')\r\n        }\r\n    }\r\n\r\n    const uploadFileHandler = async (e) =>{\r\n        const file= e.target.files[0]\r\n        setFileUpload(file)\r\n        const formData = new FormData()\r\n        formData.append('image', file)\r\n        setUploading(true)\r\n\r\n        try {\r\n            const config = {\r\n                headers:{\r\n                    'Content-Type': 'multipart/form-data'\r\n                } \r\n            }\r\n            const { data } = await axios.post('/api/upload', formData, config)\r\n\r\n            setImage(data)\r\n            setUploading(false)\r\n            setNewUpload(true)\r\n        } catch (error) {\r\n            console.error(error)\r\n            setUploading(false)\r\n        }\r\n    }\r\n\r\n    const removeColorHandler = (e) =>{\r\n        const filteredColors = colors.filter(color => color !== e)\r\n        setColors(filteredColors)\r\n    }\r\n\r\n    const submitHandler = (e)=>{\r\n        e.preventDefault()\r\n        dispatch(updateBike({\r\n            _id: bikeId,\r\n            image,\r\n            name,\r\n            brand, \r\n            category,\r\n            price,\r\n            countInStock,\r\n            description,\r\n            colors\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <FormLargeContainer>\r\n            <Card>\r\n                <Card.Body>\r\n                    <h3 className='text-center mb-5'>Edit Bike <i className='fas fa-bicycle'></i></h3>\r\n                    {loadingUpdate && <Loader />}\r\n                    {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n                    {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> :(\r\n                    <Form onSubmit={submitHandler} className='col-sm-12'>\r\n                        <Form.Group as={Row} controlId='image'>\r\n                            <Col xs={12} md={3}>\r\n                                <Image \r\n                                    src={fileUpload \r\n                                            ? URL.createObjectURL(fileUpload) \r\n                                            : `${bike.image}`\r\n                                            ? `${bike.image}` \r\n                                            : defaultImg\r\n                                        } \r\n                                    alt={bike.name} \r\n                                    style={{width: 100}} \r\n                                    thumbnail\r\n                                        \r\n                                />\r\n                            </Col>\r\n                            <Col xs={12} md={9}>\r\n                                <Form.Label>Upload bike image:</Form.Label> \r\n                                <Form.File \r\n                                    id='image-file' \r\n                                    label={image ? image : 'Choose File'} \r\n                                    custom \r\n                                    onChange={uploadFileHandler}\r\n                                >{uploading && <Loader />}</Form.File>\r\n                            </Col>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Row} controlId='colors'>\r\n                            <Form.Label column xs={12} md={3}>Colors:</Form.Label>\r\n                            <Col xs={12} md={9} className='editbike-colors'>\r\n                                \r\n                                <ColorExtractor\r\n                                    src={newUpload \r\n                                        ? URL.createObjectURL(fileUpload) \r\n                                        : `${bike.image}`\r\n                                        ? `${bike.image}` \r\n                                        : null\r\n                                    } \r\n                                    getColors={colorsArray => {\r\n                                        if(newUpload){\r\n                                            setColors(colorsArray)\r\n                                            setNewUpload(false)\r\n                                        }\r\n                                            \r\n                                    }}\r\n                                />\r\n                                <ExtractBikeColor bikeColors={colors || []} removeColorHandler={removeColorHandler} />\r\n                            </Col>\r\n                        </Form.Group>\r\n                        <Form.Group as={Row} controlId='name'>\r\n                            <Form.Label column xs={12} md={3}>Name:</Form.Label>\r\n                            <Col xs={12} md={9}>\r\n                                <Form.Control\r\n                                    type='text' \r\n                                    placeholder='name' \r\n                                    value={name} \r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                >    \r\n                                </Form.Control>\r\n                            </Col>\r\n                        </Form.Group>\r\n                        <Form.Group as={Row} controlId='brand'>\r\n                            <Form.Label column xs={12} md={3}>Brand:</Form.Label>\r\n                            <Col xs={12} md={9}>\r\n                                <Form.Control \r\n                                    type='text' \r\n                                    placeholder='brand' \r\n                                    value={brand} \r\n                                    onChange={(e) => setBrand(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Col>\r\n                        </Form.Group>\r\n                        <Form.Group as={Row} controlId='category'>\r\n                            <Form.Label column xs={12} md={3}>Category:</Form.Label>\r\n                            <Col xs={12} md={9}>\r\n                                <Form.Control \r\n                                    type='text' \r\n                                    placeholder='category' \r\n                                    value={category} \r\n                                    onChange={(e) => setCategory(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Col>\r\n                        </Form.Group>\r\n                        <Form.Group as={Row} controlId='price'>\r\n                            <Form.Label column xs={12} md={3}>Price:</Form.Label>\r\n                            <Col xs={12} md={9}>\r\n                                <Form.Control \r\n                                    type='number' \r\n                                    placeholder='price' \r\n                                    value={price} \r\n                                    onChange={(e) => setPrice(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Col>\r\n                        </Form.Group>\r\n                        <Form.Group as={Row} controlId='countInStock'>\r\n                            <Form.Label column xs={12} md={3}>Count in Stock:</Form.Label>\r\n                            <Col xs={12} md={9}>\r\n                                <Form.Control \r\n                                    type='number' \r\n                                    placeholder='count in stock' \r\n                                    value={countInStock} \r\n                                    onChange={(e) => setCountInStock(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Col>\r\n                        </Form.Group>\r\n                        <Form.Group as={Row} controlId='Description'>\r\n                            <Form.Label column xs={12} md={3}>Description:</Form.Label>\r\n                            <Col xs={12} md={9}>\r\n                                <Form.Control \r\n                                    as='textarea'\r\n                                    rows={3}\r\n                                    placeholder='description' \r\n                                    value={description} \r\n                                    onChange={(e) => setDescription(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Col>\r\n                        </Form.Group>\r\n                        <Row className='mt-5'>\r\n                            <Col xs={6} className=\"text-right\">\r\n                                <Button type='submit' variant='outline-dark'>\r\n                                    <i className='fas fa-edit'> </i> \r\n                                    Update\r\n                                </Button>\r\n                            </Col>\r\n                            <Col xs={6} className=\"text-left\">\r\n                                <Button variant='outline-danger' onClick={() => deleteHandler(bike._id)}>\r\n                                    <i className='fas fa-trash'> </i> Delete\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                    )}\r\n                </Card.Body>\r\n            </Card>\r\n        </FormLargeContainer>\r\n    )\r\n}\r\n\r\nexport default EditBikeView\r\n","import React,{ useState, useEffect} from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../../components/Message'\r\nimport Loader from '../../components/Loader'\r\nimport { listOrders } from '../../actions/orderAction' \r\nimport PaginationOnly from '../../components/PaginationOnly';\r\nimport { getItemspp } from '../../actions/settingsAction'  \r\n\r\nconst OrderListAdminView = ({history, match}) => {\r\n    const pageNumber = match.params.pageNumber || 1\r\n    const[items, setItems] = useState()\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const orderList = useSelector(state => state.orderList)\r\n    const { loading, error, orders, page, pages } = orderList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const settingItemspp = useSelector(state => state.settingItemspp)\r\n    const { items: itemspp } = settingItemspp\r\n\r\n    useEffect(()=>{\r\n        if(userInfo && userInfo.isAdmin){\r\n            if(items)\r\n                dispatch(listOrders(pageNumber, items))\r\n            \r\n            if(!itemspp || !itemspp.items)\r\n                dispatch(getItemspp())\r\n            else\r\n                setItems(itemspp.items)\r\n        }else{\r\n            history.push('/login')\r\n        }\r\n    },[dispatch, history, userInfo, pageNumber, items, itemspp])\r\n\r\n    return (\r\n        <>\r\n            <h3 className='text-center'><b>Orders</b></h3>\r\n            {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>:(\r\n                <>\r\n                <Table hover responsive className='table-sm text-center'>\r\n                    <thead className='dark-bgcolor'>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>User</th>\r\n                            <th>Date</th>\r\n                            <th>Total</th>\r\n                            <th>Paid</th>\r\n                            <th>Delivered</th>\r\n                            <th>Action</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {orders.map(order => (\r\n                            <tr key={order._id}>\r\n                                <td>{order._id}</td>\r\n                                <td>{order.user && order.user.name}</td>\r\n                                <td>{order.createdAt.substring(0, 10)}</td>\r\n                                <td>$ {order.totalPrice}</td>\r\n                                <td>\r\n                                    {order.isPaid ? \r\n                                        (order.paidAt.substring(0, 10)) \r\n                                        :(<i className='fas fa-times'></i>)}\r\n                                </td>\r\n                                <td>\r\n                                    {order.isDelivered ? \r\n                                        (order.deliveredAt.substring(0, 10)) \r\n                                        :(<i className='fas fa-times'></i>)}\r\n                                </td>\r\n                                <td>\r\n                                    <LinkContainer to={`/order/${order._id}`}>\r\n                                        <Button variant=\"outline-dark\" className='btn-sm'><i className='fas fa-archive'></i>{' '}Details</Button>\r\n                                    </LinkContainer>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n                <PaginationOnly pages={pages} page={page} rout={'/admin/orders'}/>\r\n                </>\r\n            )} \r\n        </>\r\n    )\r\n}\r\n\r\nexport default OrderListAdminView\r\n","export const DASHBOARD_USERSDATA_REQUEST = 'DASHBOARD_USERSDATA_REQUEST';\r\nexport const DASHBOARD_USERSDATA_SUCCESS = 'DASHBOARD_USERSDATA_SUCCESS';\r\nexport const DASHBOARD_USERSDATA_FAIL = 'DASHBOARD_USERSDATA_FAIL';\r\n\r\nexport const DASHBOARD_ORDERDATA_REQUEST = 'DASHBOARD_ORDERDATA_REQUEST';\r\nexport const DASHBOARD_ORDERDATA_SUCCESS = 'DASHBOARD_ORDERDATA_SUCCESS';\r\nexport const DASHBOARD_ORDERDATA_FAIL = 'DASHBOARD_ORDERDATA_FAIL';\r\n\r\nexport const DASHBOARD_UNDELIVERED_REQUEST = 'DASHBOARD_UNDELIVERED_REQUEST';\r\nexport const DASHBOARD_UNDELIVERED_SUCCESS = 'DASHBOARD_UNDELIVERED_SUCCESS';\r\nexport const DASHBOARD_UNDELIVERED_FAIL = 'DASHBOARD_UNDELIVERED_FAIL';","import React,{useEffect} from 'react'\r\nimport { Pie } from 'react-chartjs-2'\r\nimport Loader from '../components/Loader';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getDashboardUsersData } from '../actions/dashboardAction'\r\n\r\nconst UsersChart = () => {\r\n  const labelsArray = ['Total', 'Admins', 'Users', 'New']\r\n  const colors = ['#003f5c', '#58508d', '#bc5090', '#ff6361', '#ffa600']\r\n  const dispatch = useDispatch();\r\n\r\n    const dashboardData = useSelector(state => state.dashboardData)\r\n    const { loading, usersdata} = dashboardData\r\n    \r\n\r\n    useEffect(()=>{\r\n        dispatch(getDashboardUsersData())\r\n        // eslint-disable-next-line \r\n    },[dispatch])\r\n\r\n  return(\r\n    <>\r\n      <div className='header text-center'>\r\n        <h4 className='title'>Users</h4>\r\n      </div>\r\n      { loading ? ( <Loader />) :(\r\n        \r\n      \r\n        <Pie data={{ \r\n          labels: labelsArray,\r\n          datasets: [\r\n            {\r\n              label: '# of Votes',\r\n              data: usersdata,\r\n              backgroundColor: colors,\r\n              borderColor: colors,\r\n              borderWidth: 1,\r\n            },\r\n          ],\r\n        }} />\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UsersChart\r\n\r\n","import axios from 'axios';\r\nimport { \r\n    DASHBOARD_USERSDATA_REQUEST,\r\n    DASHBOARD_USERSDATA_SUCCESS,\r\n    DASHBOARD_USERSDATA_FAIL,\r\n    DASHBOARD_ORDERDATA_REQUEST,\r\n    DASHBOARD_ORDERDATA_SUCCESS,\r\n    DASHBOARD_ORDERDATA_FAIL,\r\n    DASHBOARD_UNDELIVERED_REQUEST,\r\n    DASHBOARD_UNDELIVERED_SUCCESS,\r\n    DASHBOARD_UNDELIVERED_FAIL\r\n} from '../constants/dashboardConstatns';\r\n\r\n//Dashboard User Info Get\r\nexport const getDashboardUsersData = () => async(dispatch, getState)=>{\r\n    try {\r\n        dispatch({\r\n            type: DASHBOARD_USERSDATA_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type':'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.get(`/api/admin/userdata`, config)\r\n\r\n        dispatch({\r\n            type: DASHBOARD_USERSDATA_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: DASHBOARD_USERSDATA_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\n//Dashboard Orders Info Get\r\nexport const getDashboardOrdersData = () => async(dispatch, getState)=>{\r\n    try {\r\n        dispatch({\r\n            type: DASHBOARD_ORDERDATA_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type':'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.get(`/api/admin/monthlyorders`, config)\r\n\r\n        dispatch({\r\n            type: DASHBOARD_ORDERDATA_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: DASHBOARD_ORDERDATA_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\n//Dashboard Undelivered Orders\r\nexport const getUndeliveredOrders = () => async(dispatch, getState)=>{\r\n    try {\r\n        dispatch({\r\n            type: DASHBOARD_UNDELIVERED_REQUEST\r\n        })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type':'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const {data} = await axios.get(`/api/orders/undelivered`, config)\r\n\r\n        dispatch({\r\n            type: DASHBOARD_UNDELIVERED_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: DASHBOARD_UNDELIVERED_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}","import React,{ useEffect } from 'react'\r\nimport { Bar } from 'react-chartjs-2'\r\nimport Loader from '../components/Loader';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getDashboardOrdersData } from '../actions/dashboardAction'\r\n\r\nconst MonthlyOrders = () => {\r\n    const labelsArray  = ['Jan','Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\r\n    const colors = [\"#399283\", \"#39eec0\", \"#294d46\", \"#a2e1ca\", \"#42952e\", \"#a7d64e\", \"#744822\", \"#ebaa8c\", \"#b02949\", \"#ec4b18\", \"#f79302\", \"#ff0087\"]\r\n    const options = {\r\n      scales: {\r\n        yAxes: [\r\n          {\r\n            ticks: {\r\n              beginAtZero: true,\r\n            },\r\n          },\r\n        ],\r\n      },\r\n    }\r\n    const dispatch = useDispatch();\r\n\r\n    const dashboardOrdersData = useSelector(state => state.dashboardOrdersData)\r\n    const { loading, ordersdata} = dashboardOrdersData\r\n    \r\n    useEffect(()=>{\r\n      dispatch(getDashboardOrdersData())\r\n      // eslint-disable-next-line\r\n    },[dispatch])\r\n\r\n    return (\r\n        <> \r\n          <div className='header text-center'>\r\n            <h4 className='title'>This year orders</h4>\r\n          </div>\r\n          { loading ? ( <Loader />) :(\r\n            \r\n            <Bar \r\n              data={{\r\n                labels: labelsArray,\r\n                datasets: [{\r\n                  label: '# orders',\r\n                  data: ordersdata,\r\n                  backgroundColor: colors,\r\n                  borderColor: colors,\r\n                  borderWidth: 1,\r\n                }]\r\n              }} \r\n              options={options}\r\n            />\r\n          )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MonthlyOrders","import React,{ useEffect} from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader';\r\nimport { getUndeliveredOrders } from '../actions/dashboardAction' \r\n\r\nconst UndeliveredOrders = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const dashboardUndelivered = useSelector(state => state.dashboardUndelivered)\r\n    const { loading, error, undelivered } = dashboardUndelivered\r\n\r\n    useEffect(()=>{\r\n        dispatch(getUndeliveredOrders())\r\n    },[dispatch])\r\n\r\n    return (\r\n        <>\r\n            <h3 className='text-center'><b>Undelivered Orders</b></h3>\r\n            {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>:(\r\n                <Table hover responsive className='table-sm text-center'>\r\n                    <thead className='dark-bgcolor'>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>User</th>\r\n                            <th>Date</th>\r\n                            <th>Total</th>\r\n                            <th>Paid</th>\r\n                            <th>Delivered</th>\r\n                            <th>Action</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {undelivered.map(order => (\r\n                            <tr key={order._id}>\r\n                                <td>{order._id}</td>\r\n                                <td>{order.user && order.user.name}</td>\r\n                                <td>{order.createdAt.substring(0, 10)}</td>\r\n                                <td>$ {order.totalPrice}</td>\r\n                                <td>\r\n                                    {order.isPaid ? \r\n                                        (order.paidAt.substring(0, 10)) \r\n                                        :(<i className='fas fa-times'></i>)}\r\n                                </td>\r\n                                <td>\r\n                                    {order.isDelivered ? \r\n                                        (order.deliveredAt.substring(0, 10)) \r\n                                        :(<i className='fas fa-times'></i>)}\r\n                                </td>\r\n                                <td>\r\n                                    <LinkContainer to={`/order/${order._id}`}>\r\n                                        <Button variant=\"outline-dark\" className='btn-sm'><i className='fas fa-archive'></i>{' '}Details</Button>\r\n                                    </LinkContainer>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </Table>\r\n            )} \r\n        </>\r\n    )\r\n}\r\n\r\nexport default UndeliveredOrders\r\n","import React,{ useEffect } from 'react'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport { useSelector } from 'react-redux'\r\nimport UsersChart from '../../components/UsersChart'\r\nimport MonthlyOrders from '../../components/MonthlyOrders'\r\nimport UndeliveredOrders from '../../components/UndeliveredOrders'\r\n\r\nconst DashboardView = ({history}) => {\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    useEffect(()=>{\r\n        if(!userInfo || !userInfo.isAdmin){\r\n            history.push('/login')\r\n        }\r\n    },[history, userInfo])\r\n    return (\r\n        <Row className='mt-5'>\r\n            <Col md={6} xs={12}><UsersChart /></Col>\r\n            <Col md={6} xs={12}><MonthlyOrders /></Col>\r\n            <Col xs={12} className='mt-5'><UndeliveredOrders /></Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default DashboardView\r\n","import React,{ useState, useEffect } from 'react'\r\nimport { Form, Button, Row, Col, Card } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getItemspp, updateItemspp } from '../../actions/settingsAction' \r\n\r\nimport { SETTING_ITEMSPP_UPDATE_RESET } from '../../constants/settingConstants'\r\n\r\nconst Settings = ({history}) => {\r\n    const[items, setItems] = useState(10)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const settingItemspp = useSelector(state => state.settingItemspp)\r\n    const { items: itemspp } = settingItemspp\r\n\r\n    const updateSettingItemspp = useSelector(state => state.updateSettingItemspp)\r\n    const { success } = updateSettingItemspp\r\n\r\n    useEffect(()=>{\r\n        if(!userInfo || !userInfo.isAdmin){\r\n            history.push('/login')\r\n        }\r\n        if(success){\r\n            dispatch({ type: SETTING_ITEMSPP_UPDATE_RESET })\r\n            dispatch(getItemspp())\r\n        }else{\r\n            if(!itemspp || !itemspp.items){\r\n                dispatch(getItemspp())\r\n            }    \r\n            else{\r\n                setItems(itemspp.items)\r\n            }\r\n        } \r\n    },[dispatch, history, userInfo, itemspp, success])\r\n\r\n    const submitHandler = (e) =>{\r\n        e.preventDefault()\r\n        dispatch(updateItemspp({itemspp: items}))\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={{span:6, offset: 3}}>\r\n                <Card className='m-5'>\r\n                    <Card.Body>\r\n                        <h2>Settings</h2>\r\n                        <Form onSubmit={submitHandler}>\r\n                            <Form.Group controlId='name'>\r\n                                <Form.Label>Items per page:</Form.Label>\r\n                                <Form.Control type='number' placeholder='Enter number' value={items} onChange={(e) => setItems(e.target.value)}></Form.Control>\r\n                            </Form.Group>\r\n                            <Button type='submit' className='btn-dark btn-block'><i className='fas fa-save'></i>{' '}Save</Button>\r\n                        </Form>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    )\r\n} \r\n\r\nexport default Settings","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css'\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { Container, Col } from 'react-bootstrap';\nimport { useSelector}  from 'react-redux'\n\nimport Header from './components/Header';\nimport AdminSidebar from './components/AdminSidebar';\nimport Footer from './components/Footer';\nimport HomeView from './layout/HomeView';\nimport BikeStore from './layout/BikeStore';\nimport BikeView from './layout/BikeView';\nimport CartScreen from './layout/CartScreen';\nimport LoginScreen from './layout/LoginScreen';\nimport RegisterScreen from './layout/RegisterScreen'\nimport ShippingScreen from './layout/ShippingScreen'\nimport PaymentScreen from './layout/PaymentScreen'\nimport PlaceOrderScreen from './layout/PlaceOrderScreen'\nimport OrderScreen from './layout/OrderScreen'\nimport MyProfile from './layout/MyProfile'\nimport MyOrders from './layout/MyOrders'\nimport Contact from './layout/Contact'\n\nimport UserListView from './layout/admin/UserListView'\nimport UserEditView from './layout/admin/UserEditView'\nimport BikeListView from './layout/admin/BikeListView'\nimport CreateBikeView from './layout/admin/CreateBikeView'\nimport EditBikeView from './layout/admin/EditBikeView'\nimport OrderListAdminView from './layout/admin/OrderListAdminView'\nimport DashboardView from './layout/admin/DashboardView'\nimport Settings from './layout/admin/Settings'\n\n\n\nconst App = () => {\n\n  const userLogin = useSelector(state => state.userLogin)\n  const { userInfo } = userLogin\n\n  return (\n    <Router>\n    <Container fluid className='wrapper m-0 p-0'>\n        <Col className='col-auto p-0'>\n        {userInfo && userInfo.isAdmin && (\n          <AdminSidebar />)\n        }\n        </Col>\n        <Col className='p-0'>\n          <Header />\n          <main>\n            <Container className='home-container p-0' fluid>\n              <Route path=\"/\" component={HomeView} exact />\n            </Container>\n            <Container>\n              <Route path=\"/login\" component={LoginScreen} />\n              <Route path=\"/register\" component={RegisterScreen} />\n              <Route path=\"/contact\" component={Contact} />\n              <Route path=\"/shipping\" component={ShippingScreen} />\n              <Route path=\"/payment\" component={PaymentScreen} />\n              <Route path=\"/placeorder\" component={PlaceOrderScreen} />\n              <Route path=\"/order/:id\" component={OrderScreen} />\n              <Route path=\"/bikes\" component={BikeStore} exact />\n              <Route path=\"/bikes/page/:pageNumber\" component={BikeStore} exact />\n              <Route path=\"/bikes/:id\" component={BikeView} exact />\n              <Route path=\"/profile\" component={MyProfile} />\n              <Route path=\"/myorders\" component={MyOrders} exact />\n              <Route path=\"/myorders/:pageNumber\" component={MyOrders} exact />\n              <Route path=\"/admin/settings\" component={Settings} exact />\n\n              <Route path=\"/admin/dashboard\" component={DashboardView} />\n              <Route path=\"/admin/userlist\" component={UserListView} exact/>\n              <Route path=\"/admin/userlist/:pageNumber\" component={UserListView} exact/>\n              <Route path=\"/admin/bikelist\" component={BikeListView} exact />\n              <Route path=\"/admin/bikelist/:pageNumber\" component={BikeListView} exact />\n              <Route path=\"/admin/bike/create\" component={CreateBikeView} />\n              <Route path=\"/admin/bike/:id/edit\" component={EditBikeView} />\n              <Route path=\"/admin/user/:id/edit\" component={UserEditView} />\n              <Route path=\"/admin/orders\" component={OrderListAdminView} exact />\n              <Route path=\"/admin/orders/:pageNumber\" component={OrderListAdminView} exact />\n\n              <Route path=\"/cart/:id?\" component={CartScreen} />\n              <Route path=\"/search/:keyword\" component={BikeStore} exact />\n              <Route path=\"/page/:pageNumber\" component={BikeStore} exact />\n              <Route path=\"/search/:keyword/page/:pageNumber\" component={BikeStore} exact />\n            </Container>\n          </main>\n          <Footer />\n        </Col>\n\n    </Container>\n    </Router>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createStore, combineReducers, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { bikeListReducer, bikeReducer, bikeDeleteReducer, bikeCreateReducer, bikeUpdateReducer, bikeCreateReviewReducer, bikeTopRatedReducer } from './reducers/bikeReducers';\r\nimport { cartReducer } from './reducers/cartReducers';\r\nimport { userLoginReducer, userRegisterReducer, userInfoReducer, userUpdateReducer, userListReducer, userDeleteReducer,userUpdateAdminReducer } from './reducers/userReducers';\r\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, orderListMyReducer, orderListReducer, orderDeliverReducer } from './reducers/orderReducers'\r\nimport { dashboardDataReducer, dashboardOrdersDataReducer, dashboardUndeliveredReducer } from './reducers/dashboardReducers'\r\nimport { settingItemsppReducer, updateSettingItemsppReducer } from './reducers/settingsReducers'\r\n\r\nconst reducer = combineReducers({\r\n    bikeList: bikeListReducer,\r\n    bikeDetails: bikeReducer,\r\n    cart: cartReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userInfoDetails: userInfoReducer,\r\n    userUpdate: userUpdateReducer,\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderListMy: orderListMyReducer,\r\n    userList: userListReducer,\r\n    userDelete: userDeleteReducer,\r\n    userUpdateAdmin: userUpdateAdminReducer,\r\n    bikeDelete:bikeDeleteReducer,\r\n    bikeCreate:bikeCreateReducer,\r\n    bikeUpdate: bikeUpdateReducer,\r\n    orderList: orderListReducer,\r\n    orderDeliver: orderDeliverReducer,\r\n    bikeCreateReview: bikeCreateReviewReducer,\r\n    bikeTopRated: bikeTopRatedReducer,\r\n    dashboardData: dashboardDataReducer,\r\n    dashboardOrdersData: dashboardOrdersDataReducer,\r\n    settingItemspp: settingItemsppReducer,\r\n    updateSettingItemspp: updateSettingItemsppReducer,\r\n    dashboardUndelivered: dashboardUndeliveredReducer\r\n});\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {}\r\n\r\n\r\nconst initialState = {\r\n    cart: { \r\n        cartItems: cartItemsFromStorage, \r\n        shippingAddress: shippingAddressFromStorage \r\n    },\r\n    userLogin: {userInfo: userInfoFromStorage},\r\n\r\n\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    reducer, initialState, composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;","import { \r\n    BIKE_LIST_REQUEST, \r\n    BIKE_LIST_SUCCESS, \r\n    BIKE_LIST_FAIL,\r\n    BIKE_REQUEST,\r\n    BIKE_SUCCESS,\r\n    BIKE_FAIL,\r\n    BIKE_DELETE_REQUEST,\r\n    BIKE_DELETE_FAIL,\r\n    BIKE_DELETE_SUCCESS,\r\n    BIKE_CREATE_SUCCESS,\r\n    BIKE_CREATE_REQUEST,\r\n    BIKE_CREATE_FAIL,\r\n    BIKE_CREATE_RESET,\r\n    BIKE_UPDATE_REQUEST,\r\n    BIKE_UPDATE_SUCCESS,\r\n    BIKE_UPDATE_FAIL,\r\n    BIKE_UPDATE_RESET,\r\n    BIKE_CREATE_REVIEW_SUCCESS,\r\n    BIKE_CREATE_REVIEW_REQUEST,\r\n    BIKE_CREATE_REVIEW_FAIL,\r\n    TOP_BIKE_REQUEST,\r\n    TOP_BIKE_SUCCESS,\r\n    TOP_BIKE_FAIL,\r\n    BIKE_CREATE_REVIEW_RESET\r\n} from '../constants/bikeConstants';\r\n\r\nexport const bikeListReducer = (state = {bikes: []}, action)=>{\r\n    switch (action.type){\r\n        case BIKE_LIST_REQUEST:\r\n            return { loading: true, bikes: []}\r\n        case BIKE_LIST_SUCCESS:\r\n            return { loading: false, bikes: action.payload.bikes, pages: action.payload.pages, page: action.payload.page}\r\n        case BIKE_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const bikeReducer = (state = {bike: {reviews: [] } }, action)=>{\r\n    switch (action.type){\r\n        case BIKE_REQUEST:\r\n            return { loading: true, ...state}\r\n        case BIKE_SUCCESS:\r\n            return { loading: false, bike: action.payload }\r\n        case BIKE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const bikeDeleteReducer = (state = {}, action)=>{\r\n    switch (action.type){\r\n        case BIKE_DELETE_REQUEST:\r\n            return { loading: true}\r\n        case BIKE_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case BIKE_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const bikeCreateReducer = (state = {}, action)=>{\r\n    switch (action.type){\r\n        case BIKE_CREATE_REQUEST:\r\n            return { loading: true}\r\n        case BIKE_CREATE_SUCCESS:\r\n            return { loading: false, success: true, bike: action.payload }\r\n        case BIKE_CREATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case BIKE_CREATE_RESET:\r\n            return { }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const bikeUpdateReducer = (state = {bike:{}}, action)=>{\r\n    switch (action.type){\r\n        case BIKE_UPDATE_REQUEST:\r\n            return { loading: true}\r\n        case BIKE_UPDATE_SUCCESS:\r\n            return { loading: false, success: true, bike: action.payload }\r\n        case BIKE_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case BIKE_UPDATE_RESET:\r\n            return { bike: {} }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const bikeCreateReviewReducer = (state = {}, action)=>{\r\n    switch (action.type){\r\n        case BIKE_CREATE_REVIEW_REQUEST:\r\n            return { loading: true}\r\n        case BIKE_CREATE_REVIEW_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case BIKE_CREATE_REVIEW_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case BIKE_CREATE_REVIEW_RESET:\r\n            return { }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const bikeTopRatedReducer = (state = { topbikes: [] }, action)=>{\r\n    switch (action.type){\r\n        case TOP_BIKE_REQUEST:\r\n            return { loading: true, topbikes: []}\r\n        case TOP_BIKE_SUCCESS:\r\n            return { loading: false, topbikes: action.payload }\r\n        case TOP_BIKE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import { \r\n    CART_ADD_ITEM, \r\n    CART_REMOVE_ITEM, \r\n    CART_SAVE_SHIPPING_ADDRESS, \r\n    CART_SAVE_PAYMENT_METHOD,\r\n    CART_REMOVE_ALL_ITEMS\r\n} from '../constants/cartConstants';\r\n\r\nexport const cartReducer = (state = {cartItems: [], shippingAddress: {}}, action) =>{\r\n    switch(action.type){\r\n        case CART_ADD_ITEM:\r\n            const item = action.payload;\r\n            const existItems = state.cartItems.find(x => x.bikeId === item.bikeId)\r\n            if(existItems){\r\n                return{\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(x => x.bikeId === existItems.bikeId ? item : x)\r\n                }\r\n            }else{\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item]\r\n                }\r\n            }\r\n        case CART_REMOVE_ITEM:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter(x => x.bikeId !== action.payload)\r\n            }\r\n        case CART_SAVE_SHIPPING_ADDRESS:\r\n            return {\r\n                ...state,\r\n                shippingAddress: action.payload\r\n            }\r\n        case CART_SAVE_PAYMENT_METHOD:\r\n            return {\r\n                ...state,\r\n                paymentMethod: action.payload\r\n            }\r\n        case CART_REMOVE_ALL_ITEMS:{\r\n            return{\r\n                cartItems: [],\r\n                shippingAddress: {}\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { \r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGOUT,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_FAIL,\r\n    USER_INFO_REQUEST,\r\n    USER_INFO_SUCCESS,\r\n    USER_INFO_FAIL,\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n    USER_INFO_RESET,\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n    USER_UPDATE_ADMIN_RESET,\r\n    USER_UPDATE_ADMIN_FAIL,\r\n    USER_UPDATE_ADMIN_SUCCESS,\r\n    USER_UPDATE_ADMIN_REQUEST\r\n} from '../constants/userConstants';\r\n\r\nexport const userLoginReducer = (state = { }, action)=>{\r\n    switch (action.type){\r\n        case USER_LOGIN_REQUEST:\r\n            return { loading: true}\r\n        case USER_LOGIN_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n        case USER_LOGIN_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_LOGOUT:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//User Regiser\r\nexport const userRegisterReducer = (state = { }, action)=>{\r\n    switch(action.type){\r\n        case USER_REGISTER_REQUEST:\r\n            return { loading: true }\r\n        case USER_REGISTER_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n        case USER_REGISTER_FAIL:\r\n            return { loading: false, error: action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//User Info\r\nexport const userInfoReducer = (state = { user:{} }, action)=>{\r\n    switch(action.type){\r\n        case USER_INFO_REQUEST:\r\n            return { ...state, loading: true }\r\n        case USER_INFO_SUCCESS:\r\n            return { loading: false, user: action.payload }\r\n        case USER_INFO_FAIL:\r\n            return { loading: false, error: action.payload}\r\n        case USER_INFO_RESET:\r\n            return { user: {}}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//User update\r\nexport const userUpdateReducer = (state = { }, action)=>{\r\n    switch(action.type){\r\n        case USER_UPDATE_REQUEST:\r\n            return { loading: true }\r\n        case USER_UPDATE_SUCCESS:\r\n            return { loading: false, success: true, userInfo: action.payload }\r\n        case USER_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//User list\r\nexport const userListReducer = (state = { users: [] }, action)=>{\r\n    switch(action.type){\r\n        case USER_LIST_REQUEST:\r\n            return { loading: true }\r\n        case USER_LIST_SUCCESS:\r\n            return { \r\n                loading: false, users: action.payload.users, pages: action.payload.pages, page: action.payload.page\r\n            }\r\n        case USER_LIST_FAIL:\r\n            return { loading: false, error: action.payload}\r\n        case USER_LIST_RESET:\r\n            return { users: []}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//User delete\r\nexport const userDeleteReducer = (state = { }, action)=>{\r\n    switch(action.type){\r\n        case USER_DELETE_REQUEST:\r\n            return { loading: true }\r\n        case USER_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case USER_DELETE_FAIL:\r\n            return { loading: false, error: action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//User update /Admin\r\nexport const userUpdateAdminReducer = (state = { user: {} }, action)=>{\r\n    switch(action.type){\r\n        case USER_UPDATE_ADMIN_REQUEST:\r\n            return { loading: true }\r\n        case USER_UPDATE_ADMIN_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case USER_UPDATE_ADMIN_FAIL:\r\n            return { loading: false, error: action.payload}\r\n        case USER_UPDATE_ADMIN_RESET:\r\n            return { user: {}}\r\n        default:\r\n            return state\r\n    }\r\n}","import { \r\n    ORDER_CREATE_REQUEST, \r\n    ORDER_CREATE_SUCCESS, \r\n    ORDER_CREATE_FAIL,\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n    ORDER_PAY_REQUEST,\r\n    ORDER_PAY_SUCCESS,\r\n    ORDER_PAY_FAIL,\r\n    ORDER_PAY_RESET,\r\n    ORDER_LIST_MY_REQUEST,\r\n    ORDER_LIST_MY_SUCCESS,\r\n    ORDER_LIST_MY_FAIL,\r\n    ORDER_LIST_MY_RESET,\r\n    ORDER_LIST_REQUEST,\r\n    ORDER_LIST_SUCCESS,\r\n    ORDER_LIST_FAIL,\r\n    ORDER_DELIVER_RESET,\r\n    ORDER_DELIVER_FAIL,\r\n    ORDER_DELIVER_SUCCESS,\r\n    ORDER_DELIVER_REQUEST,\r\n} from '../constants/orderConstants'\r\n\r\nexport const orderCreateReducer = ( state ={}, action) =>{\r\n    switch(action.type){\r\n        case ORDER_CREATE_REQUEST:\r\n            return{\r\n                loading: true\r\n            }\r\n        case ORDER_CREATE_SUCCESS:\r\n            return{\r\n                loading: false,\r\n                success: true,\r\n                order: action.payload\r\n            }\r\n        case ORDER_CREATE_FAIL:\r\n            return{\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderDetailsReducer = ( state ={ loading: true, orderItems: [], shippingAddress: {}}, action) =>{\r\n    switch(action.type){\r\n        case ORDER_DETAILS_REQUEST:\r\n            return{\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case ORDER_DETAILS_SUCCESS:\r\n            return{\r\n                loading: false,\r\n                order: action.payload\r\n            }\r\n        case ORDER_DETAILS_FAIL:\r\n            return{\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderPayReducer = ( state ={ }, action) =>{\r\n    switch(action.type){\r\n        case ORDER_PAY_REQUEST:\r\n            return{\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case ORDER_PAY_SUCCESS:\r\n            return{\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case ORDER_PAY_FAIL:\r\n            return{\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case ORDER_PAY_RESET:\r\n            return{\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderListMyReducer = ( state ={ orders: [] }, action) =>{\r\n    switch(action.type){\r\n        case ORDER_LIST_MY_REQUEST:\r\n            return{\r\n                loading: true\r\n            }\r\n        case ORDER_LIST_MY_SUCCESS:\r\n            return{\r\n                loading: false,\r\n                orders: action.payload.orders, pages: action.payload.pages, page: action.payload.page\r\n            }\r\n        case ORDER_LIST_MY_FAIL:\r\n            return{\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case ORDER_LIST_MY_RESET:\r\n            return{\r\n                orders: []\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderListReducer = ( state ={ orders: [] }, action) =>{ \r\n    switch(action.type){\r\n        case ORDER_LIST_REQUEST:\r\n            return{\r\n                loading: true,\r\n                orders: []\r\n            }\r\n        case ORDER_LIST_SUCCESS:\r\n            return{\r\n                loading: false,\r\n                orders: action.payload.orders, pages: action.payload.pages, page: action.payload.page\r\n            }\r\n        case ORDER_LIST_FAIL:\r\n            return{\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const orderDeliverReducer = ( state ={ }, action) =>{\r\n    switch(action.type){\r\n        case ORDER_DELIVER_REQUEST:\r\n            return{\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case ORDER_DELIVER_SUCCESS:\r\n            return{\r\n                loading: false,\r\n                success: true\r\n            }\r\n        case ORDER_DELIVER_FAIL:\r\n            return{\r\n                loading: false,\r\n                error: action.payload\r\n            }\r\n        case ORDER_DELIVER_RESET:\r\n            return{\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { \r\n    DASHBOARD_USERSDATA_REQUEST,\r\n    DASHBOARD_USERSDATA_SUCCESS,\r\n    DASHBOARD_USERSDATA_FAIL,\r\n    DASHBOARD_ORDERDATA_REQUEST,\r\n    DASHBOARD_ORDERDATA_SUCCESS,\r\n    DASHBOARD_ORDERDATA_FAIL,\r\n    DASHBOARD_UNDELIVERED_REQUEST,\r\n    DASHBOARD_UNDELIVERED_SUCCESS,\r\n    DASHBOARD_UNDELIVERED_FAIL\r\n} from '../constants/dashboardConstatns';\r\n\r\n\r\nexport const dashboardDataReducer = (state = {usersdata: []}, action)=>{\r\n    switch(action.type){\r\n        case DASHBOARD_USERSDATA_REQUEST:\r\n            return { loading: true }\r\n        case DASHBOARD_USERSDATA_SUCCESS:\r\n            return { loading: false, usersdata: action.payload }\r\n        case DASHBOARD_USERSDATA_FAIL:\r\n            return { loading: false, error: action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const dashboardOrdersDataReducer = (state = {ordersdata: []}, action)=>{\r\n    switch(action.type){\r\n        case DASHBOARD_ORDERDATA_REQUEST:\r\n            return { loading: true }\r\n        case DASHBOARD_ORDERDATA_SUCCESS:\r\n            return { loading: false, ordersdata: action.payload }\r\n        case DASHBOARD_ORDERDATA_FAIL:\r\n            return { loading: false, error: action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const dashboardUndeliveredReducer = (state = {undelivered: []}, action)=>{\r\n    switch(action.type){\r\n        case DASHBOARD_UNDELIVERED_REQUEST:\r\n            return { loading: true }\r\n        case DASHBOARD_UNDELIVERED_SUCCESS:\r\n            return { loading: false, undelivered: action.payload }\r\n        case DASHBOARD_UNDELIVERED_FAIL:\r\n            return { loading: false, error: action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}","import { \r\n    SETTING_ITEMSPP_REQUEST,\r\n    SETTING_ITEMSPP_SUCCESS,\r\n    SETTING_ITEMSPP_FAIL,\r\n    SETTING_ITEMSPP_UPDATE_REQUEST,\r\n    SETTING_ITEMSPP_UPDATE_SUCCESS,\r\n    SETTING_ITEMSPP_UPDATE_FAIL,\r\n    SETTING_ITEMSPP_UPDATE_RESET\r\n} from '../constants/settingConstants';\r\n\r\n//Items Per Page Reducer\r\nexport const settingItemsppReducer = (state = { items:{} }, action)=>{\r\n    switch(action.type){\r\n        case SETTING_ITEMSPP_REQUEST:\r\n            return { loading: true }\r\n        case SETTING_ITEMSPP_SUCCESS:\r\n            return { loading: false, items: action.payload }\r\n        case SETTING_ITEMSPP_FAIL:\r\n            return { loading: false, error: action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//Items Per Page Update Reducer\r\nexport const updateSettingItemsppReducer = (state = { }, action)=>{\r\n    switch(action.type){\r\n        case SETTING_ITEMSPP_UPDATE_REQUEST:\r\n            return { loading: true }\r\n        case SETTING_ITEMSPP_UPDATE_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case SETTING_ITEMSPP_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload}\r\n        case SETTING_ITEMSPP_UPDATE_RESET:\r\n            return { }\r\n        default:\r\n            return state\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}