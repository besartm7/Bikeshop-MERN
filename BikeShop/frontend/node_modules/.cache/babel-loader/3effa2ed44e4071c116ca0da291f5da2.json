{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\realmadrid\\\\Desktop\\\\BikeShop-2\\\\BikeShop\\\\frontend\\\\src\\\\components\\\\UsersChart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Polar } from 'react-chartjs-2';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getDashboardUsersData } from '../actions/dashboardAction';\n\nconst UsersChart = () => {\n  _s();\n\n  const labelsArray = ['Total', 'Admins', 'Users', 'New'];\n  const colors = ['#CA5C00', '#E58943', '#F1B166', '#F1D1A2', '#FCE4D8', '#EBD3C2'];\n  const dispatch = useDispatch();\n  const dashboardData = useSelector(state => state.dashboardData);\n  const {\n    loading,\n    error,\n    usersdata\n  } = dashboardData;\n  useEffect(() => {\n    dispatch(getDashboardUsersData()); // eslint-disable-next-line \n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: \"Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(Polar, {\n      data: {\n        labels: labelsArray,\n        datasets: [{\n          label: '# of Votes',\n          data: usersdata,\n          backgroundColor: colors,\n          borderColor: colors,\n          borderWidth: 1\n        }]\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(UsersChart, \"CLKogDymZjYA1QYmjOWWyk0FNho=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = UsersChart;\nexport default UsersChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"UsersChart\");","map":{"version":3,"sources":["C:/Users/realmadrid/Desktop/BikeShop-2/BikeShop/frontend/src/components/UsersChart.js"],"names":["React","useState","useEffect","Polar","Message","Loader","useDispatch","useSelector","getDashboardUsersData","UsersChart","labelsArray","colors","dispatch","dashboardData","state","loading","error","usersdata","labels","datasets","label","data","backgroundColor","borderColor","borderWidth"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAwBC,SAAxB,QAAwC,OAAxC;AACA,SAASC,KAAT,QAAsB,iBAAtB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,qBAAT,QAAsC,4BAAtC;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAMC,WAAW,GAAG,CAAC,OAAD,EAAU,QAAV,EAAoB,OAApB,EAA6B,KAA7B,CAApB;AACA,QAAMC,MAAM,GAAG,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAiC,SAAjC,EAA2C,SAA3C,EAAqD,SAArD,CAAf;AACA,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AAEE,QAAMO,aAAa,GAAGN,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACD,aAAhB,CAAjC;AACA,QAAM;AAAEE,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA+BJ,aAArC;AAGAX,EAAAA,SAAS,CAAC,MAAI;AACVU,IAAAA,QAAQ,CAACJ,qBAAqB,EAAtB,CAAR,CADU,CAEV;AACH,GAHQ,EAGP,CAACI,QAAD,CAHO,CAAT;AAKF,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,6BACE;AAAI,QAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,EAIIG,OAAO,gBAAK,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAAL,gBAGP,QAAC,KAAD;AAAO,MAAA,IAAI,EAAE;AACXG,QAAAA,MAAM,EAAER,WADG;AAEXS,QAAAA,QAAQ,EAAE,CACR;AACEC,UAAAA,KAAK,EAAE,YADT;AAEEC,UAAAA,IAAI,EAAEJ,SAFR;AAGEK,UAAAA,eAAe,EAAEX,MAHnB;AAIEY,UAAAA,WAAW,EAAEZ,MAJf;AAKEa,UAAAA,WAAW,EAAE;AALf,SADQ;AAFC;AAAb;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA,kBADF;AAuBD,CArCD;;GAAMf,U;UAGaH,W,EAEOC,W;;;KALpBE,U;AAuCN,eAAeA,UAAf","sourcesContent":["import React,{useState, useEffect} from 'react'\r\nimport { Polar } from 'react-chartjs-2'\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getDashboardUsersData } from '../actions/dashboardAction'\r\n\r\nconst UsersChart = () => {\r\n  const labelsArray = ['Total', 'Admins', 'Users', 'New']\r\n  const colors = ['#CA5C00', '#E58943', '#F1B166','#F1D1A2','#FCE4D8','#EBD3C2']\r\n  const dispatch = useDispatch();\r\n\r\n    const dashboardData = useSelector(state => state.dashboardData)\r\n    const { loading, error, usersdata} = dashboardData\r\n    \r\n\r\n    useEffect(()=>{\r\n        dispatch(getDashboardUsersData())\r\n        // eslint-disable-next-line \r\n    },[dispatch])\r\n\r\n  return(\r\n    <>\r\n      <div className='header'>\r\n        <h1 className='title'>Users</h1>\r\n      </div>\r\n      { loading ? ( <Loader />) :(\r\n        \r\n      \r\n        <Polar data={{ \r\n          labels: labelsArray,\r\n          datasets: [\r\n            {\r\n              label: '# of Votes',\r\n              data: usersdata,\r\n              backgroundColor: colors,\r\n              borderColor: colors,\r\n              borderWidth: 1,\r\n            },\r\n          ],\r\n        }} />\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UsersChart\r\n\r\n"]},"metadata":{},"sourceType":"module"}