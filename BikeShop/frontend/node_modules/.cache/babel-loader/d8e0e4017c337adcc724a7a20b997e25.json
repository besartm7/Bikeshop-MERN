{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\realmadrid\\\\Desktop\\\\BikeShop-2\\\\BikeShop\\\\frontend\\\\src\\\\layout\\\\EditBikeView.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Form, Button, Card, Image, Row, Col } from 'react-bootstrap';\nimport FormLargeContainer from '../components/FormLargeContainer';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport ExtractBikeColor from '../components/ExtractBikeColor';\nimport { ColorExtractor } from 'react-color-extractor';\nimport { deleteBike, detailsBike, updateBike } from '../actions/bikeAction';\nimport { BIKE_UPDATE_RESET } from '../constants/bikeConstants';\n\nconst EditBikeView = ({\n  match,\n  history\n}) => {\n  _s();\n\n  const bikeId = match.params.id;\n  const [image, setImage] = useState('');\n  const defaultImg = '/images/default.jpg';\n  const [name, setName] = useState('');\n  const [brand, setBrand] = useState('');\n  const [category, setCategory] = useState('');\n  const [price, setPrice] = useState(0);\n  const [countInStock, setCountInStock] = useState(0);\n  const [colors, setColors] = useState([]);\n  const [description, setDescription] = useState('');\n  const [uploading, setUploading] = useState(false);\n  const [newUpload, setNewUpload] = useState(false);\n  const [fileUpload, setFileUpload] = useState('');\n  const dispatch = useDispatch();\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  const bikeDetails = useSelector(state => state.bikeDetails);\n  const {\n    loading,\n    error,\n    bike\n  } = bikeDetails;\n  const bikeUpdate = useSelector(state => state.bikeUpdate);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate\n  } = bikeUpdate;\n  useEffect(() => {\n    if (!userInfo || !userInfo.isAdmin) {\n      history.push('/login');\n    } else {\n      if (successUpdate) {\n        dispatch({\n          type: BIKE_UPDATE_RESET\n        });\n        dispatch(detailsBike(bikeId));\n      } else {\n        if (bike && bike._id !== bikeId) {\n          dispatch(detailsBike(bikeId));\n        } else {\n          setImage(bike.image);\n          setName(bike.name);\n          setBrand(bike.brand);\n          setCategory(bike.category);\n          setPrice(bike.price);\n          setCountInStock(bike.countInStock);\n          setDescription(bike.description);\n          setColors(bike.colors);\n        }\n      }\n    }\n  }, [dispatch, history, bikeId, successUpdate, bike, userInfo]);\n\n  const deleteHandler = id => {\n    if (window.confirm('Are you sure?')) {\n      dispatch(deleteBike(id));\n      history.push('/admin/bikelist');\n    }\n  };\n\n  const uploadFileHandler = async e => {\n    const file = e.target.files[0];\n    setFileUpload(file);\n    const formData = new FormData();\n    formData.append('image', file);\n    setUploading(true);\n\n    try {\n      const config = {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      };\n      const {\n        data\n      } = await axios.post('/api/upload', formData, config);\n      setImage(data);\n      setUploading(false);\n      setNewUpload(true);\n    } catch (error) {\n      console.error(error);\n      setUploading(false);\n    }\n  };\n\n  const removeColorHandler = e => {\n    const filteredColors = colors.filter(color => color !== e);\n    setColors(filteredColors);\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(updateBike({\n      _id: bikeId,\n      image,\n      name,\n      brand,\n      category,\n      price,\n      countInStock,\n      description,\n      colors\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormLargeContainer, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-center mb-5\",\n          children: [\"Edit Bike \", /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-bicycle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 64\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this), loadingUpdate && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 39\n        }, this), errorUpdate && /*#__PURE__*/_jsxDEV(Message, {\n          variant: \"danger\",\n          children: errorUpdate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 37\n        }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 32\n        }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n          variant: \"danger\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 53\n        }, this) : /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: submitHandler,\n          className: \"col-sm-12\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Row,\n            controlId: \"image\",\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              xs: 12,\n              md: 3,\n              children: /*#__PURE__*/_jsxDEV(Image, {\n                src: fileUpload ? URL.createObjectURL(fileUpload) : `${bike.image}` ? `${bike.image}` : defaultImg,\n                alt: bike.name,\n                style: {\n                  width: 100\n                },\n                thumbnail: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              xs: 12,\n              md: 9,\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Upload bike image:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.File, {\n                id: \"image-file\",\n                label: image ? image : 'Choose File',\n                custom: true,\n                onChange: uploadFileHandler,\n                children: uploading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 48\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Row,\n            controlId: \"colors\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              column: true,\n              xs: 12,\n              md: 3,\n              children: \"Colors:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              xs: 12,\n              md: 9,\n              className: \"editbike-colors\",\n              children: [/*#__PURE__*/_jsxDEV(ColorExtractor, {\n                src: newUpload ? URL.createObjectURL(fileUpload) : `${bike.image}` ? `${bike.image}` : null,\n                getColors: colorsArray => {\n                  if (newUpload) {\n                    setColors(colorsArray);\n                    setNewUpload(false);\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(ExtractBikeColor, {\n                bikeColors: colors || [],\n                removeColorHandler: removeColorHandler\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Row,\n            controlId: \"name\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              column: true,\n              xs: 12,\n              md: 3,\n              children: \"Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              xs: 12,\n              md: 9,\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                placeholder: \"name\",\n                value: name,\n                onChange: e => setName(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Row,\n            controlId: \"brand\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              column: true,\n              xs: 12,\n              md: 3,\n              children: \"Brand:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              xs: 12,\n              md: 9,\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                placeholder: \"brand\",\n                value: brand,\n                onChange: e => setBrand(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Row,\n            controlId: \"category\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              column: true,\n              xs: 12,\n              md: 3,\n              children: \"Category:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              xs: 12,\n              md: 9,\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                placeholder: \"category\",\n                value: category,\n                onChange: e => setCategory(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Row,\n            controlId: \"price\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              column: true,\n              xs: 12,\n              md: 3,\n              children: \"Price:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              xs: 12,\n              md: 9,\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"number\",\n                placeholder: \"price\",\n                value: price,\n                onChange: e => setPrice(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Row,\n            controlId: \"countInStock\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              column: true,\n              xs: 12,\n              md: 3,\n              children: \"Count in Stock:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              xs: 12,\n              md: 9,\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"number\",\n                placeholder: \"count in stock\",\n                value: countInStock,\n                onChange: e => setCountInStock(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Row,\n            controlId: \"Description\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              column: true,\n              xs: 12,\n              md: 3,\n              children: \"Description:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              xs: 12,\n              md: 9,\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                as: \"textarea\",\n                rows: 3,\n                placeholder: \"description\",\n                value: description,\n                onChange: e => setDescription(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            className: \"mt-5\",\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              xs: 6,\n              className: \"text-right\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                variant: \"outline-primary\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-edit\",\n                  children: \" \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 37\n                }, this), \"Update\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              xs: 6,\n              className: \"text-left\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outline-danger\",\n                onClick: () => deleteHandler(bike._id),\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-trash\",\n                  children: \" \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 37\n                }, this), \" Delete\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EditBikeView, \"IFbellYpl0eEjJ3kjDmtXyKSVlc=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = EditBikeView;\nexport default EditBikeView;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditBikeView\");","map":{"version":3,"sources":["C:/Users/realmadrid/Desktop/BikeShop-2/BikeShop/frontend/src/layout/EditBikeView.js"],"names":["React","useEffect","useState","axios","useDispatch","useSelector","Form","Button","Card","Image","Row","Col","FormLargeContainer","Message","Loader","ExtractBikeColor","ColorExtractor","deleteBike","detailsBike","updateBike","BIKE_UPDATE_RESET","EditBikeView","match","history","bikeId","params","id","image","setImage","defaultImg","name","setName","brand","setBrand","category","setCategory","price","setPrice","countInStock","setCountInStock","colors","setColors","description","setDescription","uploading","setUploading","newUpload","setNewUpload","fileUpload","setFileUpload","dispatch","userLogin","state","userInfo","bikeDetails","loading","error","bike","bikeUpdate","loadingUpdate","errorUpdate","success","successUpdate","isAdmin","push","type","_id","deleteHandler","window","confirm","uploadFileHandler","e","file","target","files","formData","FormData","append","config","headers","data","post","console","removeColorHandler","filteredColors","filter","color","submitHandler","preventDefault","URL","createObjectURL","width","colorsArray","value"],"mappings":"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","sourcesContent":["import React,{ useEffect, useState} from 'react'\r\nimport axios from 'axios'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Form, Button, Card, Image, Row, Col} from 'react-bootstrap'\r\nimport FormLargeContainer from '../components/FormLargeContainer'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport ExtractBikeColor from '../components/ExtractBikeColor'\r\nimport { ColorExtractor } from 'react-color-extractor'\r\nimport { deleteBike, detailsBike, updateBike } from '../actions/bikeAction'\r\nimport { BIKE_UPDATE_RESET } from '../constants/bikeConstants'\r\n\r\nconst EditBikeView = ({match, history}) => {\r\n    const bikeId = match.params.id\r\n\r\n    const[image, setImage] = useState('')\r\n    const defaultImg = '/images/default.jpg'\r\n    const[name, setName] = useState('')\r\n    const[brand, setBrand] = useState('')\r\n    const[category, setCategory] = useState('')\r\n    const[price, setPrice] = useState(0)\r\n    const[countInStock, setCountInStock] = useState(0)\r\n    const[colors, setColors] = useState([])\r\n    const[description, setDescription] = useState('')\r\n    const[uploading, setUploading] = useState(false)\r\n    const[newUpload, setNewUpload] = useState(false)\r\n    const[fileUpload, setFileUpload] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n    \r\n    const bikeDetails = useSelector(state => state.bikeDetails)\r\n    const {loading, error, bike} = bikeDetails\r\n\r\n    const bikeUpdate = useSelector(state => state.bikeUpdate)\r\n    const {loading: loadingUpdate, error: errorUpdate, success: successUpdate} = bikeUpdate\r\n\r\n\r\n    useEffect(()=>{\r\n        if(!userInfo || !userInfo.isAdmin){\r\n            history.push('/login')\r\n        }else{\r\n            if(successUpdate){\r\n                dispatch({ type: BIKE_UPDATE_RESET })\r\n                dispatch(detailsBike(bikeId))\r\n            }else{\r\n                if(bike && bike._id !== bikeId){\r\n                    dispatch(detailsBike(bikeId))\r\n                }else{\r\n                    setImage(bike.image)\r\n                    setName(bike.name)\r\n                    setBrand(bike.brand)\r\n                    setCategory(bike.category)\r\n                    setPrice(bike.price)\r\n                    setCountInStock(bike.countInStock)\r\n                    setDescription(bike.description)\r\n                    setColors(bike.colors)\r\n                }\r\n            }\r\n        }  \r\n    },[dispatch, history, bikeId, successUpdate, bike, userInfo])\r\n\r\n    const deleteHandler = (id) =>{\r\n        if(window.confirm('Are you sure?')){\r\n            dispatch(deleteBike(id))\r\n            history.push('/admin/bikelist')\r\n        }\r\n    }\r\n\r\n    const uploadFileHandler = async (e) =>{\r\n        const file= e.target.files[0]\r\n        setFileUpload(file)\r\n        const formData = new FormData()\r\n        formData.append('image', file)\r\n        setUploading(true)\r\n\r\n        try {\r\n            const config = {\r\n                headers:{\r\n                    'Content-Type': 'multipart/form-data'\r\n                } \r\n            }\r\n            const { data } = await axios.post('/api/upload', formData, config)\r\n\r\n            setImage(data)\r\n            setUploading(false)\r\n            setNewUpload(true)\r\n        } catch (error) {\r\n            console.error(error)\r\n            setUploading(false)\r\n        }\r\n    }\r\n\r\n    const removeColorHandler = (e) =>{\r\n        const filteredColors = colors.filter(color => color !== e)\r\n        setColors(filteredColors)\r\n    }\r\n\r\n    const submitHandler = (e)=>{\r\n        e.preventDefault()\r\n        dispatch(updateBike({\r\n            _id: bikeId,\r\n            image,\r\n            name,\r\n            brand, \r\n            category,\r\n            price,\r\n            countInStock,\r\n            description,\r\n            colors\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <FormLargeContainer>\r\n            <Card>\r\n                <Card.Body>\r\n                    <h3 className='text-center mb-5'>Edit Bike <i className='fas fa-bicycle'></i></h3>\r\n                    {loadingUpdate && <Loader />}\r\n                    {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n                    {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> :(\r\n                    <Form onSubmit={submitHandler} className='col-sm-12'>\r\n                        <Form.Group as={Row} controlId='image'>\r\n                            <Col xs={12} md={3}>\r\n                                <Image \r\n                                    src={fileUpload \r\n                                            ? URL.createObjectURL(fileUpload) \r\n                                            : `${bike.image}`\r\n                                            ? `${bike.image}` \r\n                                            : defaultImg\r\n                                        } \r\n                                    alt={bike.name} \r\n                                    style={{width: 100}} \r\n                                    thumbnail\r\n                                        \r\n                                />\r\n                            </Col>\r\n                            <Col xs={12} md={9}>\r\n                                <Form.Label>Upload bike image:</Form.Label> \r\n                                <Form.File \r\n                                    id='image-file' \r\n                                    label={image ? image : 'Choose File'} \r\n                                    custom \r\n                                    onChange={uploadFileHandler}\r\n                                >{uploading && <Loader />}</Form.File>\r\n                            </Col>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Row} controlId='colors'>\r\n                            <Form.Label column xs={12} md={3}>Colors:</Form.Label>\r\n                            <Col xs={12} md={9} className='editbike-colors'>\r\n                                \r\n                                <ColorExtractor\r\n                                    src={newUpload \r\n                                        ? URL.createObjectURL(fileUpload) \r\n                                        : `${bike.image}`\r\n                                        ? `${bike.image}` \r\n                                        : null\r\n                                    } \r\n                                    getColors={colorsArray => {\r\n                                        if(newUpload){\r\n                                            setColors(colorsArray)\r\n                                            setNewUpload(false)\r\n                                        }\r\n                                            \r\n                                    }}\r\n                                />\r\n                                <ExtractBikeColor bikeColors={colors || []} removeColorHandler={removeColorHandler} />\r\n                            </Col>\r\n                        </Form.Group>\r\n                        <Form.Group as={Row} controlId='name'>\r\n                            <Form.Label column xs={12} md={3}>Name:</Form.Label>\r\n                            <Col xs={12} md={9}>\r\n                                <Form.Control\r\n                                    type='text' \r\n                                    placeholder='name' \r\n                                    value={name} \r\n                                    onChange={(e) => setName(e.target.value)}\r\n                                >    \r\n                                </Form.Control>\r\n                            </Col>\r\n                        </Form.Group>\r\n                        <Form.Group as={Row} controlId='brand'>\r\n                            <Form.Label column xs={12} md={3}>Brand:</Form.Label>\r\n                            <Col xs={12} md={9}>\r\n                                <Form.Control \r\n                                    type='text' \r\n                                    placeholder='brand' \r\n                                    value={brand} \r\n                                    onChange={(e) => setBrand(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Col>\r\n                        </Form.Group>\r\n                        <Form.Group as={Row} controlId='category'>\r\n                            <Form.Label column xs={12} md={3}>Category:</Form.Label>\r\n                            <Col xs={12} md={9}>\r\n                                <Form.Control \r\n                                    type='text' \r\n                                    placeholder='category' \r\n                                    value={category} \r\n                                    onChange={(e) => setCategory(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Col>\r\n                        </Form.Group>\r\n                        <Form.Group as={Row} controlId='price'>\r\n                            <Form.Label column xs={12} md={3}>Price:</Form.Label>\r\n                            <Col xs={12} md={9}>\r\n                                <Form.Control \r\n                                    type='number' \r\n                                    placeholder='price' \r\n                                    value={price} \r\n                                    onChange={(e) => setPrice(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Col>\r\n                        </Form.Group>\r\n                        <Form.Group as={Row} controlId='countInStock'>\r\n                            <Form.Label column xs={12} md={3}>Count in Stock:</Form.Label>\r\n                            <Col xs={12} md={9}>\r\n                                <Form.Control \r\n                                    type='number' \r\n                                    placeholder='count in stock' \r\n                                    value={countInStock} \r\n                                    onChange={(e) => setCountInStock(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Col>\r\n                        </Form.Group>\r\n                        <Form.Group as={Row} controlId='Description'>\r\n                            <Form.Label column xs={12} md={3}>Description:</Form.Label>\r\n                            <Col xs={12} md={9}>\r\n                                <Form.Control \r\n                                    as='textarea'\r\n                                    rows={3}\r\n                                    placeholder='description' \r\n                                    value={description} \r\n                                    onChange={(e) => setDescription(e.target.value)}\r\n                                ></Form.Control>\r\n                            </Col>\r\n                        </Form.Group>\r\n                        <Row className='mt-5'>\r\n                            <Col xs={6} className=\"text-right\">\r\n                                <Button type='submit' variant='outline-primary'>\r\n                                    <i className='fas fa-edit'> </i> \r\n                                    Update\r\n                                </Button>\r\n                            </Col>\r\n                            <Col xs={6} className=\"text-left\">\r\n                                <Button variant='outline-danger' onClick={() => deleteHandler(bike._id)}>\r\n                                    <i className='fas fa-trash'> </i> Delete\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                    )}\r\n                </Card.Body>\r\n            </Card>\r\n        </FormLargeContainer>\r\n    )\r\n}\r\n\r\nexport default EditBikeView\r\n"]},"metadata":{},"sourceType":"module"}