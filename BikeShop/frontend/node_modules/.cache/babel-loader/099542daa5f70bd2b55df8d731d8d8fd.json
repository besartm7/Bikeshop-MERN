{"ast":null,"code":"import{createStore,combineReducers,applyMiddleware}from'redux';import thunk from'redux-thunk';import{composeWithDevTools}from'redux-devtools-extension';import{bikeListReducer,bikeReducer,bikeDeleteReducer,bikeCreateReducer,bikeUpdateReducer,bikeCreateReviewReducer,bikeTopRatedReducer}from'./reducers/bikeReducers';import{cartReducer}from'./reducers/cartReducers';import{userLoginReducer,userRegisterReducer,userInfoReducer,userUpdateReducer,userListReducer,userDeleteReducer,userUpdateAdminReducer}from'./reducers/userReducers';import{orderCreateReducer,orderDetailsReducer,orderPayReducer,orderListMyReducer,orderListReducer,orderDeliverReducer}from'./reducers/orderReducers';import{dashboardDataReducer,dashboardOrdersDataReducer,dashboardUndeliveredReducer}from'./reducers/dashboardReducers';import{settingItemsppReducer,updateSettingItemsppReducer}from'./reducers/settingsReducers';var reducer=combineReducers({bikeList:bikeListReducer,bikeDetails:bikeReducer,cart:cartReducer,userLogin:userLoginReducer,userRegister:userRegisterReducer,userInfoDetails:userInfoReducer,userUpdate:userUpdateReducer,orderCreate:orderCreateReducer,orderDetails:orderDetailsReducer,orderPay:orderPayReducer,orderListMy:orderListMyReducer,userList:userListReducer,userDelete:userDeleteReducer,userUpdateAdmin:userUpdateAdminReducer,bikeDelete:bikeDeleteReducer,bikeCreate:bikeCreateReducer,bikeUpdate:bikeUpdateReducer,orderList:orderListReducer,orderDeliver:orderDeliverReducer,bikeCreateReview:bikeCreateReviewReducer,bikeTopRated:bikeTopRatedReducer,dashboardData:dashboardDataReducer,dashboardOrdersData:dashboardOrdersDataReducer,settingItemspp:settingItemsppReducer,updateSettingItemspp:updateSettingItemsppReducer,dashboardUndelivered:dashboardUndeliveredReducer});var cartItemsFromStorage=localStorage.getItem('cartItems')?JSON.parse(localStorage.getItem('cartItems')):[];var userInfoFromStorage=localStorage.getItem('userInfo')?JSON.parse(localStorage.getItem('userInfo')):null;var shippingAddressFromStorage=localStorage.getItem('shippingAddress')?JSON.parse(localStorage.getItem('shippingAddress')):{};var initialState={cart:{cartItems:cartItemsFromStorage,shippingAddress:shippingAddressFromStorage},userLogin:{userInfo:userInfoFromStorage}};var middleware=[thunk];var store=createStore(reducer,initialState,composeWithDevTools(applyMiddleware.apply(void 0,middleware)));export default store;","map":{"version":3,"sources":["C:/Users/realmadrid/Desktop/BikeShop/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","bikeListReducer","bikeReducer","bikeDeleteReducer","bikeCreateReducer","bikeUpdateReducer","bikeCreateReviewReducer","bikeTopRatedReducer","cartReducer","userLoginReducer","userRegisterReducer","userInfoReducer","userUpdateReducer","userListReducer","userDeleteReducer","userUpdateAdminReducer","orderCreateReducer","orderDetailsReducer","orderPayReducer","orderListMyReducer","orderListReducer","orderDeliverReducer","dashboardDataReducer","dashboardOrdersDataReducer","dashboardUndeliveredReducer","settingItemsppReducer","updateSettingItemsppReducer","reducer","bikeList","bikeDetails","cart","userLogin","userRegister","userInfoDetails","userUpdate","orderCreate","orderDetails","orderPay","orderListMy","userList","userDelete","userUpdateAdmin","bikeDelete","bikeCreate","bikeUpdate","orderList","orderDeliver","bikeCreateReview","bikeTopRated","dashboardData","dashboardOrdersData","settingItemspp","updateSettingItemspp","dashboardUndelivered","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","shippingAddressFromStorage","initialState","cartItems","shippingAddress","userInfo","middleware","store"],"mappings":"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","sourcesContent":["import { createStore, combineReducers, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { bikeListReducer, bikeReducer, bikeDeleteReducer, bikeCreateReducer, bikeUpdateReducer, bikeCreateReviewReducer, bikeTopRatedReducer } from './reducers/bikeReducers';\r\nimport { cartReducer } from './reducers/cartReducers';\r\nimport { userLoginReducer, userRegisterReducer, userInfoReducer, userUpdateReducer, userListReducer, userDeleteReducer,userUpdateAdminReducer } from './reducers/userReducers';\r\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, orderListMyReducer, orderListReducer, orderDeliverReducer } from './reducers/orderReducers'\r\nimport { dashboardDataReducer, dashboardOrdersDataReducer, dashboardUndeliveredReducer } from './reducers/dashboardReducers'\r\nimport { settingItemsppReducer, updateSettingItemsppReducer } from './reducers/settingsReducers'\r\n\r\nconst reducer = combineReducers({\r\n    bikeList: bikeListReducer,\r\n    bikeDetails: bikeReducer,\r\n    cart: cartReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userInfoDetails: userInfoReducer,\r\n    userUpdate: userUpdateReducer,\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderListMy: orderListMyReducer,\r\n    userList: userListReducer,\r\n    userDelete: userDeleteReducer,\r\n    userUpdateAdmin: userUpdateAdminReducer,\r\n    bikeDelete:bikeDeleteReducer,\r\n    bikeCreate:bikeCreateReducer,\r\n    bikeUpdate: bikeUpdateReducer,\r\n    orderList: orderListReducer,\r\n    orderDeliver: orderDeliverReducer,\r\n    bikeCreateReview: bikeCreateReviewReducer,\r\n    bikeTopRated: bikeTopRatedReducer,\r\n    dashboardData: dashboardDataReducer,\r\n    dashboardOrdersData: dashboardOrdersDataReducer,\r\n    settingItemspp: settingItemsppReducer,\r\n    updateSettingItemspp: updateSettingItemsppReducer,\r\n    dashboardUndelivered: dashboardUndeliveredReducer\r\n});\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {}\r\n\r\n\r\nconst initialState = {\r\n    cart: { \r\n        cartItems: cartItemsFromStorage, \r\n        shippingAddress: shippingAddressFromStorage \r\n    },\r\n    userLogin: {userInfo: userInfoFromStorage},\r\n\r\n\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    reducer, initialState, composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;"]},"metadata":{},"sourceType":"module"}