{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\realmadrid\\\\Desktop\\\\BikeShop-2\\\\BikeShop\\\\frontend\\\\src\\\\layout\\\\RegisterScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Form, Button, Row, Col, Card } from 'react-bootstrap';\nimport FormContainer from '../components/FormContainer';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { register } from '../actions/userAction';\n\nconst RegisterScreen = ({\n  location,\n  history\n}) => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState(null);\n  const dispatch = useDispatch(); //get user register state\n\n  const userRegister = useSelector(state => state.userRegister);\n  const {\n    loading,\n    error,\n    userInfo\n  } = userRegister;\n  const redirect = location.search ? location.search.split('=')[1] : '/'; //if loged in redirect\n\n  useEffect(() => {\n    //if it is not null, logged user\n    if (userInfo) {\n      history.push(redirect);\n    }\n  }, [history, userInfo, redirect]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (password !== confirmPassword) {\n      setMessage('Password do not match');\n    } else {\n      dispatch(register(name, email, password));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormContainer, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), message && /*#__PURE__*/_jsxDEV(Message, {\n          variant: \"danger\",\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this), error && /*#__PURE__*/_jsxDEV(Message, {\n          variant: \"danger\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 23\n        }, this), loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: submitHandler,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"name\",\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              className: \"input-form-style\",\n              type: \"text\",\n              placeholder: \"Name\",\n              value: name,\n              onChange: e => setName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"email\",\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              className: \"input-form-style\",\n              type: \"text\",\n              placeholder: \"E-mail\",\n              value: email,\n              onChange: e => setEmail(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"password\",\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              className: \"input-form-style\",\n              type: \"password\",\n              placeholder: \"Enter password\",\n              value: password,\n              onChange: e => setPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"confirmpassword\",\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              className: \"input-form-style\",\n              type: \"password\",\n              placeholder: \"Confirm password\",\n              value: confirmPassword,\n              onChange: e => setConfirmPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            className: \"btn-dark btn-block\",\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: [\"Have another account \", ' ', /*#__PURE__*/_jsxDEV(Link, {\n              to: redirect ? `/login?redirect=${redirect}` : '/login',\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RegisterScreen, \"6oaIP4kKeomlgmiOBHJsjfcFyZ8=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = RegisterScreen;\nexport default RegisterScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterScreen\");","map":{"version":3,"sources":["C:/Users/realmadrid/Desktop/BikeShop-2/BikeShop/frontend/src/layout/RegisterScreen.js"],"names":["React","useEffect","useState","Link","useDispatch","useSelector","Form","Button","Row","Col","Card","FormContainer","Message","Loader","register","RegisterScreen","location","history","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","message","setMessage","dispatch","userRegister","state","loading","error","userInfo","redirect","search","split","push","submitHandler","e","preventDefault","target","value"],"mappings":"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","sourcesContent":["import React,{ useEffect, useState} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Form, Button, Row, Col, Card } from 'react-bootstrap'\r\nimport FormContainer from '../components/FormContainer'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { register } from '../actions/userAction'\r\n\r\n\r\nconst RegisterScreen = ({location, history}) => {\r\n    const[name, setName] = useState('')\r\n    const[email, setEmail] = useState('')\r\n    const[password, setPassword] = useState('')\r\n    const[confirmPassword, setConfirmPassword] = useState('')\r\n    const[message, setMessage] = useState(null)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    //get user register state\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const { loading, error, userInfo } = userRegister\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    //if loged in redirect\r\n    useEffect(()=>{\r\n        //if it is not null, logged user\r\n         if(userInfo){\r\n             history.push(redirect)\r\n         }\r\n    },[history, userInfo, redirect])\r\n\r\n    const submitHandler = (e)=>{\r\n        e.preventDefault()\r\n        if(password !== confirmPassword){\r\n            setMessage('Password do not match')\r\n        }\r\n        else{\r\n            dispatch(register(name, email, password))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <Card>\r\n            <Card.Body>\r\n            <h3>Sign Up</h3>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Control \r\n                        className='input-form-style' \r\n                        type='text' \r\n                        placeholder='Name' \r\n                        value={name} \r\n                        onChange={(e) => setName(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Control \r\n                        className='input-form-style' \r\n                        type='text' \r\n                        placeholder='E-mail' \r\n                        value={email} \r\n                        onChange={(e) => setEmail(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='password'>\r\n                    <Form.Control \r\n                        className='input-form-style'\r\n                        type='password' \r\n                        placeholder='Enter password' \r\n                        value={password} \r\n                        onChange={(e) => setPassword(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='confirmpassword'>\r\n                    <Form.Control \r\n                        className='input-form-style'\r\n                        type='password' \r\n                        placeholder='Confirm password' \r\n                        value={confirmPassword} \r\n                        onChange={(e) => setConfirmPassword(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n                <Button type='submit' className='btn-dark btn-block'>Register</Button>\r\n            </Form>\r\n            <Row>\r\n                <Col>\r\n                    Have another account {' '}\r\n                    <Link to={redirect ? `/login?redirect=${redirect}`:'/login'}>Login</Link>\r\n                </Col>\r\n            </Row>\r\n            </Card.Body>\r\n            </Card>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default RegisterScreen\r\n"]},"metadata":{},"sourceType":"module"}