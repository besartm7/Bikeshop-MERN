{"ast":null,"code":"import axios from 'axios';\nimport { SETTING_ITEMSPP_REQUEST, SETTING_ITEMSPP_SUCCESS, SETTING_ITEMSPP_FAIL, SETTING_ITEMSPP_UPDATE_REQUEST, SETTING_ITEMSPP_UPDATE_SUCCESS, SETTING_ITEMSPP_UPDATE_FAIL } from '../constants/settingConstants';\nexport const getItemspp = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: SETTING_ITEMSPP_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get('/api/settings/itemspp', config);\n    dispatch({\n      type: SETTING_ITEMSPP_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: SETTING_ITEMSPP_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const updateItemspp = itemspp => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: SETTING_ITEMSPP_UPDATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put('/api/settings/itemspp', itemspp, config);\n    dispatch({\n      type: SETTING_ITEMSPP_UPDATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: SETTING_ITEMSPP_UPDATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/realmadrid/Desktop/BikeShop/frontend/src/actions/settingsAction.js"],"names":["axios","SETTING_ITEMSPP_REQUEST","SETTING_ITEMSPP_SUCCESS","SETTING_ITEMSPP_FAIL","SETTING_ITEMSPP_UPDATE_REQUEST","SETTING_ITEMSPP_UPDATE_SUCCESS","SETTING_ITEMSPP_UPDATE_FAIL","getItemspp","dispatch","getState","type","userLogin","userInfo","config","headers","Authorization","token","data","get","payload","error","response","message","updateItemspp","itemspp","put"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,uBADJ,EAEIC,uBAFJ,EAGIC,oBAHJ,EAIIC,8BAJJ,EAKIC,8BALJ,EAMIC,2BANJ,QAOO,+BAPP;AASA,OAAO,MAAMC,UAAU,GAAG,MAAM,OAAMC,QAAN,EAAgBC,QAAhB,KAA4B;AACxD,MAAI;AACAD,IAAAA,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAAET;AAAP,KAAD,CAAR;AACA,UAAM;AAAEU,MAAAA,SAAS,EAAE;AAAEC,QAAAA;AAAF;AAAb,QAA8BH,QAAQ,EAA5C;AAEA,UAAMI,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE;AACL,wBAAe,kBADV;AAELC,QAAAA,aAAa,EAAG,UAASH,QAAQ,CAACI,KAAM;AAFnC;AADE,KAAf;AAMA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMjB,KAAK,CAACkB,GAAN,CAAU,uBAAV,EAAmCL,MAAnC,CAAvB;AACAL,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAER,uBADD;AAELiB,MAAAA,OAAO,EAAEF;AAFJ,KAAD,CAAR;AAIH,GAfD,CAeE,OAAOG,KAAP,EAAc;AACZZ,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEP,oBADD;AAELgB,MAAAA,OAAO,EAAEC,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OAAtC,GAAgDF,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OAApE,GAA8EF,KAAK,CAACE;AAFxF,KAAD,CAAR;AAIH;AACJ,CAtBM;AAwBP,OAAO,MAAMC,aAAa,GAAIC,OAAD,IAAa,OAAMhB,QAAN,EAAgBC,QAAhB,KAA4B;AAClE,MAAI;AACAD,IAAAA,QAAQ,CAAC;AAACE,MAAAA,IAAI,EAAEN;AAAP,KAAD,CAAR;AACA,UAAM;AAAEO,MAAAA,SAAS,EAAE;AAAEC,QAAAA;AAAF;AAAb,QAA8BH,QAAQ,EAA5C;AAEA,UAAMI,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE;AACL,wBAAe,kBADV;AAELC,QAAAA,aAAa,EAAG,UAASH,QAAQ,CAACI,KAAM;AAFnC;AADE,KAAf;AAOA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMjB,KAAK,CAACyB,GAAN,CAAU,uBAAV,EAAmCD,OAAnC,EAA4CX,MAA5C,CAAvB;AAEAL,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEL,8BADD;AAELc,MAAAA,OAAO,EAAEF;AAFJ,KAAD,CAAR;AAIH,GAjBD,CAiBE,OAAOG,KAAP,EAAc;AACZZ,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEJ,2BADD;AAELa,MAAAA,OAAO,EAAEC,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OAAtC,GAAgDF,KAAK,CAACC,QAAN,CAAeJ,IAAf,CAAoBK,OAApE,GAA8EF,KAAK,CAACE;AAFxF,KAAD,CAAR;AAIH;AACJ,CAxBM","sourcesContent":["import axios from 'axios'\r\nimport { \r\n    SETTING_ITEMSPP_REQUEST,\r\n    SETTING_ITEMSPP_SUCCESS,\r\n    SETTING_ITEMSPP_FAIL,\r\n    SETTING_ITEMSPP_UPDATE_REQUEST,\r\n    SETTING_ITEMSPP_UPDATE_SUCCESS,\r\n    SETTING_ITEMSPP_UPDATE_FAIL\r\n} from '../constants/settingConstants';\r\n\r\nexport const getItemspp = () => async(dispatch, getState) =>{\r\n    try {\r\n        dispatch({type: SETTING_ITEMSPP_REQUEST});\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type':'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n        const { data } = await axios.get('/api/settings/itemspp', config);\r\n        dispatch({\r\n            type: SETTING_ITEMSPP_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: SETTING_ITEMSPP_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateItemspp = (itemspp) => async(dispatch, getState) =>{\r\n    try {\r\n        dispatch({type: SETTING_ITEMSPP_UPDATE_REQUEST});\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type':'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n        }\r\n\r\n        const { data } = await axios.put('/api/settings/itemspp', itemspp, config);\r\n\r\n        dispatch({\r\n            type: SETTING_ITEMSPP_UPDATE_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: SETTING_ITEMSPP_UPDATE_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}