{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\realmadrid\\\\Desktop\\\\BikeShop-2\\\\BikeShop\\\\frontend\\\\src\\\\components\\\\UsersChart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Doughnut } from 'react-chartjs-2';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getDashboardUsersData } from '../actions/dashboardAction';\nconst data = {\n  labels: ['Total', 'Admins', 'Users', 'New'],\n  datasets: [{\n    label: '# of Votes',\n    data: [12, 19, 3, 6],\n    backgroundColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n    borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n    borderWidth: 1\n  }]\n};\n\nconst UsersChart = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const dashboardData = useSelector(state => state.dashboardData);\n  const {\n    loading,\n    error,\n    usersdata\n  } = dashboardData;\n  useEffect(() => {\n    dispatch(getDashboardUsersData());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: \"Users\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Doughnut, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(UsersChart, \"CLKogDymZjYA1QYmjOWWyk0FNho=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = UsersChart;\nexport default UsersChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"UsersChart\");","map":{"version":3,"sources":["C:/Users/realmadrid/Desktop/BikeShop-2/BikeShop/frontend/src/components/UsersChart.js"],"names":["React","useEffect","Doughnut","useDispatch","useSelector","getDashboardUsersData","data","labels","datasets","label","backgroundColor","borderColor","borderWidth","UsersChart","dispatch","dashboardData","state","loading","error","usersdata"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,qBAAT,QAAsC,4BAAtC;AAEA,MAAMC,IAAI,GAAG;AACXC,EAAAA,MAAM,EAAE,CAAC,OAAD,EAAU,QAAV,EAAoB,OAApB,EAA6B,KAA7B,CADG;AAEXC,EAAAA,QAAQ,EAAE,CACR;AACEC,IAAAA,KAAK,EAAE,YADT;AAEEH,IAAAA,IAAI,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,CAAT,EAAY,CAAZ,CAFR;AAGEI,IAAAA,eAAe,EAAE,CACf,uBADe,EAEf,uBAFe,EAGf,uBAHe,EAIf,uBAJe,EAKf,wBALe,EAMf,uBANe,CAHnB;AAWEC,IAAAA,WAAW,EAAE,CACX,uBADW,EAEX,uBAFW,EAGX,uBAHW,EAIX,uBAJW,EAKX,wBALW,EAMX,uBANW,CAXf;AAmBEC,IAAAA,WAAW,EAAE;AAnBf,GADQ;AAFC,CAAb;;AA2BA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AAEvB,QAAMC,QAAQ,GAAGX,WAAW,EAA5B;AAEE,QAAMY,aAAa,GAAGX,WAAW,CAACY,KAAK,IAAIA,KAAK,CAACD,aAAhB,CAAjC;AACA,QAAM;AAAEE,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA+BJ,aAArC;AAEAd,EAAAA,SAAS,CAAC,MAAI;AACVa,IAAAA,QAAQ,CAACT,qBAAqB,EAAtB,CAAR;AACH,GAFQ,EAEP,CAACS,QAAD,CAFO,CAAT;AAIF,sBACA;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,6BACI;AAAI,QAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII,QAAC,QAAD;AAAU,MAAA,IAAI,EAAER;AAAhB;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA,kBADA;AAQD,CAnBD;;GAAMO,U;UAEaV,W,EAEOC,W;;;KAJpBS,U;AAqBN,eAAeA,UAAf","sourcesContent":["import React,{useEffect} from 'react'\r\nimport { Doughnut } from 'react-chartjs-2'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getDashboardUsersData } from '../actions/dashboardAction'\r\n\r\nconst data = {\r\n  labels: ['Total', 'Admins', 'Users', 'New'],\r\n  datasets: [\r\n    {\r\n      label: '# of Votes',\r\n      data: [12, 19, 3, 6],\r\n      backgroundColor: [\r\n        'rgba(255, 99, 132, 1)',\r\n        'rgba(54, 162, 235, 1)',\r\n        'rgba(255, 206, 86, 1)',\r\n        'rgba(75, 192, 192, 1)',\r\n        'rgba(153, 102, 255, 1)',\r\n        'rgba(255, 159, 64, 1)',\r\n      ],\r\n      borderColor: [\r\n        'rgba(255, 99, 132, 1)',\r\n        'rgba(54, 162, 235, 1)',\r\n        'rgba(255, 206, 86, 1)',\r\n        'rgba(75, 192, 192, 1)',\r\n        'rgba(153, 102, 255, 1)',\r\n        'rgba(255, 159, 64, 1)',\r\n      ],\r\n      borderWidth: 1,\r\n    },\r\n  ],\r\n}\r\n\r\nconst UsersChart = () => {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n    const dashboardData = useSelector(state => state.dashboardData)\r\n    const { loading, error, usersdata} = dashboardData\r\n\r\n    useEffect(()=>{\r\n        dispatch(getDashboardUsersData())\r\n    },[dispatch])\r\n\r\n  return(\r\n  <>\r\n      <div className='header'>\r\n          <h1 className='title'>Users</h1>\r\n      </div>\r\n      <Doughnut data={data} />\r\n  </>\r\n)\r\n}\r\n\r\nexport default UsersChart\r\n\r\n"]},"metadata":{},"sourceType":"module"}